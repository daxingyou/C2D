{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\Modules/assets\\Script\\Modules\\Utils.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Modules","sourcesContent":["/**\r\n * num是传入的正整数,返回千分位逗号分隔的字符串\r\n * \r\n * @export\r\n * @param {any} num \r\n * @returns \r\n */\r\nexport function getThousandString(num) {\r\n    if (isNaN(num)) num = 0;\r\n    let numString = num.toString();\r\n    let result = \"\";\r\n    while (numString.length > 3) {\r\n        result = \",\" + numString.slice(-3) + result;\r\n        numString = numString.slice(0, numString.length - 3);\r\n    }\r\n    if (numString) { result = numString + result; }\r\n    return result;\r\n}\r\n\r\n/**\r\n * 传入千分位的字符串，返回去除逗号的字符串\r\n * \r\n * @export\r\n * @param {any} str \r\n * @returns \r\n */\r\nexport function getBackNumString(str: string) {\r\n    let list = str.split(\",\");\r\n    str = \"\";\r\n    for (let i = 0; i < list.length; i++) {\r\n        str += list[i];\r\n    }\r\n    return str;\r\n}\r\n\r\n/**\r\n * 传入带小数点的数字字符串，返回去除小数点的数组\r\n * @export\r\n * @param {string} str \r\n * @returns \r\n */\r\nexport function getPointNumString(str: string) {\r\n    let list = str.split(\".\");\r\n    let numList = [];\r\n    for (let i = 0; i < list.length; i++) {\r\n        numList.push(Number(list[i]));\r\n    }\r\n    return numList;\r\n}\r\n\r\n/**\r\n * 传入数字，返回每位数字的组成的数组\r\n * @export\r\n * @param {number} num \r\n * @returns \r\n */\r\nexport function getNumberList(num: number) {\r\n    let numList = num.toString().split(\"\").map((i) => {\r\n        return Number(i);\r\n    });\r\n    return numList;\r\n}\r\n\r\n/**\r\n * 根据时间戳，返回对应时间格式的字符串\r\n * \r\n * @param {string} timestamp  时间戳(字符串类型)\r\n * @param {number} type 1是只获取日期，2是只获取时间,默认都获取（数字类型）\r\n * @returns {string} \r\n */\r\nexport function getDateStringByTimestamp(timestamp: string, type: number) {\r\n    let num = Number(timestamp);\r\n    if (isNaN(num)) return '';\r\n    else {\r\n        let timeDate = new Date();\r\n        timeDate.setTime(num);\r\n        let timeDateString = this.getDateStringByDate(timeDate);\r\n        let timeString = this.getTimeStringByDate(timeDate);\r\n        if (type === 1) {\r\n            return timeDateString;\r\n        } else if (type === 2) {\r\n            return timeString;\r\n        } else {\r\n            return timeDateString + ' ' + timeString;\r\n        }\r\n    }\r\n}\r\n/**\r\n * 根据时间对象获取日期\r\n * \r\n * @param {Date} nowDate 时间对象\r\n * @param {string} connector 分隔符\r\n * @returns {string}\r\n */\r\nexport function getDateStringByDate(nowDate: Date, connector: string) {\r\n    if (nowDate instanceof Date) {\r\n        if (!connector) {\r\n            connector = \"-\";\r\n        }\r\n        let year = nowDate.getFullYear() + '';\r\n        let month = nowDate.getMonth() + 1;\r\n        let monthStr = month + '';\r\n        if (month < 10) monthStr = \"0\" + month;\r\n        let day = nowDate.getDate();\r\n        let dayStr = day + '';\r\n        if (day < 10) dayStr = \"0\" + day;\r\n        return year + connector + monthStr + connector + dayStr;\r\n    }\r\n    return '';\r\n}\r\n/**\r\n * 根据时间对象获取时间\r\n * \r\n * @param {Date} nowDate 时间对象\r\n * @param {string} connector 分隔符\r\n * @returns {string}\r\n */\r\nexport function getTimeStringByDate(nowDate, connector) {\r\n    if (nowDate instanceof Date) {\r\n        if (!connector) {\r\n            connector = \":\";\r\n        }\r\n        let hour = nowDate.getHours();\r\n        let hourStr = hour + '';\r\n        if (hour < 10) hourStr = \"0\" + hour;\r\n        let minute = nowDate.getMinutes();\r\n        let minuteStr = minute + '';\r\n        if (minute < 10) minuteStr = \"0\" + minute;\r\n        // let second = nowDate.getSeconds();\r\n        // let secondStr = second + '';\r\n        // if (second < 10) secondStr = \"0\" + second;\r\n        return hourStr + connector + minuteStr /*+ connector + secondStr*/;\r\n    }\r\n    return '';\r\n}\r\n\r\n/**\r\n * 获取倒计时字符串\r\n * \r\n * @param {number} time 倒计时毫秒数\r\n * @param {number} type 返回类型(默认空返回时分秒，1返回分秒)\r\n * @returns {string}\r\n */\r\nexport function getCountDownString(time: number, type: number) {\r\n    let obj = this.getCountDownObj(time);\r\n    if (obj === null) return '';\r\n    else {\r\n        let str = '';\r\n        if (type === 1) {\r\n            obj.minute += obj.hour * 60;\r\n        } else {\r\n            if (obj.hour > 9) str += obj.hour + ':';\r\n            else str += '0' + obj.hour + ':';\r\n        }\r\n\r\n        if (obj.minute > 9) str += obj.minute + ':';\r\n        else str += '0' + obj.minute + ':';\r\n        if (obj.second > 9) str += obj.second;\r\n        else str += '0' + obj.second;\r\n        return str;\r\n    }\r\n}\r\n\r\n/**\r\n * 返回len位有效数字的数字，向下取整\r\n * @export\r\n * @param {number} num 数字\r\n * @param {number} len 最长的长度\r\n * @returns \r\n */\r\nexport function getEffectiveNumbers(num: number, len: number) {//\r\n    let integerNum = Math.floor(num);\r\n    let stringNum = num.toString();\r\n    if (num === integerNum) {//判断为没有小数点\r\n        if (stringNum.length < len + 1) {//判断位数是否超过4位\r\n            return num;\r\n        } else {\r\n            return Number(stringNum.slice(0, len));\r\n        }\r\n    } else {\r\n        if (stringNum.length < len + 2) {//判断位数是否超过5位，有一位是小数点\r\n            return num;\r\n        } else {\r\n            return Number(stringNum.slice(0, len + 1));\r\n        }\r\n    }\r\n}\r\n/**\r\n * 传入一个数字，返回带单位的4位有效数字和单位，有小数点\r\n * @export\r\n * @param {number} num \r\n * @param {boolean} [noSpace=true] 没有空格\r\n * @returns \r\n */\r\nexport function getShowNumberString(num: number, noSpace: boolean = true) {\r\n    if (num >= 10000) {\r\n        let numStr = this.getEffectiveNumbers(num / 10000, 4);\r\n        numStr += \"万\";\r\n        return numStr;\r\n    } else {\r\n        return num + '';\r\n    }\r\n}\r\n/**\r\n * 复制文本到剪切板\r\n * \r\n * @export\r\n * @param {string} text 需要复制的文本\r\n */\r\nexport function copyToClipboard(text: string): void {\r\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_ANDROID) {\r\n        jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"copyToClipboard\", \"(Ljava/lang/String;)V\", text);\r\n    } else if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n        jsb.reflection.callStaticMethod(\"AppController\", \"copyToClipboard:\", text);\r\n    }\r\n    else {\r\n        cc.log(\"该方法只支持原生平台\");\r\n    }\r\n}\r\n\r\n/**\r\n * 用默认浏览器打开指定url\r\n * \r\n * @export\r\n * @param {string} url url地址\r\n */\r\nexport function openBrowser(url: string): void {\r\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_ANDROID) {\r\n        jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"openBrowser\", \"(Ljava/lang/String;)V\", url);\r\n    } else if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n        jsb.reflection.callStaticMethod(\"AppController\", \"openBrowser:\", url);\r\n    }\r\n    else {\r\n        cc.log(\"该方法只支持原生平台\");\r\n    }\r\n}\r\n"]}