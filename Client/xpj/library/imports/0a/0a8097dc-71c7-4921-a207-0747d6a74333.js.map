{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\Modules/assets\\Script\\Modules\\IMGManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Modules","sourcesContent":["import ENCManager from './ENCManager';\r\n/**\r\n * 图片动态加载管理类\r\n * \r\n * @export\r\n * @class IMGManager\r\n */\r\nexport default class IMGManager {\r\n    private static _instance: IMGManager = null;\r\n    private constructor() { }\r\n    /**\r\n     * 获取IMGManager单例对象\r\n     * \r\n     * @static\r\n     * @returns {IMGManager} \r\n     * @memberof IMGManager\r\n     */\r\n    static getInstance(): IMGManager {\r\n        if (IMGManager._instance === null) {\r\n            IMGManager._instance = new IMGManager();\r\n        }\r\n        return IMGManager._instance;\r\n    }\r\n    /**\r\n     * 头像数组集合\r\n     * \r\n     * @type {cc.SpriteFrame[]}\r\n     * @memberof IMGManager\r\n     */\r\n    headList: cc.SpriteFrame[] = [];\r\n    /**\r\n     * 扑克牌图集\r\n     * \r\n     * @type {cc.SpriteFrame[][]}\r\n     * @memberof IMGManager\r\n     */\r\n    pokerList: cc.SpriteFrame[][] = [];\r\n\r\n\r\n    async initIMG(): Promise<void> {\r\n        for (let i = 0; i < 5; i++) {\r\n            this.pokerList.push(new Array(13));\r\n        }\r\n        await this.initSystemHead();\r\n        await this.initPoker();\r\n    }\r\n\r\n    /**\r\n     * 初始化，动态加载系统头像\r\n     * \r\n     * @returns {Promise<void>} \r\n     * @memberof IMGManager\r\n     */\r\n    private initSystemHead(): Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            cc.loader.loadRes(\"Atlas/head\", cc.SpriteAtlas, (err, atlas: cc.SpriteAtlas) => {\r\n                if (err) {\r\n                    reject(err.message);\r\n                }\r\n                else {\r\n                    atlas.getSpriteFrames().forEach((spriteFrame: cc.SpriteFrame) => {\r\n                        let num = parseInt(spriteFrame.name) - 1;\r\n                        this.headList[num] = spriteFrame;\r\n                    }, this);\r\n                    resolve();\r\n                }\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * 初始化扑克牌\r\n     * \r\n     * @returns {Promise<void>} \r\n     * @memberof IMGManager\r\n     */\r\n    private initPoker(): Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            cc.loader.loadRes(\"Atlas/poker\", cc.SpriteAtlas, (err, atlas: cc.SpriteAtlas) => {\r\n                if (err) {\r\n                    reject(err.message);\r\n                }\r\n                else {\r\n                    atlas.getSpriteFrames().forEach((spriteFrame: cc.SpriteFrame) => {\r\n                        let num = parseInt(spriteFrame.name);\r\n                        if (num < 2) {\r\n                            this.pokerList[0][num] = spriteFrame;\r\n                        } else if (num >= 2 && num < 15) {\r\n                            this.pokerList[1][num - 2] = spriteFrame;\r\n                        } else if (num >= 15 && num < 28) {\r\n                            this.pokerList[2][num - 15] = spriteFrame;\r\n                        } else if (num >= 28 && num < 41) {\r\n                            this.pokerList[3][num - 28] = spriteFrame;\r\n                        } else if (num >= 41 && num < 54) {\r\n                            this.pokerList[4][num - 41] = spriteFrame;\r\n                        } else {\r\n                            cc.error('poker index error');\r\n                        }\r\n                    }, this);\r\n                    resolve();\r\n                }\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * 根据id取头像图集\r\n     * \r\n     * @param {number} id \r\n     * @returns \r\n     * @memberof IMGManager\r\n     */\r\n    getHeadById(id: number): cc.SpriteFrame {\r\n        if (this.headList.length > id) {\r\n            return this.headList[id];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * 根据id获取扑克牌图集\r\n     * \r\n     * @param {number} id \r\n     * @returns \r\n     * @memberof IMGManager\r\n     */\r\n    getCardSpriteFrameById(id: number) {\r\n        if (id < 2) {\r\n            return this.pokerList[0][id];\r\n        } else if (id >= 2 && id < 15) {\r\n            return this.pokerList[1][id - 2];\r\n        } else if (id >= 15 && id < 28) {\r\n            return this.pokerList[2][id - 15];\r\n        } else if (id >= 28 && id < 41) {\r\n            return this.pokerList[3][id - 28];\r\n        } else if (id >= 41 && id < 54) {\r\n            return this.pokerList[4][id - 41];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * 释放图片管理器的资源\r\n     * \r\n     * @memberof IMGManager\r\n     */\r\n    destroySelf(): void {\r\n        while (this.headList.length > 0) {\r\n            this.release(this.headList.pop());\r\n        }\r\n        while (this.pokerList.length > 0) {\r\n            let list = this.pokerList.pop();\r\n            while (list.length > 0) {\r\n                this.release(list.pop());\r\n            }\r\n        }\r\n        IMGManager._instance = null;\r\n    }\r\n\r\n    /**\r\n     * 释放资源及其所有的引用\r\n     * \r\n     * @private\r\n     * @param {(cc.Asset | cc.RawAsset | string)} owner 需要释放的资源\r\n     * @memberof IMGManager\r\n     */\r\n    private release(owner: cc.Asset | cc.RawAsset | string): void {\r\n        let deps = cc.loader.getDependsRecursively(owner);\r\n        cc.loader.release(deps);\r\n    }\r\n}"]}