{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\Script\\SceneScript\\Game/assets\\Script\\SceneScript\\Game\\MJ_HandList.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Script\\SceneScript\\Game","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\nimport MJ_Card from './MJ_Card';\r\nimport MJ_Card_Group from './MJ_Card_Group';\r\nimport MJCanvas from './MJCanvas';\r\nimport * as dd from './../../Modules/ModuleManager';\r\nimport * as MJ_Help from './MJ_Help';\r\n\r\n@ccclass\r\nexport default class MJ_HandList extends cc.Component {\r\n    /**\r\n     * 手牌节点\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof MJ_HandList\r\n     */\r\n    @property(cc.Node)\r\n    node_hand: cc.Node = null;\r\n\r\n    /**\r\n     * 开始点击的位置\r\n     * \r\n     * @type {cc.Vec2}\r\n     * @memberof MJ_HandList\r\n     */\r\n    _firstPos: cc.Vec2 = cc.p(0, 0);\r\n    /**\r\n     * 结束点击的位置\r\n     * \r\n     * @type {cc.Vec2}\r\n     * @memberof MJ_HandList\r\n     */\r\n    _endPos: cc.Vec2 = cc.p(0, 0);\r\n    /**\r\n     * canvas脚本\r\n     * \r\n     * @type {MJCanvas}\r\n     * @memberof MJ_HandList\r\n     */\r\n    _canvasTarget: MJCanvas = null;\r\n\r\n    /**\r\n     * 自己的脚本\r\n     * \r\n     * @memberof MJ_HandList\r\n     */\r\n    _mineScript = null;\r\n    /**\r\n    * 手牌节点列表\r\n    * \r\n    * @type {cc.Node[]}\r\n    * @memberof MJ_Play\r\n    */\r\n    _hand_card_list: cc.Node[] = [];\r\n\r\n    /**\r\n     * 座位信息\r\n     * \r\n     * @type {SeatVo}\r\n     * @memberof MJ_HandList\r\n     */\r\n    _seatInfo: SeatVo = null;\r\n    /**\r\n     * \r\n     * 点击选中的牌\r\n     * @type {cc.Node}\r\n     * @memberof MJ_Play\r\n     */\r\n    _selectCard: cc.Node = null;\r\n\r\n    _selectCardPos: cc.Vec2 = cc.v2(0, 0);\r\n    _selectCardZIndex: number = 0;\r\n    /**\r\n     * 移动偏移量\r\n     * @type {number}\r\n     * @memberof MJ_HandList\r\n     */\r\n    _moveDelta: number = 0;\r\n    /**\r\n     * \r\n     * 显示换三张的牌的状态 0未显示 1已显示\r\n     * @type {number}\r\n     * @memberof MJ_HandList\r\n     */\r\n    _swapState: number = 0;\r\n\r\n    /**\r\n     * 出牌可以听牌的列表\r\n     * \r\n     * @memberof MJ_HandList\r\n     */\r\n    _tingsList: number[] = [];\r\n    /**\r\n     * _tingsList 的对应列表，打出对应的那张牌，可以胡的牌的列表\r\n     * \r\n     * @memberof MJ_HandList\r\n     */\r\n    _huList = [];\r\n\r\n    wans: CardAttrib[] = [];\r\n    tongs: CardAttrib[] = [];\r\n    tiaos: CardAttrib[] = [];\r\n    _moPaiCardId: number = -1;\r\n    /**\r\n     * 自己是否能出牌\r\n     * @type {boolean}\r\n     * @memberof MJ_HandList\r\n     */\r\n    _isCanPlay: boolean = false;\r\n\r\n    /**\r\n     * 触摸选中这张牌\r\n     * \r\n     * @returns \r\n     * @memberof MJ_HandList\r\n     */\r\n    setSelectCard(cardNode: cc.Node) {\r\n        this._canvasTarget.showTingPai(false);\r\n        if (cardNode && cardNode.isValid) {\r\n            cardNode.color = cc.Color.WHITE;\r\n            let hcs: MJ_Card = cardNode.getComponent('MJ_Card');\r\n            //如果是换牌阶段\r\n            if (dd.gm_manager.mjGameData.tableBaseVo.gameState === MJ_Help.MJ_GameState.STATE_TABLE_SWAPCARD) {\r\n                if (hcs._isSelect) {//当前牌处于选中状态\r\n                    hcs.showSelectCard(false);\r\n                    //从数组中减去\r\n                    this._mineScript.selectSwapCard(hcs._cardId, -1);\r\n                } else {\r\n                    let isSelect = this._mineScript.selectSwapCard(hcs._cardId, 1);\r\n                    hcs.showSelectCard(isSelect);\r\n                }\r\n            } else {\r\n                //如果这张牌不能打\r\n                if (hcs._isShowMask) {\r\n                    cc.log('不能打这张牌');\r\n                    hcs.showSelectCard(false);\r\n                } else {\r\n                    if (hcs._isSelect) {//当前牌处于选中状态\r\n                        //如果拖动牌，移动距离大于80,但是距离小于150，就不打出这张牌\r\n                        if (this._moveDelta > 80) {\r\n                            let d = cc.pDistance(this._firstPos, this._endPos);\r\n                            let dy = this._endPos.y - this._firstPos.y;\r\n                            if (d > 150 && dy > 80) {\r\n                                cc.log('打出这张牌,拖动距离：' + d + ';拖动高度：' + dy);\r\n                                if (this._seatInfo.seatIndex === dd.gm_manager.mjGameData.tableBaseVo.btIndex) {\r\n                                    this._canvasTarget.sendOutCard(hcs._cardId);\r\n                                    //移除节点\r\n                                    this.deleteCardByNode(cardNode);\r\n                                }\r\n                            } else {\r\n                                cc.log('选中这张牌');\r\n                                this.selectCardByCardId(hcs._cardId);\r\n                                this._canvasTarget.showTSCard(hcs._cardId);\r\n                            }\r\n                        } else {\r\n                            cc.log('打出这张牌');\r\n                            if (this._seatInfo.seatIndex === dd.gm_manager.mjGameData.tableBaseVo.btIndex) {\r\n                                this._canvasTarget.sendOutCard(hcs._cardId);\r\n                                //移除节点\r\n                                this.deleteCardByNode(cardNode);\r\n                            } else {\r\n                                hcs.showSelectCard(false);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        //如果当前牌没有选中\r\n                        let d = cc.pDistance(this._firstPos, this._endPos);\r\n                        let dy = this._endPos.y - this._firstPos.y;\r\n                        if (d > 200 && dy > 80) {\r\n                            cc.log('打出这张牌,拖动距离：' + d + ';拖动高度：' + dy);\r\n                            if (this._seatInfo.seatIndex === dd.gm_manager.mjGameData.tableBaseVo.btIndex) {\r\n                                this._canvasTarget.sendOutCard(hcs._cardId);\r\n                                //移除节点\r\n                                this.deleteCardByNode(cardNode);\r\n                            }\r\n                        } else {\r\n                            cc.log('选中这张牌');\r\n                            this.selectCardByCardId(hcs._cardId);\r\n                            this._canvasTarget.showTSCard(hcs._cardId);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 点击开始\r\n     * \r\n     * @memberof MJ_HandList\r\n     */\r\n    touchBegan = (event: cc.Event.EventTouch) => {\r\n        event.stopPropagation();\r\n        if (event.getTouches().length > 1) return;\r\n        if (dd.gm_manager.touchTarget || !this._isCanPlay) {\r\n            dd.gm_manager.touchTarget = null;\r\n            if (this._selectCard) {\r\n                this._selectCard.setPosition(this._selectCardPos);\r\n                this._selectCard.zIndex = this._selectCardZIndex;\r\n                this._selectCard = null;\r\n            }\r\n            return;\r\n        }\r\n        dd.gm_manager.touchTarget = event.touch;\r\n        let touches = event.getTouches();\r\n        this._firstPos = touches[0].getLocation();\r\n        let cardNode = this.getCardNodeByTouch(this._firstPos);\r\n        if (cardNode) {\r\n            this._selectCardPos = cardNode.getPosition();\r\n            let hcs: MJ_Card = cardNode.getComponent('MJ_Card');\r\n            if (!hcs._isShowMask) {\r\n                this._selectCard = cardNode;\r\n                this._selectCard.color = cc.Color.GRAY;\r\n                //设置层级数据\r\n                this._selectCardZIndex = this._selectCard.zIndex;\r\n                this._selectCard.zIndex = 99;\r\n            } else {\r\n                this._selectCard = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 点击移动\r\n     * \r\n     * @memberof MJ_HandList\r\n     */\r\n    touchMoved = (event: cc.Event.EventTouch) => {\r\n        event.stopPropagation();\r\n        if (event.getTouches().length > 1) return;\r\n        if (dd.gm_manager.touchTarget === event.touch) {\r\n            if (this.node.isValid) {\r\n                if (this._selectCard) {\r\n                    if (this._isCanPlay) {\r\n                        let touches = event.getTouches();\r\n                        this._endPos = touches[0].getLocation();\r\n\r\n                        let delta = touches[0].getDelta();\r\n                        let cPos = this._selectCard.getPosition();\r\n                        let pos = cc.pAdd(delta, cPos);\r\n                        this._selectCard.setPosition(pos);\r\n                        let dx = Math.abs(delta.x);\r\n                        let dy = Math.abs(delta.y);\r\n                        this._moveDelta += Math.sqrt(dx * dx + dy * dy);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 点击结束\r\n     * \r\n     * @memberof MJ_HandList\r\n     */\r\n    touchEnd = (event: cc.Event.EventTouch) => {\r\n        event.stopPropagation();\r\n        if (event.getTouches().length > 1) return;\r\n        if (dd.gm_manager.touchTarget === event.touch) {\r\n            if (this._selectCard) {\r\n                //重置这张牌的位置和层级\r\n                this._selectCard.setPosition(this._selectCardPos);\r\n                this._selectCard.zIndex = this._selectCardZIndex;\r\n                //如果自己能出牌\r\n                if (this._isCanPlay) {\r\n                    let touches = event.getTouches();\r\n                    this._endPos = touches[0].getLocation();\r\n                    this.setSelectCard(this._selectCard);\r\n                    this._moveDelta = 0;\r\n                }\r\n                this._selectCard = null;\r\n            }\r\n            dd.gm_manager.touchTarget = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加节点点击事件\r\n     * \r\n     * @memberof MJ_HandList\r\n     */\r\n    onTouchEvent() {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.touchBegan, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoved, this);\r\n    }\r\n\r\n    onLoad() {\r\n        for (let i = 1; i < 4; i++) {\r\n            for (let j = 1; j < 10; j++) {\r\n                let card: CardAttrib = {\r\n                    cardId: 0,\r\n                    suit: i,\r\n                    point: j\r\n                };\r\n                switch (i) {\r\n                    case 1: this.wans.push(card); break;\r\n                    case 2: this.tongs.push(card); break;\r\n                    case 3: this.tiaos.push(card); break;\r\n                    default: break;\r\n                }\r\n            }\r\n        }\r\n        this._canvasTarget = dd.ui_manager.getCanvasNode().getComponent(\"MJCanvas\");\r\n        this.onTouchEvent();\r\n    }\r\n\r\n    initData() {\r\n        if (!this._canvasTarget) {\r\n            this._canvasTarget = dd.ui_manager.getCanvasNode().getComponent('MJCanvas');\r\n        }\r\n        this._hand_card_list.length = 0;\r\n        this.node_hand.removeAllChildren();\r\n    }\r\n\r\n    /**\r\n     * 获取是否可以出牌\r\n     * @memberof MJ_HandList\r\n     */\r\n    getIsCP() {\r\n        let isCP = false;\r\n        switch (dd.gm_manager.mjGameData.tableBaseVo.gameState) {\r\n            case MJ_Help.MJ_GameState.STATE_TABLE_SWAPCARD:\r\n                if (this._seatInfo.swapCards) {\r\n                    isCP = false;\r\n                } else {\r\n                    isCP = true;\r\n                }\r\n                break;\r\n            case MJ_Help.MJ_GameState.STATE_TABLE_OUTCARD:\r\n                //如果表态人是自己\r\n                if (this._seatInfo.btState === MJ_Help.MJ_Act_State.ACT_STATE_WAIT &&\r\n                    this._seatInfo.seatIndex === dd.gm_manager.mjGameData.tableBaseVo.btIndex) {\r\n                    isCP = true;\r\n                } else {\r\n                    isCP = false;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return isCP;\r\n    }\r\n\r\n    /**\r\n     * 刷新手牌列表\r\n     * \r\n     * @param {SeatVo} seatInfo \r\n     * @memberof MJ_HandList\r\n     */\r\n    updateHandList(seatInfo: SeatVo, target) {\r\n        if (!this._canvasTarget) {\r\n            this._canvasTarget = dd.ui_manager.getCanvasNode().getComponent('MJCanvas');\r\n        }\r\n        //如果在准备阶段，就初始化数据\r\n        if (dd.gm_manager.mjGameData.tableBaseVo.gameState <= MJ_Help.MJ_GameState.STATE_TABLE_READY) {\r\n            this.initData();\r\n        }\r\n        this._mineScript = target;\r\n        this._seatInfo = seatInfo;\r\n        this._isCanPlay = this.getIsCP();\r\n        let isUnSuit = this.getIsUnSuit();\r\n        //移动其他手牌\r\n        let handCards = [];\r\n        if (this._seatInfo.handCards) {\r\n            handCards = this._seatInfo.handCards;\r\n        }\r\n        //如果摸牌存在，合并到手牌数组中\r\n        if (this._seatInfo.moPaiCard > 0) {\r\n            handCards = handCards.concat(this._seatInfo.moPaiCard);\r\n            this._moPaiCardId = this._seatInfo.moPaiCard;\r\n        }\r\n        //如果不是出牌阶段,移除\r\n        if (dd.gm_manager.mjGameData.tableBaseVo.gameState !== MJ_Help.MJ_GameState.STATE_TABLE_OUTCARD) {\r\n            this._canvasTarget.showTingPai(false);\r\n        }\r\n        this.showHandCard(handCards, this._moPaiCardId, isUnSuit);\r\n        this.deleteNotCard(handCards);\r\n        this.showTingCard(handCards);\r\n        this.showSwapCards();\r\n    }\r\n\r\n    /**\r\n     * 显示换三张的牌\r\n     * \r\n     * @memberof MJ_HandList\r\n     */\r\n    showSwapCards() {\r\n        //如果在定缺阶段,有换三张的牌,\r\n        if (dd.gm_manager.mjGameData.tableBaseVo.gameState === MJ_Help.MJ_GameState.STATE_TABLE_DINGQUE) {\r\n            if (this._swapState === 0) {\r\n                this._swapState = 1;\r\n                if (this._seatInfo.swapCards && this._seatInfo.swapCards.length > 0 && this._seatInfo.unSuit < 1) {\r\n                    for (var i = 0; i < this._seatInfo.swapCards.length; i++) {\r\n                        for (var j = 0; j < this._hand_card_list.length; j++) {\r\n                            let cardNode = this._hand_card_list[j];\r\n                            if (cardNode.tag === this._seatInfo.swapCards[i]) {\r\n                                let hcs: MJ_Card = cardNode.getComponent('MJ_Card');\r\n                                hcs.showSelectCard(true);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            this._swapState = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 显示听牌\r\n     * @param {number[]} handCards 手牌列表\r\n     * @memberof MJ_HandList\r\n     */\r\n    showTingCard(handCards: number[]) {\r\n        this._tingsList.length = 0;\r\n        this._huList.length = 0;\r\n        let isShow = false;\r\n        if (dd.gm_manager.mjGameData.tableBaseVo.gameState === MJ_Help.MJ_GameState.STATE_TABLE_OUTCARD) {\r\n            //只有在 （自己表态）、（游戏出牌）的条件下，才会显示听牌\r\n            if (dd.gm_manager.mjGameData.tableBaseVo.btIndex === this._seatInfo.seatIndex\r\n                && this._seatInfo.btState === MJ_Help.MJ_Act_State.ACT_STATE_WAIT) {\r\n                isShow = true;\r\n            }\r\n        }\r\n        for (var i = 0; i < this._hand_card_list.length; i++) {\r\n            let hcn: cc.Node = this._hand_card_list[i];\r\n            let hcs: MJ_Card = hcn.getComponent('MJ_Card');\r\n            if (isShow) {\r\n                let tings = this.getTingsByCardId(handCards, hcn.tag);\r\n                //如果有听牌的话\r\n                if (tings && tings.length > 0) {\r\n                    this._tingsList.push(hcn.tag);\r\n                    this._huList.push(tings);\r\n                    hcs.showBS(true, 1, -1);\r\n                }\r\n            } else {\r\n                hcs.showBS(false, 1, -1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 显示手牌\r\n     * \r\n     * @param {number[]} handCards 手牌列表\r\n     * @param {number} [moPaiCard]   摸牌\r\n     * @param {boolean} isUnSuit 是否打完定缺\r\n     * @memberof MJ_HandList\r\n     */\r\n    showHandCard(handCards: number[], moPaiCard: number, isUnSuit: boolean) {\r\n        let isMyBreakState = false;\r\n        let isAllSwap = false;\r\n        if (dd.gm_manager.mjGameData.tableBaseVo.gameState === MJ_Help.MJ_GameState.STATE_TABLE_BREAKCARD) {\r\n            isMyBreakState = this.getIsMyBreakState();\r\n        } else if (dd.gm_manager.mjGameData.tableBaseVo.gameState === MJ_Help.MJ_GameState.STATE_TABLE_SWAPCARD) {\r\n            //在换三张阶段，获取是否是自己确定换三张\r\n            isAllSwap = this.getIsAllSwap();\r\n        } else { }\r\n\r\n        for (var i = 0; i < handCards.length; i++) {\r\n            let index = i;\r\n            let cardId = handCards[i];\r\n\r\n            let hnc: cc.Node = this.getCardNodeByCardId(cardId, i);\r\n            if (cardId !== moPaiCard) {\r\n                if (hnc) {\r\n                    //如果拍存在，修正牌的数据\r\n                    this.fixCardNode(hnc, index, isMyBreakState, isAllSwap, isUnSuit);\r\n                } else {\r\n                    this._canvasTarget.showMineCard(cardId, this.node_hand, false, (cardNode: cc.Node) => {\r\n                        let ePos = cc.p((index * (-cardNode.width) - cardNode.width / 2), 0);\r\n                        cardNode.setPosition(ePos);\r\n                        this._hand_card_list.push(cardNode);\r\n                        this.showUnSuit(cardNode, isUnSuit);\r\n                    });\r\n                }\r\n            } else {\r\n                this.showMPCard(index, cardId, hnc, isUnSuit);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 修正牌节数据\r\n     * \r\n     * @memberof MJ_HandList\r\n     */\r\n    fixCardNode(hnc: cc.Node, index: number, isMyBreakState: boolean, isAllSwap: boolean, isUnSuit: boolean) {\r\n        //如果自己出牌\r\n        if (dd.gm_manager.mjGameData.tableBaseVo.gameState === MJ_Help.MJ_GameState.STATE_TABLE_OUTCARD) {\r\n            //只有在 （自己表态）、（自己已经表态）、（游戏出牌）的条件下，才会做动作\r\n            if (dd.gm_manager.mjGameData.tableBaseVo.btIndex === this._seatInfo.seatIndex\r\n                && this._seatInfo.btState !== MJ_Help.MJ_Act_State.ACT_STATE_WAIT) {\r\n                //移动牌的位置\r\n                this.moveCardAct(index, hnc);\r\n            } else {\r\n                //如果是重播\r\n                if (dd.gm_manager.replayMJ === 1) {\r\n                    //移动牌的位置\r\n                    this.moveCardAct(index, hnc);\r\n                }\r\n            }\r\n        } else if (dd.gm_manager.mjGameData.tableBaseVo.gameState === MJ_Help.MJ_GameState.STATE_TABLE_BREAKCARD) {//胡碰杠\r\n            //在杠碰胡阶段，如果自己有杠碰胡，说明牌面有变化，需要移动牌的位置\r\n            if (isMyBreakState) {\r\n                //移动牌的位置\r\n                this.moveCardAct(index, hnc);\r\n            }\r\n        } else if (dd.gm_manager.mjGameData.tableBaseVo.gameState === MJ_Help.MJ_GameState.STATE_TABLE_SWAPCARD) {//换三张\r\n            //如果所有人都换牌了\r\n            if (isAllSwap) {\r\n                //重置牌的位置\r\n                this.moveCardAct(index, hnc, false);\r\n            } else {\r\n                //如果自己换牌了，就移动下位置\r\n                if (this._seatInfo.swapCards) {\r\n                    //移动牌的位置\r\n                    this.moveCardAct(index, hnc);\r\n                }\r\n                //如果自己还没有换牌，就不需要移动位置\r\n            }\r\n        } else if (dd.gm_manager.mjGameData.tableBaseVo.gameState === MJ_Help.MJ_GameState.STATE_TABLE_DINGQUE) {//定缺\r\n            //如果定缺了\r\n            if (this._seatInfo.unSuit && this._seatInfo.unSuit > 0) {\r\n                //重置牌的位置\r\n                this.moveCardAct(index, hnc, false);\r\n            } else {\r\n                //如果刚进入定缺阶段\r\n                if (this._swapState === 0) {\r\n                    //重置牌的位置\r\n                    this.moveCardAct(index, hnc, false);\r\n                }\r\n            }\r\n        } else {\r\n            //如果是重播\r\n            if (dd.gm_manager.replayMJ === 1) {\r\n                //移动牌的位置\r\n                this.moveCardAct(index, hnc);\r\n            }\r\n        }\r\n        this.showUnSuit(hnc, isUnSuit);\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取自己是否有碰杠胡的状态\r\n     * \r\n     * @returns {boolean} \r\n     * @memberof MJ_HandList\r\n     */\r\n    getIsMyBreakState(): boolean {\r\n        let breakSeats = dd.gm_manager.mjGameData.breakSeats;\r\n        if (breakSeats) {\r\n            for (var i = 0; i < breakSeats.length; i++) {\r\n                if (breakSeats[i] === this._seatInfo.seatIndex) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取是否所有人都换牌表态了\r\n     * \r\n     * @memberof MJ_HandList\r\n     */\r\n    getIsAllSwap() {\r\n        let seats = dd.gm_manager.mjGameData.seats;\r\n        for (var i = 0; i < seats.length; i++) {\r\n            if (seats[i] && seats[i].accountId !== '0' && seats[i].btState === MJ_Help.MJ_Act_State.ACT_STATE_WAIT) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 显示位置\r\n     * \r\n     * @param {number} index 插入位置\r\n     * @param {number} cardId 牌的唯一Id\r\n     * @param {cc.Node} mpCard 摸牌节点\r\n     * @param {boolean} isUnSuit 是否打完定缺\r\n     * @memberof MJ_HandList\r\n     */\r\n    showMPCard(index: number, cardId: number, mpCard: cc.Node, isUnSuit: boolean) {\r\n        //如果是自己表态\r\n        if (dd.gm_manager.mjGameData.tableBaseVo.btIndex === this._seatInfo.seatIndex) {\r\n            //如果自己的表态状态在（等待表态），并且有（摸牌），显示摸牌\r\n            if (this._seatInfo.btState === MJ_Help.MJ_Act_State.ACT_STATE_WAIT && this._seatInfo.moPaiCard > 0) {\r\n                if (!mpCard) {\r\n                    this._canvasTarget.showMineCard(this._seatInfo.moPaiCard, this.node_hand, false, (cardNode: cc.Node) => {\r\n                        cardNode.setPosition(cardNode.width, 0);\r\n                        this._hand_card_list.push(cardNode);\r\n                        this.showUnSuit(cardNode, isUnSuit);\r\n                    });\r\n                } else {\r\n                    mpCard.setPosition(mpCard.width, 0);\r\n                }\r\n            } else {\r\n                if (mpCard) {//如果自己已经摸牌表态了，就把摸得这张牌插入到手牌中\r\n                    //只有在 （自己表态）、（自己已经表态）、（游戏出牌）的条件下，才会做动作\r\n                    if (dd.gm_manager.mjGameData.tableBaseVo.gameState === MJ_Help.MJ_GameState.STATE_TABLE_OUTCARD\r\n                        || dd.gm_manager.mjGameData.tableBaseVo.gameState === MJ_Help.MJ_GameState.STATE_TABLE_BREAKCARD) {\r\n                        this.showUnSuit(mpCard, isUnSuit);\r\n                        if (this._seatInfo.btState !== MJ_Help.MJ_Act_State.ACT_STATE_WAIT) {\r\n                            cc.log('-----移动摸牌---' + this._seatInfo);\r\n                            //计算最终的位置进行插牌\r\n                            let ePos = cc.p((index * (-mpCard.width) - mpCard.width / 2), 0);\r\n                            mpCard.setPosition(ePos);\r\n                            mpCard.scale = 0;\r\n                            mpCard.runAction(cc.scaleTo(0.2, 1));\r\n                            this._moPaiCardId = -1;\r\n                        }\r\n                    } else {\r\n                        this.deleteCardNodeByCardId(cardId);\r\n                        //移除节点\r\n                        this.deleteCardByNode(mpCard);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移动牌到目标位置\r\n     * \r\n     * @param {number} index 目标索引位置\r\n     * @param {cc.Node} cardNode 牌节点\r\n     * @memberof MJ_HandList\r\n     */\r\n    moveCardAct(index: number, cardNode: cc.Node, isAct: boolean = true) {\r\n        let ePos = cc.p((index * (-cardNode.width) - cardNode.width / 2), 0);\r\n        let nPos = cardNode.getPosition();\r\n        if (ePos.x !== nPos.x || ePos.y !== nPos.y) {\r\n            if (isAct) {\r\n                let d = cc.pDistance(nPos, ePos);\r\n                cardNode.runAction(cc.moveTo(d / 1000, ePos));\r\n            } else {\r\n                cardNode.setPosition(ePos);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 插牌动作\r\n     * \r\n     * @param {number} index 插入位置\r\n     * @param {cc.Node} cardNode 牌节点\r\n     * @param {cc.Vec2} sPos 起始位置\r\n     * @memberof MJ_HandList\r\n     */\r\n    insertCardAct(index: number, cardNode: cc.Node, sPos: cc.Vec2) {\r\n        let ePos = cc.p((index * (-cardNode.width) - cardNode.width / 2), 0);\r\n        let d = cc.pDistance(sPos, ePos);\r\n        let mTime = d / 1500;\r\n        let action = null;\r\n        if (index > 0) {\r\n            let dTime = 0.3;\r\n            let addH = 0;\r\n            let action1 = cc.spawn(cc.rotateTo(dTime, 20), cc.moveTo(dTime, cc.p(sPos.x, sPos.y + cardNode.height + addH)));\r\n            let move = cc.moveTo(mTime, cc.p(ePos.x, ePos.y + cardNode.height + addH));\r\n            action = cc.sequence(action1, move, cc.rotateTo(0.12, 0), cc.moveTo(dTime, ePos));\r\n        } else {\r\n            action = cc.moveTo(mTime, cc.p(ePos.x, ePos.y));\r\n        }\r\n        cardNode.runAction(action);\r\n    }\r\n    /**\r\n     * 删除不要的牌节点\r\n     * \r\n     * @memberof MJ_HandList\r\n     */\r\n    deleteNotCard(handCards: number[]) {\r\n        for (var i = 0; i < this._hand_card_list.length; i++) {\r\n            let cardNode = this._hand_card_list[i];\r\n            let index = this.getIndexByCardId(cardNode.tag);\r\n            if (index === -1) {\r\n                cc.log('---删除---' + cardNode.tag);\r\n                this._hand_card_list.splice(i, 1);\r\n                //移除节点\r\n                cardNode.removeFromParent(true);\r\n                cardNode.destroy();\r\n                //因为数组减1,所以下标不变\r\n                i -= 1;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 根据节点删除该节点,并从数组中移除\r\n     * @param {cc.Node} cardNode \r\n     * @memberof MJ_HandList\r\n     */\r\n    deleteCardByNode(tagetNode: cc.Node) {\r\n        for (var i = 0; i < this._hand_card_list.length; i++) {\r\n            let cardNode = this._hand_card_list[i];\r\n            if (tagetNode === cardNode) {\r\n                this._hand_card_list.splice(i, 1);\r\n                //移除节点\r\n                cardNode.removeFromParent(true);\r\n                cardNode.destroy();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 根据cardId删除牌节点\r\n     * \r\n     * @param {number} cardId \r\n     * @memberof MJ_HandList\r\n     */\r\n    deleteCardNodeByCardId(cardId: number) {\r\n        for (var i = 0; i < this._hand_card_list.length; i++) {\r\n            let hnc: cc.Node = this._hand_card_list[i];\r\n            if (hnc.tag === cardId) {\r\n                //移除节点\r\n                hnc.removeFromParent(true);\r\n                hnc.destroy();\r\n                this._hand_card_list.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 显示定缺\r\n     * \r\n     * @param {boolean} isUnSuit \r\n     * @memberof MJ_HandList\r\n     */\r\n    showUnSuit(cardNode: cc.Node, isUnSuit: boolean) {\r\n        if (cardNode) {\r\n            let hcs: MJ_Card = cardNode.getComponent('MJ_Card');\r\n            //如果没有定缺的牌了\r\n            if (isUnSuit) {\r\n                hcs.showMask(false);\r\n            } else {\r\n                //如果还有定缺的牌，就先打定缺的牌\r\n                let card: CardAttrib = MJ_Help.getCardById(hcs._cardId);\r\n                if (card.suit === this._seatInfo.unSuit) {\r\n                    hcs.showMask(false);\r\n                } else {\r\n                    hcs.showMask(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据cardId获取牌节点\r\n     * \r\n     * @returns {cc.Node} \r\n     * @memberof MJ_HandList\r\n     */\r\n    getCardNodeByCardId(cardId: number, index: number = 0): cc.Node {\r\n        let cNode: cc.Node = null;\r\n        if (cardId > 0) {\r\n            for (var i = 0; i < this._hand_card_list.length; i++) {\r\n                let hnc: cc.Node = this._hand_card_list[i];\r\n                if (hnc.tag === cardId) {\r\n                    cNode = hnc;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cNode;\r\n    }\r\n\r\n    /**\r\n     * 根据cardId获取手牌位置\r\n     * \r\n     * @param {any} cardId \r\n     * @memberof MJ_HandList\r\n     */\r\n    getIndexByCardId(cardId): number {\r\n        if (cardId === this._seatInfo.moPaiCard) {\r\n            return this._seatInfo.handCards.length;\r\n        }\r\n        for (var i = 0; i < this._seatInfo.handCards.length; i++) {\r\n            if (this._seatInfo.handCards[i] === cardId) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n     * 根据触摸点获取牌节点\r\n     * \r\n     * @param {cc.Vec2} touch \r\n     * @memberof MJ_HandList\r\n     */\r\n    getCardNodeByTouch(touch: cc.Vec2): cc.Node {\r\n        let cNode = null;\r\n        for (let i = 0; i < this._hand_card_list.length; i++) {\r\n            let cardNode: cc.Node = this._hand_card_list[i];\r\n            if (cardNode.isValid) {\r\n                let box = cardNode.getBoundingBoxToWorld();\r\n                if (cc.rectContainsPoint(box, touch)) {//触点在这张牌上\r\n                    cNode = cardNode;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cNode;\r\n    }\r\n\r\n    /**\r\n     * 根据cardId选中牌\r\n     * \r\n     * @param {number} cardId \r\n     * @memberof MJ_HandList\r\n     */\r\n    selectCardByCardId(cardId: number) {\r\n        for (var i = 0; i < this._hand_card_list.length; i++) {\r\n            let hnc: cc.Node = this._hand_card_list[i];\r\n            let hcs: MJ_Card = hnc.getComponent('MJ_Card');\r\n            if (hcs._cardId === cardId) {\r\n                hcs.showSelectCard(true);\r\n                //查找听牌的下标，如果下标不为-1，表示打出这张牌，可以听牌\r\n                let index = this._tingsList.indexOf(cardId);\r\n                if (index !== -1) {\r\n                    //显示听牌的界面\r\n                    cc.log('显示胡牌');\r\n                    this._canvasTarget.showTingPai(true, this._huList[index]);\r\n                }\r\n            } else {\r\n                hcs.showSelectCard(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 获取自己是否打完了定缺的牌\r\n    * \r\n    * @returns {boolean} \r\n    * @memberof MJ_Play\r\n    */\r\n    getIsUnSuit(): boolean {\r\n        let list = this._seatInfo.handCards;\r\n        //如果(摸牌)存在，并且是(自己摸牌)，就要把摸得牌算进去\r\n        if (this._seatInfo.moPaiCard && dd.gm_manager.mjGameData.tableBaseVo.btIndex === this._seatInfo.seatIndex) {\r\n            list = list.concat(this._seatInfo.moPaiCard);\r\n        }\r\n        //是否打完打缺\r\n        let isUnSuit = true;\r\n        for (var i = 0; i < list.length; i++) {\r\n            let card: CardAttrib = MJ_Help.getCardById(list[i]);\r\n            if (card.suit === this._seatInfo.unSuit) {\r\n                isUnSuit = false;\r\n                break;\r\n            }\r\n        }\r\n        return isUnSuit;\r\n    }\r\n    /**\r\n     * 判断是否可以胡牌\r\n     * \r\n     * @param {MJCard[]} cards \r\n     * @returns {boolean} \r\n     * @memberof ChildClass\r\n     */\r\n    canHuPai(cards: CardAttrib[]): boolean {\r\n        if (cards.length % 3 !== 2) return false;\r\n        if (this.getSuits(cards).length > 2) return false;\r\n        if (cards.length === 2) {\r\n            if (cards[0].point === cards[1].point && cards[0].suit === cards[1].suit) return true;\r\n            else return false;\r\n        } else {//5,8,11,14\r\n            let nums = cards.map((card) => {\r\n                return card.suit * 10 + card.point;\r\n            }, this);\r\n            nums.sort();\r\n            if (this.checkQiDui(nums)) return true;\r\n            let dups = this.getDuplicate(nums);\r\n            for (let i = 0; i < dups.length; i++) {\r\n                let num = dups[i];\r\n                let temps = nums.slice(0);\r\n                for (let i = 0; i < 2; i++) {\r\n                    let index = temps.indexOf(num);\r\n                    temps.splice(index, 1);\r\n                }\r\n                if (this.checkRemaining(temps)) return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 检查花色\r\n     * \r\n     * @param {MJCard[]} cards \r\n     * @returns {number} \r\n     * @memberof ChildClass\r\n     */\r\n    getSuits(cards: CardAttrib[]): number[] {\r\n        let suits: number[] = [];\r\n        cards.forEach((card) => {\r\n            if (suits.indexOf(card.suit) === -1) {\r\n                suits.push(card.suit);\r\n            }\r\n        }, this);\r\n        return suits;\r\n    }\r\n\r\n    /**\r\n     * 判断移除将牌后剩余的牌是否满足顺子和克子，通过递归移除法验证，当剩余牌为0是返回能胡牌，反之则不能胡牌\r\n     * 余牌数量不为0是必定是3的倍数，余牌是排序过的从小到大\r\n     * \r\n     * @param {number[]} nums \r\n     * @returns {boolean} \r\n     * @memberof ChildClass\r\n     */\r\n    checkRemaining(nums: number[]): boolean {\r\n        if (nums.length === 0) return true;\r\n        if (nums[0] === nums[1] && nums[1] === nums[2]) {\r\n            let temps = nums.slice(3);\r\n            return this.checkRemaining(temps);\r\n        } else {\r\n            if (nums.indexOf(nums[0] + 1) !== -1 && nums.indexOf(nums[0] + 2) !== -1) {\r\n                let temps = nums.slice(0);\r\n                let remove = 0, index = 0;\r\n                for (let i = 0; i < 3; i++) {\r\n                    remove = temps.splice(index, 1)[0];\r\n                    index = temps.indexOf(remove + 1);\r\n                }\r\n                return this.checkRemaining(temps);\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 找出可以当将牌的重复项\r\n     * \r\n     * @param {number[]} nums \r\n     * @returns {number[]} \r\n     * @memberof ChildClass\r\n     */\r\n    getDuplicate(nums: number[]): number[] {\r\n        var result: number[] = [];\r\n        nums.forEach((num) => {\r\n            if (nums.indexOf(num) !== nums.lastIndexOf(num) && result.indexOf(num) === -1)\r\n                result.push(num);\r\n        })\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 判断7对\r\n     * \r\n     * @param {number[]} nums \r\n     * @returns {boolean} \r\n     * @memberof ChildClass\r\n     */\r\n    checkQiDui(nums: number[]): boolean {\r\n        if (nums.length !== 14) return false;\r\n        for (let i = 0; i < 13; i += 2) {\r\n            if (nums[i] !== nums[i + 1]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 获取可以胡的牌，即听牌\r\n     * \r\n     * @param {MJCard[]} cards \r\n     * @returns {MJCard[]} \r\n     * @memberof ChildClass\r\n     */\r\n    getTingPai(cards: CardAttrib[]): CardAttrib[] {\r\n        let results: CardAttrib[] = [];\r\n        let checkList: CardAttrib[] = [];\r\n        let suits = this.getSuits(cards);\r\n        if (suits.length > 2 || suits.indexOf(this._seatInfo.unSuit) > -1) return [];\r\n        suits.forEach((suit) => {\r\n            switch (suit) {\r\n                case 1: checkList = checkList.concat(this.wans); break;\r\n                case 2: checkList = checkList.concat(this.tongs); break;\r\n                case 3: checkList = checkList.concat(this.tiaos); break;\r\n                default: break;\r\n            }\r\n        }, this);\r\n        checkList.forEach((card) => {\r\n            let temps = cards.slice(0);\r\n            temps.push(card);\r\n            if (this.canHuPai(temps)) {\r\n                results.push(card);\r\n            }\r\n        }, this);\r\n        return results;\r\n    }\r\n\r\n    /**\r\n     * 根据cardId计算，打出这张牌是否可以听牌（胡牌）\r\n     * \r\n     * @param {number[]} cardIds 手牌列表 = 手牌 + 摸牌(如果存在)\r\n     * @param {number} cardId \r\n     * @returns \r\n     * @memberof MJ_HandList\r\n     */\r\n    getTingsByCardId(cardIds: number[], cardId: number) {\r\n        let hands = cardIds.slice(0);\r\n        let index = hands.indexOf(cardId);\r\n        hands.splice(index, 1);\r\n        let cards = hands.map((cardId) => {\r\n            return MJ_Help.getCardById(cardId);\r\n        }, this);\r\n        let tings = this.getTingPai(cards);\r\n        if (tings.length > 0) {//有听牌需要显示\r\n            return tings;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 播放插牌的动作\r\n     * \r\n     * @param {cc.Vec2} ePos \r\n     * @memberof MJ_HandList\r\n     */\r\n    playCardAct(cardNode: cc.Node, ePos: cc.Vec2) {\r\n        let sPos = cardNode.parent.convertToWorldSpaceAR(cardNode.getPosition());\r\n        sPos = this.node_hand.convertToNodeSpaceAR(sPos);\r\n        cardNode.setPosition(sPos);\r\n        cardNode.parent = this.node_hand;\r\n        ePos.x = Math.floor(ePos.x / cardNode.width) * (cardNode.width) + cardNode.width / 2;\r\n        let dTime = 0.3;\r\n        let d = cc.pDistance(sPos, ePos);\r\n        let mTime = d / 1500;\r\n        let addH = 0;\r\n        let action1 = cc.spawn(cc.rotateTo(dTime, 20), cc.moveTo(dTime, cc.p(sPos.x, sPos.y + cardNode.height + addH)));\r\n        let move = cc.moveTo(mTime, cc.p(ePos.x, ePos.y + cardNode.height + addH));\r\n        let seq = cc.sequence(action1, move, cc.rotateTo(0.12, 0), cc.moveTo(dTime, ePos), cc.callFunc((target: cc.Node, data?: any) => {\r\n            target.removeFromParent(true);\r\n            target.destroy();\r\n        }, this));\r\n        cardNode.runAction(seq);\r\n    }\r\n}\r\n"]}