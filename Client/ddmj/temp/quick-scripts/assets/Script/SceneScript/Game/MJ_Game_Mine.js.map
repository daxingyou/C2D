{"version":3,"sources":["MJ_Game_Mine.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Script\\SceneScript\\Game","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\nimport MJ_HandList from './MJ_HandList';\r\nimport MJ_Card from './MJ_Card';\r\nimport MJ_Card_Group from './MJ_Card_Group';\r\nimport MJCanvas from './MJCanvas';\r\nimport * as dd from './../../Modules/ModuleManager';\r\nimport * as MJ_Help from './MJ_Help';\r\n\r\n@ccclass\r\nexport default class MJ_Play extends cc.Component {\r\n    /**\r\n     * 牌节点\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof MJ_Play\r\n     */\r\n    @property(cc.Node)\r\n    node_mine_card: cc.Node = null;\r\n\r\n    /**\r\n     * 提示的文本\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof MJ_Play\r\n     */\r\n    @property(cc.Label)\r\n    lblTip: cc.Label = null;\r\n\r\n    /**\r\n     * 换三张的按钮\r\n     * \r\n     * @type {cc.Button}\r\n     * @memberof MJ_Play\r\n     */\r\n    @property(cc.Button)\r\n    btn_swap: cc.Button = null;\r\n\r\n    /**\r\n     * 定缺的按钮父节点\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof MJ_Play\r\n     */\r\n    @property(cc.Node)\r\n    node_lack: cc.Node = null;\r\n\r\n    /**\r\n     * 碰杠胡按钮表态的父节点\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof MJ_Play\r\n     */\r\n    @property(cc.Node)\r\n    node_state: cc.Node = null;\r\n    /**\r\n     * 推荐文字\r\n     * \r\n     * @type {cc.SpriteFrame}\r\n     * @memberof MJ_Play\r\n     */\r\n    @property(cc.SpriteFrame)\r\n    img_tj: cc.SpriteFrame = null;\r\n    /**\r\n     *定缺节点列表\r\n     * \r\n     * @type {cc.Node[]}\r\n     * @memberof MJ_Play\r\n     */\r\n    @property([cc.Node])\r\n    node_dq_list: cc.Node[] = [];\r\n    /**\r\n     * 杠、碰、胡、过的节点列表\r\n     * \r\n     * @type {cc.Node[]}\r\n     * @memberof MJ_Play\r\n     */\r\n    @property([cc.Node])\r\n    node_state_list: cc.Node[] = [];\r\n\r\n    /**\r\n     * canvas脚本\r\n     * \r\n     * @type {MJCanvas}\r\n     * @memberof MJ_Play\r\n     */\r\n    _canvasTarget: MJCanvas = null;\r\n\r\n    /**\r\n     * 玩家座位号索引\r\n     * \r\n     * @type {number} =\r\n     * @memberof MJ_Play\r\n     */\r\n    _sId: number = 0;\r\n    /**\r\n     * 当前玩家的信息\r\n     * \r\n     * @type {SeatVo}\r\n     * @memberof MJ_Play\r\n     */\r\n    _seatInfo: SeatVo = null;\r\n\r\n    /**\r\n     * 换牌数组\r\n     * \r\n     * @type {number[]}\r\n     * @memberof MJ_Play\r\n     */\r\n    _swapCardList: number[] = [];\r\n\r\n    /**\r\n     * 手牌列表脚本\r\n     * \r\n     * @type {MJ_HandList}\r\n     * @memberof MJ_Play\r\n     */\r\n    _handList: MJ_HandList = null;\r\n\r\n    onLoad() {\r\n        this._canvasTarget = dd.ui_manager.getCanvasNode().getComponent('MJCanvas');\r\n        this._handList = this.node_mine_card.getComponent('MJ_HandList');\r\n    }\r\n\r\n    /**\r\n     * 初始化界面\r\n     * \r\n     * @memberof MJ_Play\r\n     */\r\n    initData() {\r\n        this._swapCardList.length = 0;\r\n\r\n        this.btn_swap.interactable = false;\r\n        this.lblTip.node.active = false;\r\n\r\n        this.btn_swap.node.active = false;\r\n        this.node_state.active = false;\r\n        this.node_lack.active = false;\r\n    }\r\n\r\n    /**\r\n     * 刷新打牌的信息\r\n     * \r\n     * @memberof MJ_Play\r\n     */\r\n    updatePlay(sId: number, seatInfo: SeatVo) {\r\n        if (!this._canvasTarget) {\r\n            this._canvasTarget = dd.ui_manager.getCanvasNode().getComponent('MJCanvas');\r\n        }\r\n        if (!this._handList) {\r\n            this._handList = this.node_mine_card.getComponent('MJ_HandList');\r\n        }\r\n\r\n        this._sId = sId;\r\n        this._seatInfo = seatInfo;\r\n\r\n        //如果在定缺阶段之前，排序就是 万筒条\r\n        if (dd.gm_manager.mjGameData.tableBaseVo.gameState < MJ_Help.MJ_GameState.STATE_TABLE_DINGQUE) {\r\n            this._seatInfo.handCards = MJ_Help.getSortCardByCardIds(this._seatInfo.handCards);\r\n        } else if (dd.gm_manager.mjGameData.tableBaseVo.gameState === MJ_Help.MJ_GameState.STATE_TABLE_DINGQUE) {\r\n            //如果在定缺阶段，未定缺时排序 万筒条 ，已定缺时排序 打缺的牌在最右边\r\n            if (this._seatInfo.btState !== MJ_Help.MJ_Act_State.ACT_STATE_WAIT) {\r\n                this._seatInfo.handCards = MJ_Help.getSortCardByCardIds(this._seatInfo.handCards, this._seatInfo.unSuit);\r\n                for (var i = 0; i < this.node_dq_list.length; i++) {\r\n                    this.node_dq_list[i].scale = 1;\r\n                    this.node_dq_list[i].removeAllChildren();\r\n                    this.node_dq_list[i].stopAllActions();\r\n                }\r\n            } else {\r\n                this._seatInfo.handCards = MJ_Help.getSortCardByCardIds(this._seatInfo.handCards);\r\n                this.showDQAction();\r\n            }\r\n        } else if (dd.gm_manager.mjGameData.tableBaseVo.gameState > MJ_Help.MJ_GameState.STATE_TABLE_DINGQUE) {\r\n            //如果大于了定缺阶段，都需要先打定缺的牌\r\n            this._seatInfo.handCards = MJ_Help.getSortCardByCardIds(this._seatInfo.handCards, this._seatInfo.unSuit);\r\n        } else {\r\n        }\r\n\r\n        //如果在准备阶段，就初始化数据\r\n        if (dd.gm_manager.mjGameData.tableBaseVo.gameState <= MJ_Help.MJ_GameState.STATE_TABLE_READY) {\r\n            this.initData();\r\n        }\r\n\r\n        //如果在小于定缺阶段\r\n        if (dd.gm_manager.mjGameData.tableBaseVo.gameState <= MJ_Help.MJ_GameState.STATE_TABLE_DINGQUE) {\r\n            if (this._seatInfo.swapCards) {\r\n                this._swapCardList = this._seatInfo.swapCards;\r\n            }\r\n        }\r\n\r\n        //刷新手牌\r\n        this._handList.updateHandList(this._seatInfo, this);\r\n        this.showPlayState();\r\n    }\r\n\r\n    /**\r\n     * 取消选中牌\r\n     * \r\n     * @memberof MJ_Play\r\n     */\r\n    unSelectCard() {\r\n        this._handList.selectCardByCardId(-1);\r\n    }\r\n\r\n    /**\r\n     * 选中换三张的牌\r\n     * \r\n     * @param {number} cardId \r\n     * @param {number} isSelect -1否 1是\r\n     * @returns {boolean} \r\n     * @memberof MJ_Play\r\n     */\r\n    selectSwapCard(cardId: number, isSelect: number): boolean {\r\n        if (isSelect < 0) {//是否选中\r\n            //从数组中减去\r\n            let sIndex = this._swapCardList.indexOf(cardId);\r\n            if (sIndex !== -1) {\r\n                this._swapCardList.splice(sIndex, 1);\r\n            }\r\n            if (this._swapCardList.length < 3) {\r\n                this.btn_swap.interactable = false;\r\n            }\r\n        } else {\r\n            if (this._swapCardList.length < 3) {\r\n                //选出这张牌\r\n                this._swapCardList.push(cardId);\r\n                if (this._swapCardList.length === 3) {\r\n                    this.btn_swap.interactable = true;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 座位状态的显示\r\n     * \r\n     * @memberof MJ_Play\r\n     */\r\n    showPlayState() {\r\n        switch (dd.gm_manager.mjGameData.tableBaseVo.gameState) {\r\n            case MJ_Help.MJ_GameState.STATE_TABLE_READY: {//游戏准备状态\r\n                this.lblTip.node.active = true;\r\n                if (this._seatInfo.btState === 0) {\r\n                    this.lblTip.string = '等待准备...';\r\n                } else {\r\n                    this.lblTip.string = '已准备...';\r\n                }\r\n                break;\r\n            }\r\n            case MJ_Help.MJ_GameState.STATE_TABLE_SWAPCARD: {//游戏换牌状态\r\n                this.node_state.active = false;\r\n                this.node_lack.active = false;\r\n\r\n                this.lblTip.node.active = true;\r\n                if (this._seatInfo.btState === 0) {\r\n                    this.lblTip.string = '请选择花色一样的三张牌交换...';\r\n                    this.btn_swap.node.active = true;\r\n                    if (this._swapCardList.length === 3) {\r\n                        this.btn_swap.interactable = true;\r\n                    } else {\r\n                        this.btn_swap.interactable = false;\r\n                    }\r\n                } else {\r\n                    this.lblTip.string = '已选牌...';\r\n                    this.btn_swap.node.active = false;\r\n                }\r\n                break;\r\n            }\r\n            case MJ_Help.MJ_GameState.STATE_TABLE_DINGQUE: {//游戏定缺状态\r\n                this.node_state.active = false;\r\n                this.btn_swap.node.active = false;\r\n\r\n                this.lblTip.node.active = true;\r\n                if (this._seatInfo.btState === 0) {\r\n                    this.lblTip.string = '请选择一门花色定缺...';\r\n                    this.node_lack.active = true;\r\n                } else {\r\n                    this.lblTip.string = '已定缺...';\r\n                    this.node_lack.active = false;\r\n                }\r\n                break;\r\n            }\r\n            case MJ_Help.MJ_GameState.STATE_TABLE_BREAKCARD: {//杠碰吃胡牌表态状态\r\n                this.showBreakState();\r\n                break;\r\n            }\r\n            default:\r\n                this.lblTip.node.active = false;\r\n                this.node_state.active = false;\r\n                this.node_lack.active = false;\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 显示胡杠碰吃过 状态\r\n     * \r\n     * @param {MJ_Help.MJ_Act_Type} breakState \r\n     * @memberof MJ_Play\r\n     */\r\n    showBreakState() {\r\n        //如果自己有（胡杠碰吃过的状态）\r\n        let isBreakCS = this.getIsBreakCardState();\r\n        if (isBreakCS) {\r\n            //如果自己在(等待表态)\r\n            if (this._seatInfo.btState === MJ_Help.MJ_Act_State.ACT_STATE_WAIT) {\r\n                this.node_state.active = true;\r\n                for (var i = 0; i < this._seatInfo.breakCardState.length; i++) {\r\n                    if (this.node_state_list[i]) {\r\n                        if (this._seatInfo.breakCardState[i] === 1) {\r\n                            this.node_state_list[i].active = true;\r\n                        } else {\r\n                            this.node_state_list[i].active = false;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                this.node_state.active = false;\r\n            }\r\n        } else {\r\n            this.node_state.active = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取是否在胡杠碰的状态\r\n     * \r\n     * @returns \r\n     * @memberof MJ_Play\r\n     */\r\n    getIsBreakCardState() {\r\n        let isBreakCS = false;\r\n        for (var i = 0; i < this._seatInfo.breakCardState.length; i++) {\r\n            if (this._seatInfo.breakCardState[i] === 1) {\r\n                isBreakCS = true;\r\n                break;\r\n            }\r\n        }\r\n        return isBreakCS;\r\n    }\r\n\r\n    /**\r\n     * 自己定缺按钮的点击事件\r\n     * \r\n     * @memberof MJ_Play\r\n     */\r\n    click_btn_lack(event, type: string) {\r\n        dd.mp_manager.playButton();\r\n        switch (type) {\r\n            case '0': {//万\r\n                cc.log('万');\r\n                this._canvasTarget.sendDinQue(MJ_Help.MJ_Suit.SUIT_TYPE_WAN);\r\n                break;\r\n            }\r\n            case '1': {//筒\r\n                cc.log('筒');\r\n                this._canvasTarget.sendDinQue(MJ_Help.MJ_Suit.SUIT_TYPE_TONG);\r\n                break;\r\n            }\r\n            case '2': {//条\r\n                cc.log('条');\r\n                this._canvasTarget.sendDinQue(MJ_Help.MJ_Suit.SUIT_TYPE_TIAO);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        this.unSelectCard();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * 换三张\r\n     * @memberof MJ_Play\r\n     */\r\n    click_btn_swap() {\r\n        dd.mp_manager.playButton();\r\n        if (this._swapCardList.length !== 3) {\r\n            dd.ui_manager.showTip('请选择花色一样的三张牌交换');\r\n            return;\r\n        }\r\n        let isAllSame = true;\r\n        let card1 = MJ_Help.getCardById(this._swapCardList[0]);\r\n        let card2 = MJ_Help.getCardById(this._swapCardList[1]);\r\n        let card3 = MJ_Help.getCardById(this._swapCardList[2]);\r\n        if (card1.suit === card2.suit && card2.suit === card3.suit) {\r\n            this._canvasTarget.sendSwap(this._swapCardList);\r\n        } else {\r\n            dd.ui_manager.showTip('请选择花色一样的三张牌交换');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 胡杠碰过的表态\r\n     * \r\n     * @param {any} event \r\n     * @param {string} type \r\n     * @memberof MJ_Play\r\n     */\r\n    click_btn_state(event, type: string) {\r\n        dd.mp_manager.playButton();\r\n        switch (type) {\r\n            case '0': {//胡\r\n                this._canvasTarget.sendOtherBreakCard(MJ_Help.MJ_Act_Type.ACT_INDEX_HU, this._seatInfo.breakCard, this.node_state);\r\n                break;\r\n            }\r\n            case '1': {//杠\r\n                //如果表态是自己,就有多杠的情况\r\n                if (this._seatInfo.seatIndex === dd.gm_manager.mjGameData.tableBaseVo.btIndex) {\r\n                    let list = this._seatInfo.handCards;\r\n                    //如果(摸牌)存在，并且是(自己摸牌)，就要把摸得牌算进去\r\n                    if (this._seatInfo.moPaiCard && dd.gm_manager.mjGameData.tableBaseVo.btIndex === this._seatInfo.seatIndex) {\r\n                        list = list.concat(this._seatInfo.moPaiCard);\r\n                    }\r\n                    let gList = [];\r\n                    //获取自己的手牌中，是否有杠牌\r\n                    let scData: SortCardData = MJ_Help.getSplitList(list);\r\n                    gList = scData.gangList;\r\n                    //如果自己有碰牌，看看自己的手牌中是否有碰牌的牌，连起来就有4张牌，也可以杠牌\r\n                    if (this._seatInfo.pengCards && this._seatInfo.pengCards.length > 0) {\r\n                        //获取手牌中是否存在 已经碰牌的牌，如果有，可以杠\r\n                        let pList = MJ_Help.getCardIdsByCardId(this._seatInfo.pengCards, list);\r\n                        gList = gList.concat(pList);\r\n                    }\r\n                    if (gList.length > 0) {//如果自己有杠牌\r\n                        if (gList.length > 1) {\r\n                            this._canvasTarget.showMoreGang(gList, this);\r\n                            this.node_state.active = false;\r\n                        } else {\r\n                            this._canvasTarget.sendOtherBreakCard(MJ_Help.MJ_Act_Type.ACT_INDEX_GANG, gList[0], this.node_state);\r\n                        }\r\n                    } else {\r\n                        this._canvasTarget.sendOtherBreakCard(MJ_Help.MJ_Act_Type.ACT_INDEX_GANG, this._seatInfo.breakCard, this.node_state);\r\n                    }\r\n                } else {\r\n                    this._canvasTarget.sendOtherBreakCard(MJ_Help.MJ_Act_Type.ACT_INDEX_GANG, this._seatInfo.breakCard, this.node_state);\r\n                }\r\n                break;\r\n            }\r\n            case '2': {//碰\r\n                this._canvasTarget.sendOtherBreakCard(MJ_Help.MJ_Act_Type.ACT_INDEX_PENG, this._seatInfo.breakCard, this.node_state);\r\n                break;\r\n            } case '3': {//吃\r\n                this._canvasTarget.sendOtherBreakCard(MJ_Help.MJ_Act_Type.ACT_INDEX_CHI, this._seatInfo.breakCard, this.node_state);\r\n                break;\r\n            } case '4': {//过\r\n                this._canvasTarget.sendOtherBreakCard(MJ_Help.MJ_Act_Type.ACT_INDEX_DROP, this._seatInfo.breakCard, this.node_state);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 显示推荐定缺的动作\r\n     * \r\n     * @memberof MJ_Play\r\n     */\r\n    showDQAction() {\r\n        let type = MJ_Help.getDingQueSuit(this._seatInfo.handCards);\r\n        if (type !== -1) {\r\n            let node_dq = this.node_dq_list[type];\r\n            node_dq.stopAllActions();\r\n            let seq = cc.sequence(cc.scaleTo(0.4, 0.8), cc.scaleTo(0.4, 1).easing(cc.easeElasticOut(0.4)));\r\n            let action = cc.repeatForever(seq);\r\n            node_dq.runAction(action);\r\n\r\n            let node_tj = new cc.Node('tj');\r\n            let sp = node_tj.addComponent(cc.Sprite);\r\n            sp.spriteFrame = this.img_tj;\r\n            node_tj.setPosition(cc.p(40, 40));\r\n            node_tj.parent = node_dq;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}