{"version":3,"sources":["Toggle_AddLabel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\UI","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Toggle_AddLabel extends cc.Component {\r\n\r\n    /**\r\n     * 名称\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof Toggle_AddLabel\r\n     */\r\n    @property(cc.Label)\r\n    lblName: cc.Label = null;\r\n    /**\r\n     * 文字label描述的节点，用作选中或未选中当前选项的时候，颜色的变化\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof Toggle_custom\r\n     */\r\n    @property(cc.Node)\r\n    lblDes: cc.Node = null;\r\n\r\n    /**\r\n     * 文字label的描边\r\n     * \r\n     * @type {cc.LabelOutline}\r\n     * @memberof Toggle_AddLabel\r\n     */\r\n    @property({\r\n        type: cc.LabelOutline,\r\n        tooltip: '文字label的描边,可以不存在'\r\n    })\r\n    lblOL: cc.LabelOutline = null;\r\n\r\n    /**\r\n     * 选项节点\r\n     * \r\n     * @type {cc.Toggle}\r\n     * @memberof Toggle_AddLabel\r\n     */\r\n    @property(cc.Toggle)\r\n    toggle: cc.Toggle = null;\r\n\r\n    /**\r\n     * 选中和未选中这个选项的时候，lable的颜色 0选中 1未选中\r\n     * \r\n     * @type {[cc.Color]}\r\n     * @memberof Toggle_custom\r\n     */\r\n    @property({\r\n        // default: [],\r\n        type: [cc.Color],\r\n        tooltip: '选中和未选中这个选项的时候，lable的颜色\\n 0:选中\\n 1:未选中'\r\n    })\r\n    check_color: cc.Color[] = [];\r\n\r\n    /**\r\n     * label节点颜色改变的类型 0只改变node颜色 1只改变node的labelOutline组件(如果存在的话)颜色 2前两个都改变\r\n     * \r\n     * @memberof Toggle_AddLabel\r\n     */\r\n    @property({\r\n        // default: 0,\r\n        type: cc.Integer,\r\n        tooltip: 'label节点颜色改变的类型\\n 0:只改变node颜色\\n 1:只改变node的labelOutline组件(如果存在的话)颜色\\n 2:前两个都改变'\r\n    })\r\n    color_type = 0;\r\n\r\n    onLoad() {\r\n\r\n    }\r\n\r\n    updateItem(name: string) {\r\n        this.lblName.string = name;\r\n    }\r\n    update(dt) {\r\n        let isCheck = this.toggle.isChecked;\r\n        this.checkChangeState(isCheck);\r\n    }\r\n\r\n    /**\r\n     * 选项状态改变的时候\r\n     * \r\n     * @memberof Toggle_AddLabel\r\n     */\r\n    checkChangeState(isCheck: boolean) {\r\n\r\n        switch (this.color_type) {\r\n            case 0:\r\n                this.lblDes.color = isCheck === true ? this.check_color[0] : this.check_color[1];\r\n                break;\r\n            case 1:\r\n                if (this.lblOL) {\r\n                    this.lblOL.color = isCheck === true ? this.check_color[0] : this.check_color[1];\r\n                }\r\n                break;\r\n            case 2:\r\n                this.lblDes.color = isCheck === true ? this.check_color[0] : this.check_color[1];\r\n                if (this.lblOL) {\r\n                    this.lblOL.color = isCheck === true ? this.check_color[0] : this.check_color[1];\r\n                }\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}"]}