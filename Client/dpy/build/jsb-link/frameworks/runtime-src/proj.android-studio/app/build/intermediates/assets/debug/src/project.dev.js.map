{"version":3,"sources":["assets/Script/SceneScript/Game/BetBTLayer.ts","assets/Script/SceneScript/Game/ButtonLayer.ts","assets/Script/SceneScript/Game/BuyLayer.ts","assets/Script/SceneScript/Home/Career.ts","assets/Script/Modules/Config.ts","assets/Script/SceneScript/Home/Create.ts","assets/Script/SceneScript/Home/DetailItem.ts","assets/Script/Modules/ENCManager.ts","assets/Script/SceneScript/Game/EmailItem.ts","assets/Script/Lib/Fetch.js","assets/Script/Modules/GMManager.ts","assets/Script/SceneScript/Game/GameCanvas.ts","assets/Script/SceneScript/Game/GameResult.ts","assets/Script/SceneScript/Home/HomeCanvas.ts","assets/Script/Modules/IMGManager.ts","assets/Script/Modules/JSCallNative.ts","assets/Script/SceneScript/Home/Join.ts","assets/Script/SceneScript/Load/LoadCanvas.ts","assets/Script/SceneScript/Login/LoginCanvas.ts","assets/Script/Modules/MPManager.ts","assets/Script/SceneScript/Home/MineItem.ts","assets/Script/SceneScript/Home/Mine.ts","assets/Script/Modules/ModuleManager.ts","assets/Script/Modules/NativeCallJS.ts","assets/Script/Modules/NodeManager.ts","assets/Script/SceneScript/Home/Notice.ts","assets/Script/SceneScript/Game/PlayerItem.ts","assets/Script/SceneScript/Game/PlayerLayer.ts","assets/Script/SceneScript/Game/PlayerUI.ts","assets/Script/Lib/Promise.js","assets/Script/Modules/Protocol.ts","assets/Script/SceneScript/Home/Record.ts","assets/Script/SceneScript/Game/ReviewItem.ts","assets/Script/SVScript.ts","assets/Script/SceneScript/Game/Safe.ts","assets/Script/SceneScript/Home/Setting.ts","assets/Script/Modules/UDManager.ts","assets/Script/Modules/UIManager.ts","assets/Script/Modules/Utils.ts","assets/Script/Modules/WSManager.ts"],"names":["_a","cc","_decorator","ccclass","property","dd","require","BetBTLayer","_super","__extends","_this","apply","this","arguments","nodeAddBet","nodeBigBlind","nodeBetPool","addBetPro","handle","lblAddBet","bt_node_list","btn_bigBlind_list","btn_betPool_list","_maxAddBet","_minAddBet","_curAddBet","_bigBlind","_firstPos","v2","_endPos","prototype","onLoad","on","Node","EventType","TOUCH_START","event","touches","getTouches","getLocation","opacity","active","showAddBet","TOUCH_MOVE","d","pDistance","delta","getDelta","maxLen","parent","height","y","pro","progress","curAddBet","Math","floor","string","toString","ceil","TOUCH_END","touchAddBetEnd","TOUCH_CANCEL","sendBetBT","tableData","gm_manager","getTableData","Number","poolMoneys","bigBlind","init","mineSeat","getMineSeat","node","shouldBet","maxBetMoney","betMoney","currMoney","showSpecialAddBet","dMoney","minAddBet","pm","pm1","interactable","pm2","pm3","b1","b2","r_max","curY","click_btn_state","type","mineSeat_1","bt","btVal","obj","tableId","msg","JSON","stringify","ws_manager","sendMsg","protocol","DZPKER_TABLE_BT","flag","content","ui_manager","showTip","click_btn_bigBlind","click_btn_betPool","__decorate","ProgressBar","Label","Button","Component","exports","default","ButtonLayer","nodeBetBT","leave","stand","share","arrow","history","win","player","expression","buyBet","dotNode","lab_dot","bq_board","reviewLayer","settlementLayer","playersLayer","emailLayer","left_board","bq_close","startNode","waitNode","emailItem","reviewItem","settlementItem","playerItem","pre_buy","isOpen","bq_isShow","left_isShow","systemEvent","showBetBTLayer","change","initBQ","isMineCreater","updateOrderCount","btnScript","onDestroy","off","gameState","game_state","STATE_TABLE_BET_BT_1","STATE_TABLE_BET_BT_2","STATE_TABLE_BET_BT_3","STATE_TABLE_BET_BT_4","btIndex","seatIndex","btState","betBT","getComponent","closeAll","mp_manager","playBet","accountId","ud_manager","account_mine","HOTPROMPT_GET_HOTDATA","hots","forEach","hot","hotKey","hot_key","HOT_KEY_ORDER","orderCount","hotVal","playMsg","img_manager","bqSpriteFrames","spriteFrame","width","tag","name","log","getCurrentTarget","CHAT_SEND","spriteNode","addComponent","Sprite","closeNode","hideBQBoard","sprite","showBQBoard","stopAllActions","endY","len","rate","runMoveAction","p","showLFBoard","endX","x","hideLFBoard","showNode","point","endAction","moveAction","moveTo","callback","callFunc","setPosition","runAction","sequence","click_arrow","data","playButton","rotation","click_history","sv","find","ScrollView","scrollToTop","destroyAllChildren","cardLayout","DZPKER_TABLE_PREV_FIGHT","items","length","i","cardId","tableCards","cardNode","getPokerSpriteFrameById","sizeMode","SizeMode","CUSTOM","item","itemNode","instantiate","click_win","DZPKER_TABLE_PLAYER_ONCE_WINSCORE","__awaiter","infoNode","loadURLImage","roleAttribVo","headImg","_b","sent","utils","getStringBySize","nick","buyTotalMoney","gameNum","winScore","click_player","DZPKER_TABLE_PLAYER_LIST","str","insuranceScore","playerNode","click_expression","click_leave","showLoading","DZPKER_TABLE_LEAVE","director","loadScene","click_stand","DZPKER_SEAT_UP","click_share","js_call_native","wxShare","config","cd","ipaUrl","click_dot","DZPKER_QUERY_BUYCHIP_LIST","datas","sv_1","order","doDot","id","itemId","DZPKER_TRANS_BUYCHIP_ITEM","destroy","click_buy","click_start","DZPKER_TABLE_START_RUN","update","dt","childrenCount","start","getSeatDownCount","SpriteFrame","Prefab","BuyLayer","lab_min","lab_max","lab_buy","maxIndex","min","joinChip","buyMaxChip","click_board","click_add","index","click_reduce","click_send","chipNum","DZPKER_BUY_CHIP","createPlayer","hideLoading","Career","proList","pointList","perList","layer1","layer2","detailLayer","svNode_detail","nums","winRate","seatDown","showCard","addChip","dropCards","fullBet","num","fillRange","round","click_out","click_toggle","historyList","getRoomDetailInfo","recordId","DZPKER_TABLE_GET_ALL_WIN_SCORE_INFO","detailList_1","push","click_btn_outDetail","checkUrl","wsUrl","app_id","secret","wxState","version","Create","lab_name","lab_blind","lab_bet","spr_bar","nod_btn","nod_time","pre_toggle","tog_safe","tog_straddie","lab_limit","cfgData","selectTime","selectChip","cfg","updateBet","updatTime","updateLimit","pos","convertToNodeSpaceAR","touch","chips","getClosestIndex","getClosestNumber","target","stopPropagation","touch_fun","chip","small","big","join","error","vaildTimes","time","Toggle","check","lab_time","toggle","detail","upLimit","downLimit","click_create","tableName","minJoin","vaildTime","insurance","isChecked","straddle","buyMax","DZPKER_TABLE_CREATE","setTableData","DetailItem","head","gold","updateItem","winMoney","ENCManager","getInstance","_instance","RotateLeft","lValue","iShiftBits","AddUnsigned","lX","lY","lX4","lY4","lX8","lY8","lResult","F","z","G","H","I","FF","a","b","c","s","ac","GG","HH","II","ConvertToWordArray","lWordCount","lMessageLength","lNumberOfWords_temp1","lNumberOfWords_temp2","lNumberOfWords","lWordArray","Array","lBytePosition","lByteCount","charCodeAt","WordToHex","WordToHexValue","WordToHexValue_temp","lByte","lCount","substr","Utf8Encode","replace","utftext","n","String","fromCharCode","Utf8Decode","c1","c2","c3","base64Encode","input","_keyStr","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","isNaN","charAt","base64Decode","indexOf","MD5","k","AA","BB","CC","DD","S11","S12","S13","S14","S21","S22","S23","S24","S31","S32","S33","S34","S41","S42","S43","S44","md5","toLowerCase","destroySelf","EmailItem","modelMsg","click_yes","click_no","RichText","self","fetch","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isDataView","DataView","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","Object","call","normalizeName","test","TypeError","normalizeValue","value","iteratorFor","iterator","next","shift","done","undefined","Headers","headers","map","append","isArray","header","getOwnPropertyNames","oldValue","get","has","hasOwnProperty","set","thisArg","keys","values","entries","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","bufferClone","slice","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","Error","rejected","then","text","decode","json","parse","methods","normalizeMethod","method","upcased","toUpperCase","Request","options","url","credentials","mode","referrer","clone","form","trim","split","bytes","decodeURIComponent","parseHeaders","rawHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","response","redirectStatuses","redirect","RangeError","location","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","window","Protocol_1","UDManager_1","MPManager_1","GMManager","safeData","startIndex","countDownTime","publicCardNum","isCreateMineCard","isShowGameOver","playerScript","oldCount","newCount","playJoin","svrTime","emit","GameState","STATE_TABLE_IDLE","STATE_TABLE_READY","playStart","STATE_TABLE_OUTCARD_1","STATE_TABLE_BUY_INSURANCE","STATE_TABLE_OVER_ONCE","account","getSeatDataByAccount","isMineSeat","seatData","canStandOrLeave","btResult","bGamed","acountId","seats","seat","getSeatDataByIndex","count","getCardType","cType","CardType","TYPE_CARD_NONE","TYPE_CARD_ONE_DOUBLE","TYPE_CARD_TWO_DOUBLE","TYPE_CARD_SAME_THREE","TYPE_CARD_SHUN","TYPE_CARD_SAME_SUIT","TYPE_CARD_GOURD","TYPE_CARD_SAME_FOUR","TYPE_CARD_SAME_SUIT_SHUN","TYPE_CARD_GOLD_SAME_SUIT_SHUN","clean","GameCanvans","info","pool_prefab","pool","sidePoolList","lba_time","lbl_poolMoneys","safe_prefab","_safe","showGameInfo","showInfo","showPool","smallBlind","showSafe","tableData_1","STATE_TABLE_NEW_ROUND_BET","index_1","showFlyBetAction","pools","STATE_TABLE_BETBLIND","sidePool","removeAllChildren","bet","creatSidePool","parentNode","sPool","isValid","removeFromParent","getCountDownString","NewClass","lbl_join","lbl_winRate","lbl_maxBet","lbl_profit","lbl_applyMoney","lbl_settlement","updateData","maxWinMoney","click_btn_out","HomeCanvas","spr_head","lab_id","pre_setting","pre_create","pre_join","pre_mine","pre_notice","pre_career","starNO","click_setting","setNode","getRootNode","click_notice","noticeNode","ACTIVITY_GET_ACTIVITY_LIST","click_career","careerNode","DZPKER_TABLE_GET_CAREE_INFO","click_store","createNode","DZPKER_TABLE_GET_CFG","click_join","joinNode","click_mine","mineNode","DZPKER_GET_FIGHTED_TABLE_LIST","ENCManager_1","IMGManager","headSpriteFrame","pokerSpriteFrames","spriteFrames","addSpriteFrame","bool","some","sf","initIMG","initSystemHead","_d","initAtlas","_c","sortByName","sort","res","loader","loadRes","err","message","path","SpriteAtlas","spriteAtlas","getSpriteFrames","release","getDirPath","dirpath","jsb","fileUtils","getWritablePath","isDirectoryExist","createDirectory","getFilePath","loadLocalImg","filePath","load","tex","sys","isNative","isFileExist","timeout","writeDataToFile","destrySpriteFrames","owner","deps","getDependsRecursively","ModuleManager_1","initWX","app_key","os","OS_ANDROID","OS_IOS","reflection","callStaticMethod","initVoice","openId","getAppVersion","ver","openBrowser","getBatteryLevel","level","wxLogin","title","des","wxShareRecord","copyToClipboard","phoneVibration","joinTeamRoom","roomId","quitRoom","setState","getProducts","ids","buyProduct","pid","bid","Join","currentIndex","children","click_btn","label","getNumber","DZPKER_TABLE_JOIN","numStr","LoadCanvas","manifestUrl","lbl_err","_needUpdate","_am","_checkListener","_updateListener","_failCount","download","apkUrl","initUI","initMP","errMsg_1","checkAppVersion","json_1","showAlert","checkResVersion","jumpScene","storagePath","AssetsManager","retain","getLocalManifest","isLoaded","EventListenerAssetsManager","checkCb","bind","eventManager","addListener","checkUpdate","getEventCode","EventAssetsManager","ERROR_NO_LOCAL_MANIFEST","removeListener","ERROR_DOWNLOAD_MANIFEST","ERROR_PARSE_MANIFEST","game","end","ALREADY_UP_TO_DATE","NEW_VERSION_FOUND","updateCb","needRestart","failed","UPDATE_PROGRESSION","getPercentByFile","toFixed","UPDATE_FINISHED","getMessage","UPDATE_FAILED","downloadFailedAssets","ERROR_UPDATING","getAssetId","ERROR_DECOMPRESS","searchPaths","getSearchPaths","newPaths","unshift","localStorage","setItem","setSearchPaths","setTimeout","garbageCollect","restart","RawAsset","LoginCanvas","btn_wechat","btn_quick","cb_login","userInfo","headimgurl","getHeadImgUrl","wsLogin","ACCOUNT_LOGIN_WX","connect","aotuLogin","db","getItem","url_refresh","refresh_token","response_refresh","newToken","url_userInfo","access_token","openid","response_userInfo","err_1","click_wx","msgId","uuid","unionid","nickname","sex","getGuestAccount","setLoginState","gameDataAttribVo","click_quick","ACCOUNT_LOGIN_TOURIST","DZPKER_TABLE_GET_TABLE_INFO","createUUID","MPManager","url_allin","url_bet","url_call","url_check","url_deal","url_flop","url_fold","url_join","url_msg","url_over","url_raise","url_start","url_straddle","url_time","url_button","sw","initSetting","loadFile","_r","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","resource","setAutoRelease","playAllin","audioEngine","play","playCall","playCheck","playDeal","playFlop","playFold","playOver","playRaise","playStraddle","playTime","uncacheAll","MineItem","blind","currPlayer","seatNum","endTime","click_item","Mine","svNode","dataList","JSCallNative","NativeCallJS","Utils","Config","WSManager_1","IMGManager_1","GMManager_1","UIManager_1","Enum","NodeManager_1","native_call_js","Protocol","HotKey","card_type","suit","Suit","enc_manager","node_manager","errAlert","cb_diconnect","sceneName_1","getScene","ACCOUNT_LOGIN_ACCOUNTID","getAccessToken","code","loginError","shareCallback","NodeManager","canTouch","maxTouchNum","touchNum","__dispatchEvent__","dispatchEvent","Notice","sv1","sv2","currUrl","sf1","node_out","traget","openUrl","sf2","node_in","addChild","PlayerItem","PlayerLayer","pre_player","seatNodes","pCardNodes","pre_card","chip_prefab","updatePlayer","doFPAction","showBTResult","showLookCard","showChat","seatNode","getChildByName","click_empty","tabelData","STATE_TABLE_OUTCARD_2","showPublicCardAction","STATE_TABLE_OUTCARD_3","updatePublicCard","STATE_TABLE_OUTCARD_4","tableHandCards","showOthersCard","showGameOver","seatInfo","getNodeBySeatId","scale","action","scaleTo","easing","easeElasticOut","seq","delayTime","tempIndex","emptyNode","nodeList","dealIndex","bankerIndex","nodeIndex","dTime","actTime","eTime","_loop_1","_loop_2","j","data_1","endPos","getPosition","add","isMine_1","actionNode","this_1","delayAction","audioCallBack","scaleAction","rotateAction","rotateBy","spawnAction","spawn","fpNode","handCards","Animation","showCardSeatIndex","sIndex","eIndex","_loop_3","pCardNode","this_2","oldCardNode","pIndex","pNode","isPlayAnim","getAnimationState","isPlaying","prevBtIndex","prevSeat","showDiscardAction","sPos","cb","canvasTarget","getCanvasNode","ePos","flyBetAction","money","chipNode","settlementOnceList","showWinOrLostAction","players","showWinOrLost","lbl","fontSize","color","Color","RED","GREEN","move","moveBy","DZPKER_SEAT_DOWN","PlayerUI","lab_nick","lab_gold","lab_cardType","timer","deal","board","minCard","btn_straddle","btn_lookCard","timeCount","isCreateCard","updatePlayerUI","repeatForever","setLeftOrRight","setCenter","widget","Widget","isAlignRight","isAbsoluteRight","isAlignLeft","right","isAbsoluteLeft","left","isAlignHorizontalCenter","isAbsoluteHorizontalCenter","horizontalCenter","straddleFlag","card","actTotalTime","cardType","click_btn_lookCard","DZPKER_TABLE_SHOW_CARD_BT","click_btn_straddle","DZPKER_STRADDLE_BT","root","setTimeoutFunc","noop","fn","_typeof","_state","_handled","_value","_deferreds","doResolve","deferred","_immediateFn","onFulfilled","onRejected","ret","newValue","finale","_unhandledRejectionFn","Handler","reason","ex","prom","constructor","all","arr","args","remaining","val","race","setImmediate","console","warn","_setImmediateFn","_setUnhandledRejectionFn","module","Record","room","_data","_cb","getDateStringByTimestamp","recordTime","ReviewItem","card1","card2","score","showCardState","SVScript","itemPrefab","spacing","updateInterval","itemNodes","itemSize","size","updateTimer","lastContentPosY","tempItem","getContentSize","getPositionInView","worldPos","convertToWorldSpaceAR","position","viewPos","diff","offset","script","setPositionY","Integer","Safe","lbl_time","allin_node_list","pCard_node_list","allin_color_list","lbl_choose","lbl_odds","lbl_pool","lbl_tbe","lbl_bet","lbl_pfe","safe_pro","toggle_choose_all","fcp_svNode","lbl_other","fcp_mineNode","imgLight","safe_card_prefab","safe_allin_prefab","_chooseCard","_rate","_timeDown","insuranceStateAttrib","allin_list","insuranceSeatList","safeSeat","showAllInSeat","pCards","showSafeCard","showLight","winCardList","touch_fcp_end","poolMoney","buyedNum","Slider","showFCPInfo","light","sp","rateList","insuranceRateList","cardNum","showTBInfo","allinNode","isShowChoose","initCB","safe_card","click_toggle_chooseAll","click_pro_bar","maxSafe","curSafe","tbe","pfe","click_btn_buy","sendBuySafe","click_btn_nobuy","winCardList_1","buyCards_1","buyCards","buyMoney","payMoney","DZPKER_TABLE_BUY_INSURANCE","click_btn_baoben","click_btn_dengli","dm","Setting","lab_ver","isInit","uncheck","click_back","ACCOUNT_LOGIN_OUT","disconnect","removeItem","UDManager","UIManager","isLoadingScence","loadingNode","tipNode","alertNode","cb_yes","cb_no","cb_before_scene_loading","cb_after_scene_loading","cb_befor_update","cb_app_hide","isPaused","pause","cb_app_show","resume","Director","EVENT_BEFORE_SCENE_LOADING","EVENT_AFTER_SCENE_LAUNCH","EVENT_BEFORE_UPDATE","EVENT_HIDE","EVENT_SHOW","loadPrefabToNode","prefab","setLocalZOrder","setCurrentTime","distance","time1","time2","time3","tip_1","layout","action1","fadeIn","action3","fadeOut","yes","no","hideAlert","btn_yes","cb_click","btn_no","currentTarget","radix","random","r","arrayList","pop","captureScreen","saveName","isMobile","renderTexture_1","RenderTexture","create","Texture2D","PixelFormat","RGBA8888","gl","DEPTH24_STENCIL8_OES","_sgNode","setVisible","begin","visit","saveToFile","ImageFormat","PNG","rt","interval","timeId","setInterval","clearInterval","getThousandString","numString","getBackNumString","list","getPointNumString","numList","getNumberList","timestamp","timeDate","Date","setTime","timeDateString","getDateStringByDate","timeString","getTimeStringByDate","nowDate","connector","year","getFullYear","month","getMonth","monthStr","day","getDate","dayStr","hour","getHours","hourStr","minute","getMinutes","minuteStr","second","vaule","sections","secLen","residue","WSManager","heartbeatInterval","intervalTime","timeoutTime","timeoutMax","heartbeatStart","heartbeatEnd","timeID","ws","readyState","sendDataArray","cb_close","isLogin","state","WebSocket","CONNECTING","binaryType","onopen","ev","OPEN","checkTimeOut","onclose","CLOSING","CLOSED","onmessage","getMessageId","msgBody","getMessageBody","s_data","doPush","sendData","getSendData","now","sendTime","js","array","remove","ACCOUNT_PING","dateTime","checkHeartbeat","tempRemove","removeArray","stopCheck","ACCOUNT_HEART","ping","close","ACCOUNT_KICK_OFFLINE_NOTIFY","WALLET_WALLET_NOTIFY","walletVo","MESSAGE_NOTICE_NOTIFY","CHAT_SEND_NOTIFY","HOTPROMPT_HOTDATA_NOTIFY","MALL_CHARGE_NOTIFY","DZPKER_TABLE_STATE_NOTIFY","DZPKER_SEAT_STATE_NOTIFY","DZPKER_TABLE_BT_NOTIFY","DZPKER_TABLE_SETTLEMENT_NOTIFY","DZPKER_TABLE_SETTLEMENT_INSURANCE_NOTIFY","DZPKER_TABLE_BUY_CHIP_SUCESS_NOTIFY","DZPKER_TABLE_SHOW_CARD_NOTIFY","DZPKER_TABLE_STRADDL_BT_NOTIFY","DZPKER_TABLE_SEAT_KICK_NOTIFY","createMessage","bodyBuffer","ArrayBufferToString","bodyArray","getArrayNumberFromString","bodyLen","msgHeader","hcheck","bcheck","blen","alen","checkSum","headArray","getHeaderToArrayNumber","totalArray","concat","numberToArrayNumber","number","arrayNumber","StringToArrayBuffer","hash","bufView","strLen","getDelayTime"],"mappings":"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","sourcesContent":["\r\nconst { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class BetBTLayer extends cc.Component {\r\n\r\n  /**\r\n   * 加注滑动框\r\n   * @type {cc.Node} \r\n   * @memberof BetBTLayer\r\n   */\r\n  @property(cc.Node)\r\n  nodeAddBet: cc.Node = null;\r\n  /**\r\n   * 加注大盲倍数的节点\r\n   * @type {cc.Node}\r\n   * @memberof BetBTLayer\r\n   */\r\n  @property(cc.Node)\r\n  nodeBigBlind: cc.Node = null;\r\n  /**\r\n   * 加注底池倍数的节点\r\n   * @type {cc.Node}\r\n   * @memberof BetBTLayer\r\n   */\r\n  @property(cc.Node)\r\n  nodeBetPool: cc.Node = null;\r\n  /**\r\n   * 进度条\r\n   * @type {cc.ProgressBar}\r\n   * @memberof BetBTLayer\r\n   */\r\n  @property(cc.ProgressBar)\r\n  addBetPro: cc.ProgressBar = null;\r\n  /**\r\n   * 进度按钮\r\n   * @type {cc.Slider}\r\n   * @memberof BetBTLayer\r\n   */\r\n  @property(cc.Node)\r\n  handle: cc.Node = null;\r\n  /**\r\n   * 最大加注金币\r\n   * @type {cc.Label}\r\n   * @memberof BetBTLayer\r\n   */\r\n  @property(cc.Label)\r\n  lblAddBet: cc.Label = null;\r\n  /**\r\n    * 表态按钮\r\n    * @type {[cc.Node]}  0=alin  1=跟注 2=过牌 3=加注\r\n    * @memberof BetBTLayer\r\n    */\r\n  @property([cc.Node])\r\n  bt_node_list: cc.Node[] = [];\r\n  /**\r\n   * 大盲倍数加倍按钮列表\r\n   * @type {cc.Button[]}\r\n   * @memberof BetBTLayer\r\n   */\r\n  @property([cc.Button])\r\n  btn_bigBlind_list: cc.Button[] = [];\r\n  /**\r\n   * 底池倍数加倍按钮列表\r\n   * @type {cc.Button[]}\r\n   * @memberof BetBTLayer\r\n   */\r\n  @property([cc.Button])\r\n  btn_betPool_list: cc.Button[] = [];\r\n  /**\r\n   * 最大加注\r\n   * @type {number}\r\n   * @memberof BetBTLayer\r\n   */\r\n  _maxAddBet: number = 0;\r\n  /**\r\n   * 最低加注\r\n   * @type {number}\r\n   * @memberof BetBTLayer\r\n   */\r\n  _minAddBet: number = 0;\r\n  /**\r\n   * 当前加注\r\n   * @type {number}\r\n   * @memberof BetBTLayer\r\n   */\r\n  _curAddBet: number = 0;\r\n  /**\r\n   * 大盲\r\n   * @type {number}\r\n   * @memberof BetBTLayer\r\n   */\r\n  _bigBlind: number = 0;\r\n\r\n  _firstPos: cc.Vec2 = cc.v2(0, 0);\r\n  _endPos: cc.Vec2 = cc.v2(0, 0);\r\n  onLoad() {\r\n    this.bt_node_list[3].on(cc.Node.EventType.TOUCH_START, (event: cc.Event.EventTouch) => {\r\n      let touches = event.getTouches();\r\n      this._firstPos = touches[0].getLocation();\r\n\r\n      this.bt_node_list[3].opacity = 0;\r\n      this.nodeBetPool.active = false;\r\n      this.nodeBigBlind.active = false;\r\n      this.showAddBet();\r\n    }, this);\r\n    this.bt_node_list[3].on(cc.Node.EventType.TOUCH_MOVE, (event: cc.Event.EventTouch) => {\r\n      let touches = event.getTouches();\r\n      this._endPos = touches[0].getLocation();\r\n      let d = cc.pDistance(this._firstPos, this._endPos);\r\n      if (d <= 2) {\r\n        return;\r\n      }\r\n      let delta = touches[0].getDelta();\r\n      let maxLen = this.handle.parent.height;\r\n      this.handle.y += delta.y;\r\n      if (this.handle.y < - maxLen / 2) {\r\n        this.handle.y = -maxLen / 2;\r\n      } else if (this.handle.y > maxLen / 2) {\r\n        this.handle.y = maxLen / 2;\r\n      } else { }\r\n\r\n      let pro = (this.handle.y + maxLen / 2) / maxLen;\r\n      this.addBetPro.progress = pro;\r\n      let curAddBet = Math.floor(this._maxAddBet * pro);\r\n\r\n      if (curAddBet === this._maxAddBet) {\r\n        this.lblAddBet.string = 'ALLIN';\r\n      } else if (curAddBet < this._minAddBet) {\r\n        this.lblAddBet.string = curAddBet.toString();\r\n      } else {\r\n        curAddBet = Math.ceil((curAddBet - this._minAddBet) / this._bigBlind) * this._bigBlind + this._minAddBet;\r\n        this.lblAddBet.string = curAddBet.toString();\r\n      }\r\n      this._curAddBet = curAddBet;\r\n    }, this);\r\n\r\n    this.bt_node_list[3].on(cc.Node.EventType.TOUCH_END, this.touchAddBetEnd, this);\r\n    this.bt_node_list[3].on(cc.Node.EventType.TOUCH_CANCEL, this.touchAddBetEnd, this);\r\n  }\r\n  /**\r\n   * 点击加注的end事件\r\n   * @memberof BetBTLayer\r\n   */\r\n  touchAddBetEnd() {\r\n    this.nodeAddBet.active = false;\r\n    this.bt_node_list[3].opacity = 255;\r\n\r\n    //如果当前加注大于或等于 最低加注 金额,就想服务器发送消息,如果不满足，就不发送\r\n    if (this._curAddBet >= this._minAddBet) {\r\n      this.sendBetBT(4, this._curAddBet);\r\n    }\r\n    let tableData = dd.gm_manager.getTableData();\r\n    if (tableData) {\r\n      //当底池总额大于4倍大盲注的数额时，显示1/2底池、2/3底池 、1倍底池按钮\r\n      if (Number(tableData.poolMoneys) > 4 * tableData.bigBlind) {\r\n        this.nodeBetPool.active = true;\r\n        this.nodeBigBlind.active = false;\r\n      } else {\r\n        this.nodeBetPool.active = false;\r\n        this.nodeBigBlind.active = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  init() {\r\n    this.nodeAddBet.active = false;\r\n    let mineSeat = dd.gm_manager.getMineSeat();\r\n    let tableData = dd.gm_manager.getTableData();\r\n    if (mineSeat && tableData) {\r\n      this.node.active = true;\r\n\r\n      let shouldBet = Number(tableData.maxBetMoney) - Number(mineSeat.betMoney);\r\n      //如果自己身上的钱足够下到 应该下注的金币\r\n      if (Number(mineSeat.currMoney) > shouldBet) {\r\n        //如果自己应该加入的金币为0，表示可以过牌 ; 如果大于0，就必须跟注\r\n        this.bt_node_list[1].active = shouldBet > 0 ? true : false; //跟注\r\n        this.bt_node_list[2].active = shouldBet > 0 ? false : true; //过牌\r\n\r\n        //如果自己的钱足够加注 （加注的条件是 自己的钱 》 当前下注最大的下注 * 2）,如果不足，就显示alin\r\n        if (Number(mineSeat.currMoney) > dd.gm_manager.poolMoneys * 2) {\r\n          this.bt_node_list[0].active = false; //alin\r\n          this.bt_node_list[3].active = true; //加注\r\n          this.bt_node_list[3].opacity = 255;\r\n        } else {\r\n          this.bt_node_list[0].active = true; //alin\r\n          this.bt_node_list[3].active = false; //加注\r\n        }\r\n      } else {\r\n        //如果自己身上的钱已经不足,只显示allin 和 弃牌\r\n        this.bt_node_list[0].active = true;\r\n        this.bt_node_list[1].active = false;\r\n        this.bt_node_list[2].active = false;\r\n        this.bt_node_list[3].active = false;\r\n      }\r\n    } else {\r\n      this.node.active = false;\r\n    }\r\n\r\n    this.showSpecialAddBet();\r\n  }\r\n  /**\r\n   * 显示特殊的加注\r\n   * @memberof BetBTLayer\r\n   */\r\n  showSpecialAddBet() {\r\n    let mineSeat = dd.gm_manager.getMineSeat();\r\n    let tableData = dd.gm_manager.getTableData();\r\n    if (mineSeat && tableData) {\r\n      //自己应该下注的钱\r\n      let shouldBet = Number(tableData.maxBetMoney) - Number(mineSeat.betMoney);\r\n      //自己剩余的钱\r\n      let dMoney = Number(mineSeat.currMoney) - shouldBet;\r\n      //最小的加注金额 = 当前轮桌子筹码总额 * 2\r\n      let minAddBet = dd.gm_manager.poolMoneys * 2;\r\n      //当底池总额大于4倍大盲注的数额时，显示1/2底池、2/3底池 、1倍底池按钮\r\n      if (Number(tableData.poolMoneys) > 4 * tableData.bigBlind) {\r\n        this.nodeBetPool.active = true;\r\n        this.nodeBigBlind.active = false;\r\n\r\n        let pm = Number(tableData.poolMoneys);\r\n        let pm1 = Math.ceil(Math.ceil(pm * 0.5) / tableData.bigBlind) * tableData.bigBlind;\r\n        if (dMoney >= pm1 && pm1 >= minAddBet) {\r\n          this.btn_betPool_list[0].interactable = true;\r\n        } else {\r\n          this.btn_betPool_list[0].interactable = false;\r\n        }\r\n\r\n        let pm2 = Math.ceil(Math.ceil(pm * 2 / 3) / tableData.bigBlind) * tableData.bigBlind;\r\n        if (dMoney >= pm2 && pm2 >= minAddBet) {\r\n          this.btn_betPool_list[1].interactable = true;\r\n        } else {\r\n          this.btn_betPool_list[1].interactable = false;\r\n        }\r\n\r\n        let pm3 = Math.ceil(pm / tableData.bigBlind) * tableData.bigBlind;\r\n        if (dMoney >= pm3 && pm3 >= minAddBet) {\r\n          this.btn_betPool_list[2].interactable = true;\r\n        } else {\r\n          this.btn_betPool_list[2].interactable = false;\r\n        }\r\n      } else {\r\n        //当底池总额小于4倍大盲注的数额时，显示3倍大盲、4倍大盲、1倍底池按钮\r\n        this.nodeBetPool.active = false;\r\n        this.nodeBigBlind.active = true;\r\n\r\n        let b1 = tableData.bigBlind * 3;\r\n        if (dMoney >= b1 && b1 >= minAddBet) {\r\n          this.btn_bigBlind_list[0].interactable = true;\r\n        } else {\r\n          this.btn_bigBlind_list[0].interactable = false;\r\n        }\r\n\r\n        let b2 = tableData.bigBlind * 4;\r\n        if (dMoney >= b2 && b2 >= minAddBet) {\r\n          this.btn_bigBlind_list[1].interactable = true;\r\n        } else {\r\n          this.btn_bigBlind_list[1].interactable = false;\r\n        }\r\n\r\n        let pm = Number(tableData.poolMoneys);\r\n        let pm3 = Math.ceil(pm / tableData.bigBlind) * tableData.bigBlind;\r\n        if (dMoney >= pm3 && pm3 >= minAddBet) {\r\n          this.btn_bigBlind_list[2].interactable = true;\r\n        } else {\r\n          this.btn_bigBlind_list[2].interactable = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * 显示加注界面\r\n   * @memberof BetBTLayer\r\n   */\r\n  showAddBet() {\r\n    this.nodeAddBet.active = true;\r\n    let mineSeat = dd.gm_manager.getMineSeat();\r\n    let tableData = dd.gm_manager.getTableData();\r\n    if (mineSeat && tableData) {\r\n      //当前这轮已下注的人下注最大值\r\n      let r_max = Math.ceil(dd.gm_manager.poolMoneys / tableData.bigBlind) * tableData.bigBlind;\r\n      if (r_max === 0) r_max = tableData.bigBlind;\r\n      //自己最低加注的值\r\n      this._minAddBet = r_max * 2 - Number(mineSeat.betMoney);\r\n      //自己最大加注的值\r\n      this._maxAddBet = Number(mineSeat.currMoney);\r\n      this._bigBlind = tableData.bigBlind;\r\n      //自己当前加注的值\r\n      this._curAddBet = this._minAddBet;\r\n      this.lblAddBet.string = this._minAddBet.toString();\r\n      //计算handle的位置\r\n      let pro = this._minAddBet / this._maxAddBet;\r\n      let maxLen = this.handle.parent.height;\r\n      let curY = maxLen * pro - maxLen / 2;\r\n      this.handle.y = curY;\r\n      //重置进度条的进度\r\n      this.addBetPro.progress = pro;\r\n    }\r\n  }\r\n  /**\r\n   * 点击表态按钮\r\n   * @param {any} event \r\n   * @param {string} type 0=弃牌 2=加注 1=跟注\r\n   * @memberof PlayerLayer\r\n   */\r\n  click_btn_state(event, type: string) {\r\n    switch (type) {\r\n      case '1'://弃牌\r\n        this.sendBetBT(1, 0);\r\n        break;\r\n      case '2'://过牌\r\n        this.sendBetBT(2, 0);\r\n        break;\r\n      case '3': {//跟注\r\n        let mineSeat = dd.gm_manager.getMineSeat();\r\n        let tableData = dd.gm_manager.getTableData();\r\n        if (mineSeat && tableData) {\r\n          let shouldBet = Number(tableData.maxBetMoney) - Number(mineSeat.betMoney);\r\n          this.sendBetBT(3, shouldBet);\r\n        }\r\n        break;\r\n      }\r\n      case '4'://加注\r\n        this.showAddBet();\r\n        break;\r\n      case '5'://allin\r\n        let mineSeat = dd.gm_manager.getMineSeat();\r\n        this.sendBetBT(5, Number(mineSeat.currMoney));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 发送下注表态\r\n   * @param {number} bt 座位表态结果(1=弃牌,2=过牌,3=跟注,4=加注,5=全下)\r\n   * @param {number} btVal  座位表态金币\r\n   * @memberof PlayerLayer\r\n   */\r\n  sendBetBT(bt: number, btVal: number) {\r\n    let mineSeat = dd.gm_manager.getMineSeat();\r\n    if (mineSeat) {\r\n      //如果为最大加注金币，就allin\r\n      if (btVal >= Number(mineSeat.currMoney)) {\r\n        btVal = Number(mineSeat.currMoney);\r\n      }\r\n      this.node.active = false;\r\n      let obj = {\r\n        tableId: dd.gm_manager.getTableData().tableId,\r\n        bt: bt,\r\n        btVal: btVal\r\n      }\r\n      let msg = JSON.stringify(obj);\r\n      dd.ws_manager.sendMsg(dd.protocol.DZPKER_TABLE_BT, msg, (flag: number, content?: any) => {\r\n        if (flag === 0) {\r\n        } else if (flag === -1) {\r\n          this.node.active = true;\r\n          dd.ui_manager.showTip('表态消息发送超时');\r\n        } else {\r\n          this.node.active = true;\r\n          dd.ui_manager.showTip(content);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * 点击大盲倍数加注 1=3倍大盲 2=4倍大盲 3=1倍底池\r\n   * @memberof BetBTLayer\r\n   */\r\n  click_btn_bigBlind(event, type: string) {\r\n    let mineSeat = dd.gm_manager.getMineSeat();\r\n    let tableData = dd.gm_manager.getTableData();\r\n    if (mineSeat && tableData) {\r\n      switch (type) {\r\n        case '1'://2倍大盲\r\n          this.sendBetBT(4, tableData.bigBlind * 3);\r\n          break;\r\n        case '2'://3倍大盲\r\n          this.sendBetBT(4, tableData.bigBlind * 4);\r\n          break;\r\n        case '3': //1倍底池\r\n          let pm = Number(tableData.poolMoneys);\r\n          pm = Math.ceil(pm / tableData.bigBlind) * tableData.bigBlind;\r\n          this.sendBetBT(4, pm);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 点击底池倍数加注 1=1/2倍底池 2=2/3倍底池 3=1倍底池\r\n   * @memberof BetBTLayer\r\n   */\r\n  click_btn_betPool(event, type: string) {\r\n    let mineSeat = dd.gm_manager.getMineSeat();\r\n    let tableData = dd.gm_manager.getTableData();\r\n    if (mineSeat && tableData) {\r\n      let pm = Number(tableData.poolMoneys);\r\n      switch (type) {\r\n        case '1'://1/2倍底池\r\n          pm = Math.ceil(Math.ceil(pm * 0.5) / tableData.bigBlind) * tableData.bigBlind;\r\n          this.sendBetBT(4, pm);\r\n          break;\r\n        case '2'://=2/3倍底池\r\n          pm = Math.ceil(Math.ceil(pm * 2 / 3) / tableData.bigBlind) * tableData.bigBlind;\r\n          this.sendBetBT(4, pm);\r\n          break;\r\n        case '3': //1倍底池\r\n          pm = Math.ceil(pm / tableData.bigBlind) * tableData.bigBlind;\r\n          this.sendBetBT(4, pm);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class ButtonLayer extends cc.Component {\r\n\r\n    /**\r\n    * 表态按钮界面\r\n    * @type {cc.Node}\r\n    * @memberof PlayerLayer\r\n    */\r\n    @property(cc.Node)\r\n    nodeBetBT: cc.Node = null;\r\n    /**\r\n     * 离开房间按钮\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Node)\r\n    leave: cc.Node = null;\r\n    /**\r\n     * 站起按钮(坐下后可见)\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Node)\r\n    stand: cc.Node = null;\r\n    /**\r\n     * 分享按钮\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Node)\r\n    share: cc.Node = null;\r\n    /**\r\n     * 折叠按钮\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Node)\r\n    arrow: cc.Node = null;\r\n    /**\r\n     * 上局回顾按钮\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Node)\r\n    history: cc.Node = null;\r\n    /**\r\n     * 个人盈亏按钮\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Node)\r\n    win: cc.Node = null;\r\n    /**\r\n     * 房内用户按钮\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Node)\r\n    player: cc.Node = null;\r\n    /**\r\n     * 表情按钮(坐下后可见)\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Node)\r\n    expression: cc.Node = null;\r\n    /**\r\n     * 申购按钮\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Node)\r\n    buyBet: cc.Node = null;\r\n    /**\r\n     * 申购列表按钮\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Node)\r\n    dotNode: cc.Node = null;\r\n    /**\r\n     * 申购数的显示(大于才显示,包括它的父节点)\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Label)\r\n    lab_dot: cc.Label = null;\r\n    /**\r\n     * 表情面板\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Node)\r\n    bq_board: cc.Node = null;\r\n    /**\r\n     * 上局回顾面板\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Node)\r\n    reviewLayer: cc.Node = null;\r\n    /**\r\n     * 个人盈亏面板\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Node)\r\n    settlementLayer: cc.Node = null;\r\n    /**\r\n     * 房内用户面板\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Node)\r\n    playersLayer: cc.Node = null;\r\n    /**\r\n     * 申购列表面板\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Node)\r\n    emailLayer: cc.Node = null;\r\n    /**\r\n     * 左边框\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Node)\r\n    left_board: cc.Node = null;\r\n    /**\r\n     * 表情关闭按钮图片\r\n     * \r\n     * @type {cc.SpriteFrame}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.SpriteFrame)\r\n    bq_close: cc.SpriteFrame = null;\r\n    /**\r\n     * 开始按钮(只有当有两个或两个以上的人坐下且游戏没有开始的时候显示)\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Node)\r\n    startNode: cc.Node = null;\r\n    /**\r\n     * 等待游戏开始的节点\r\n     * @type {cc.Node}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Node)\r\n    waitNode: cc.Node = null;\r\n    /**\r\n     * 申购记录预制\r\n     * \r\n     * @type {cc.Prefab}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Prefab)\r\n    emailItem: cc.Prefab = null;\r\n    /**\r\n     * 上局回顾预制\r\n     * \r\n     * @type {cc.Prefab}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Prefab)\r\n    reviewItem: cc.Prefab = null;\r\n    /**\r\n     * 个人盈亏预制\r\n     * \r\n     * @type {cc.Prefab}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Prefab)\r\n    settlementItem: cc.Prefab = null;\r\n    /**\r\n     * 房内玩家预制\r\n     * \r\n     * @type {cc.Prefab}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Prefab)\r\n    playerItem: cc.Prefab = null;\r\n    /**\r\n     * 申购面板预制\r\n     * \r\n     * @type {cc.Prefab}\r\n     * @memberof ButtonLayer\r\n     */\r\n    @property(cc.Prefab)\r\n    pre_buy: cc.Prefab = null;\r\n    /**\r\n     * 折叠筐展开状态\r\n     * \r\n     * @type {boolean}\r\n     * @memberof ButtonLayer\r\n     */\r\n    isOpen: boolean = false;\r\n    /**\r\n     * 表情框展示状态\r\n     * \r\n     * @type {boolean}\r\n     * @memberof ButtonLayer\r\n     */\r\n    bq_isShow: boolean = false;\r\n    /**\r\n     * 左边框展示状态\r\n     * \r\n     * @type {boolean}\r\n     * @memberof ButtonLayer\r\n     */\r\n    left_isShow: boolean = false;\r\n\r\n    onLoad() {\r\n        cc.systemEvent.on('betBT', this.showBetBTLayer, this);\r\n\r\n        this.isOpen = false;\r\n        this.change();\r\n        this.initBQ();\r\n        if (dd.gm_manager.isMineCreater()) {\r\n            this.dotNode.active = true;\r\n            this.updateOrderCount();\r\n        } else {\r\n            this.dotNode.active = false;\r\n        }\r\n        //重连进入游戏的时候刷新\r\n        this.showBetBTLayer();\r\n        dd.gm_manager.btnScript = this;\r\n    }\r\n    onDestroy() {\r\n        cc.systemEvent.off('betBT', this.showBetBTLayer, this);\r\n    }\r\n    /**\r\n   * 显示表态按钮界面\r\n   * @memberof PlayerLayer\r\n   */\r\n    showBetBTLayer() {\r\n        let mineSeat = dd.gm_manager.getMineSeat();\r\n        let tableData = dd.gm_manager.getTableData();\r\n        if (mineSeat && tableData) {\r\n            //在表态阶段显示表态按钮\r\n            if (tableData.gameState === dd.game_state.STATE_TABLE_BET_BT_1 || tableData.gameState === dd.game_state.STATE_TABLE_BET_BT_2\r\n                || tableData.gameState === dd.game_state.STATE_TABLE_BET_BT_3 || tableData.gameState === dd.game_state.STATE_TABLE_BET_BT_4) {\r\n                //如果表态座位是自己，并且自己是 ‘等待表态’ 状态\r\n                if (tableData.btIndex === mineSeat.seatIndex && mineSeat.btState === 0) {\r\n                    this.nodeBetBT.active = true;\r\n                    let betBT = this.nodeBetBT.getComponent('BetBTLayer');\r\n                    betBT.init();\r\n                    this.closeAll();\r\n                    dd.mp_manager.playBet();\r\n                } else {\r\n                    this.nodeBetBT.active = false;\r\n                }\r\n            } else {\r\n                this.nodeBetBT.active = false;\r\n            }\r\n        } else {\r\n            this.nodeBetBT.active = false;\r\n        }\r\n    }\r\n    /**\r\n     * 更新申购订单数量\r\n     * \r\n     * @param {(isOk: boolean) => void} [callback] \r\n     * @memberof ButtonLayer\r\n     */\r\n    updateOrderCount() {\r\n        let obj = {\r\n            accountId: dd.ud_manager.account_mine.accountId\r\n        }\r\n        let msg = JSON.stringify(obj);\r\n        dd.ws_manager.sendMsg(dd.protocol.HOTPROMPT_GET_HOTDATA, msg, (flag: number, content?: any) => {\r\n            if (flag === 0) {\r\n                let hots = content as HotPromptAttrib[];\r\n                hots.forEach((hot: HotPromptAttrib) => {\r\n                    if (hot.hotKey === dd.hot_key.HOT_KEY_ORDER) {\r\n                        if (dd.gm_manager.orderCount > -1 && dd.gm_manager.orderCount < hot.hotVal) {\r\n                            dd.mp_manager.playMsg();\r\n                        }\r\n                        dd.gm_manager.orderCount = hot.hotVal;\r\n                    }\r\n                }, this);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 初始化表情\r\n     * \r\n     * @memberof ButtonLayer\r\n     */\r\n    initBQ() {\r\n        dd.img_manager.bqSpriteFrames.forEach((spriteFrame: cc.SpriteFrame) => {\r\n            let node = new cc.Node();\r\n            node.width = 80;\r\n            node.height = 80;\r\n            node.tag = Number(spriteFrame.name);\r\n            node.on(cc.Node.EventType.TOUCH_END, (event: cc.Event.EventTouch) => {\r\n                cc.log('发送表情');\r\n                cc.log(event.getCurrentTarget());\r\n                let obj = {\r\n                    tableId: dd.gm_manager.getTableData().tableId,\r\n                    type: 1,\r\n                    content: event.getCurrentTarget().tag\r\n                };\r\n                let msg = JSON.stringify(obj);\r\n                dd.ws_manager.sendMsg(dd.protocol.CHAT_SEND, msg, (flag: number, content?: any) => {\r\n                    if (flag !== 0) {\r\n                        dd.ui_manager.showTip(content);\r\n                    }\r\n                });\r\n                this.closeAll();\r\n            }, this);\r\n            let spriteNode = new cc.Node();\r\n            spriteNode.addComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n            spriteNode.parent = node;\r\n            node.parent = this.bq_board;\r\n        });\r\n        let closeNode = new cc.Node();\r\n        closeNode.width = 80;\r\n        closeNode.height = 80;\r\n        closeNode.on(cc.Node.EventType.TOUCH_END, (event: cc.Event.EventTouch) => {\r\n            this.hideBQBoard();\r\n        }, this);\r\n        let sprite = new cc.Node();\r\n        sprite.addComponent(cc.Sprite).spriteFrame = this.bq_close;\r\n        sprite.parent = closeNode;\r\n        closeNode.parent = this.bq_board;\r\n    }\r\n    /**\r\n     * 显示表情面板\r\n     * \r\n     * @returns \r\n     * @memberof ButtonLayer\r\n     */\r\n    showBQBoard() {\r\n        if (this.bq_isShow) return;\r\n        this.bq_isShow = true;\r\n        this.bq_board.stopAllActions();\r\n        let endY = -this.node.height / 2 + this.bq_board.height / 2;\r\n        let len = endY - this.bq_board.y;\r\n        let rate = len / this.bq_board.height;\r\n        this.runMoveAction(this.bq_board, rate, cc.p(0, endY));\r\n    }\r\n    /**\r\n     * 隐藏表情面板\r\n     * \r\n     * @returns \r\n     * @memberof ButtonLayer\r\n     */\r\n    hideBQBoard() {\r\n        if (!this.bq_isShow) return;\r\n        this.bq_isShow = false;\r\n        this.bq_board.stopAllActions();\r\n        let endY = -this.node.height / 2 - this.bq_board.height / 2;\r\n        let len = this.bq_board.y - endY;\r\n        let rate = len / this.bq_board.height;\r\n        this.runMoveAction(this.bq_board, rate, cc.p(0, endY));\r\n    }\r\n    /**\r\n     * 显示左侧边框\r\n     * \r\n     * @returns \r\n     * @memberof ButtonLayer\r\n     */\r\n    showLFBoard() {\r\n        if (this.left_isShow) return;\r\n        this.left_isShow = true;\r\n        this.left_board.stopAllActions();\r\n        let endX = -this.node.width / 2 + this.left_board.width / 2;\r\n        let len = endX - this.left_board.x;\r\n        let rate = len / this.left_board.width;\r\n        this.runMoveAction(this.left_board, rate, cc.p(endX, 0));\r\n    }\r\n    /**\r\n     * 隐藏左侧边框\r\n     * \r\n     * @returns \r\n     * @memberof ButtonLayer\r\n     */\r\n    hideLFBoard() {\r\n        if (!this.left_isShow) return;\r\n        this.left_isShow = false;\r\n        this.left_board.stopAllActions();\r\n        let endX = -this.node.width / 2 - this.left_board.width / 2;\r\n        let len = this.left_board.x - endX;\r\n        let rate = len / this.left_board.width;\r\n        this.runMoveAction(this.left_board, rate, cc.p(endX, 0), () => {\r\n            //隐藏左边框中的所有节点\r\n            this.showNode();\r\n        });\r\n    }\r\n    /**\r\n     * 执行节点移动动画\r\n     * \r\n     * @param {cc.Node} node \r\n     * @param {number} rate \r\n     * @param {cc.Vec2} point \r\n     * @param {Function} [endAction] \r\n     * @memberof ButtonLayer\r\n     */\r\n    runMoveAction(node: cc.Node, rate: number, point: cc.Vec2, endAction?: Function) {\r\n        let moveAction = cc.moveTo(0.3 * rate, point);\r\n        let callback = cc.callFunc(() => {\r\n            node.setPosition(point);\r\n            if (endAction) {\r\n                endAction();\r\n            }\r\n        }, this);\r\n        node.runAction(cc.sequence(moveAction, callback));\r\n    }\r\n    /**\r\n     * 点击折叠按钮\r\n     * \r\n     * @param {cc.Event.EventCustom} event \r\n     * @param {string} [data] \r\n     * @memberof ButtonLayer\r\n     */\r\n    click_arrow(event: cc.Event.EventCustom, data?: string) {\r\n        dd.mp_manager.playButton();\r\n        this.isOpen = !this.isOpen;\r\n        this.change();\r\n        this.hideBQBoard();\r\n        this.hideLFBoard();\r\n    }\r\n    /**\r\n     * 关闭所有折叠按钮,表情和侧边栏\r\n     * \r\n     * @memberof ButtonLayer\r\n     */\r\n    closeAll() {\r\n        dd.mp_manager.playButton();\r\n        this.isOpen = false;\r\n        this.change();\r\n        this.hideBQBoard();\r\n        this.hideLFBoard();\r\n    }\r\n    /**\r\n     * 改变右下角折叠按钮的状态\r\n     * \r\n     * @memberof ButtonLayer\r\n     */\r\n    change() {\r\n        this.arrow.rotation = this.isOpen ? 180 : 0;\r\n        this.history.active = this.isOpen;\r\n        this.win.active = this.isOpen;\r\n        this.player.active = this.isOpen;\r\n        this.leave.active = this.isOpen;\r\n        this.stand.active = (this.isOpen && dd.gm_manager.getMineSeat()) ? true : false;\r\n        this.share.active = this.isOpen;\r\n        this.expression.active = (this.isOpen && dd.gm_manager.getMineSeat()) ? true : false;;\r\n        this.buyBet.active = this.isOpen;\r\n    }\r\n    /**\r\n     * 控制左边框内容显示(不传为全隐藏)\r\n     * \r\n     * @param {cc.Node} [node] 需要显示的节点\r\n     * @memberof ButtonLayer\r\n     */\r\n    showNode(node?: cc.Node) {\r\n        this.reviewLayer.active = (this.reviewLayer === node) ? true : false;\r\n        this.settlementLayer.active = (this.settlementLayer === node) ? true : false;\r\n        this.playersLayer.active = (this.playersLayer === node) ? true : false;\r\n        this.emailLayer.active = (this.emailLayer === node) ? true : false;\r\n    }\r\n    /**\r\n     * 点击上局回顾\r\n     * \r\n     * @memberof ButtonLayer\r\n     */\r\n    click_history() {\r\n        this.closeAll();\r\n        this.showNode(this.reviewLayer);\r\n        //清理上次的数据\r\n        let sv = cc.find('sv', this.reviewLayer).getComponent(cc.ScrollView);\r\n        sv.scrollToTop();\r\n        sv.content.destroyAllChildren();\r\n        let cardLayout = cc.find('top/cardLayout', this.reviewLayer);\r\n        cardLayout.destroyAllChildren();\r\n        //获取本次的数据\r\n        let obj = {\r\n            tableId: dd.gm_manager.getTableData().tableId\r\n        };\r\n        let msg = JSON.stringify(obj);\r\n        dd.ws_manager.sendMsg(dd.protocol.DZPKER_TABLE_PREV_FIGHT, msg, (flag: number, content?: any) => {\r\n            if (flag === 0) {\r\n                //显示本次数据\r\n                let data: PrevRecord = content;\r\n\r\n                if (data.items && data.items.length > 0) {\r\n                    for (let i = 0; i < 5; i++) {\r\n                        let cardId = 0;\r\n                        if (data.tableCards && data.tableCards.length > i) {\r\n                            cardId = data.tableCards[i];\r\n                        }\r\n                        let cardNode = new cc.Node();\r\n                        let sprite = cardNode.addComponent(cc.Sprite);\r\n                        sprite.spriteFrame = dd.img_manager.getPokerSpriteFrameById(cardId);\r\n                        sprite.sizeMode = cc.Sprite.SizeMode.CUSTOM;\r\n                        cardNode.width = 50;\r\n                        cardNode.height = 70;\r\n                        cardNode.parent = cardLayout;\r\n                    }\r\n\r\n                    data.items.forEach((item: TablePrevFightRecordItem) => {\r\n                        let itemNode = cc.instantiate(this.reviewItem);\r\n                        itemNode.getComponent('ReviewItem').init(item);\r\n                        itemNode.parent = sv.content;\r\n                    }, this);\r\n                }\r\n                //移动边框到显示区域\r\n                this.showLFBoard();\r\n            } else if (flag === -1) {\r\n                dd.ui_manager.showTip('上局回顾消息发送超时!');\r\n            } else {\r\n                dd.ui_manager.showTip(content);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 点击个人盈亏\r\n     * \r\n     * @memberof ButtonLayer\r\n     */\r\n    click_win() {\r\n        this.closeAll();\r\n        this.showNode(this.settlementLayer);\r\n        //清理上次的数据\r\n        let sv = cc.find('sv', this.settlementLayer).getComponent(cc.ScrollView);\r\n        sv.scrollToTop();\r\n        sv.content.destroyAllChildren();\r\n        //获取本次的数据\r\n        let obj = {\r\n            tableId: dd.gm_manager.getTableData().tableId\r\n        };\r\n        let msg = JSON.stringify(obj);\r\n        dd.ws_manager.sendMsg(dd.protocol.DZPKER_TABLE_PLAYER_ONCE_WINSCORE, msg, async (flag: number, content?: any) => {\r\n            if (flag === 0) {\r\n                //显示本次数据\r\n                let data: MineRecord = content;\r\n                let infoNode = cc.find('info', this.settlementLayer);\r\n                cc.find('head/mask/img', infoNode).getComponent(cc.Sprite).spriteFrame = await dd.img_manager.loadURLImage(dd.ud_manager.account_mine.roleAttribVo.headImg);\r\n                cc.find('nick', infoNode).getComponent(cc.Label).string = dd.utils.getStringBySize(dd.ud_manager.account_mine.roleAttribVo.nick, 12);\r\n                cc.find('gold', infoNode).getComponent(cc.Label).string = data.currMoney;\r\n                cc.find('bet', infoNode).getComponent(cc.Label).string = data.buyTotalMoney;\r\n                if (data.items && data.items.length > 0) {\r\n                    data.items.forEach((item: WinScoreDetailsItem) => {\r\n                        let itemNode = cc.instantiate(this.settlementItem);\r\n                        cc.find('index', itemNode).getComponent(cc.Label).string = '第' + item.gameNum + '局';\r\n                        cc.find('gold', itemNode).getComponent(cc.Label).string = item.winScore;\r\n                        itemNode.parent = sv.content;\r\n                    }, this);\r\n                }\r\n                //移动边框到显示区域\r\n                this.showLFBoard();\r\n            } else if (flag === -1) {\r\n                dd.ui_manager.showTip('个人盈亏消息发送超时!');\r\n            } else {\r\n                dd.ui_manager.showTip(content);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 点击房内用户\r\n     * \r\n     * @memberof ButtonLayer\r\n     */\r\n    click_player() {\r\n        this.closeAll();\r\n        this.showNode(this.playersLayer);\r\n        //清理上次的数据\r\n        let sv = cc.find('sv', this.playersLayer).getComponent(cc.ScrollView);\r\n        sv.scrollToTop();\r\n        sv.content.destroyAllChildren();\r\n        //获取本次的数据\r\n        let obj = {\r\n            tableId: dd.gm_manager.getTableData().tableId\r\n        };\r\n        let msg = JSON.stringify(obj);\r\n        dd.ws_manager.sendMsg(dd.protocol.DZPKER_TABLE_PLAYER_LIST, msg, async (flag: number, content?: any) => {\r\n            if (flag === 0) {\r\n                //显示本次数据\r\n                let data: AllUser = content;\r\n                let str = Number(data.insuranceScore) > 0 ? ('+' + data.insuranceScore) : (data.insuranceScore);\r\n                cc.find('top/gold', this.playersLayer).getComponent(cc.Label).string = str;\r\n                if (data.items && data.items.length > 0) {\r\n                    data.items.forEach((item: TablePlayerListItem) => {\r\n                        let playerNode = cc.instantiate(this.playerItem);\r\n                        playerNode.getComponent('PlayerItem').init(item);\r\n                        playerNode.parent = sv.content;\r\n                    }, this);\r\n                }\r\n                //移动边框到显示区域\r\n                this.showLFBoard();\r\n            } else if (flag === -1) {\r\n                dd.ui_manager.showTip('房内用户消息发送超时!');\r\n            } else {\r\n                dd.ui_manager.showTip(content);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 点击表情\r\n     * \r\n     * @memberof ButtonLayer\r\n     */\r\n    click_expression() {\r\n        this.closeAll();\r\n        this.showBQBoard();\r\n    }\r\n    /**\r\n     * 点击离开房间\r\n     * \r\n     * @memberof ButtonLayer\r\n     */\r\n    click_leave() {\r\n        this.closeAll();\r\n        if (dd.ui_manager.showLoading('正在离开桌子,请稍后')) {\r\n            let obj = {\r\n                tableId: dd.gm_manager.getTableData().tableId\r\n            };\r\n            let msg = JSON.stringify(obj);\r\n            dd.ws_manager.sendMsg(dd.protocol.DZPKER_TABLE_LEAVE, msg, (flag: number, content?: any) => {\r\n                if (flag === 0) {\r\n                    cc.director.loadScene('HomeScene');\r\n                } else if (flag === -1) {\r\n                    dd.ui_manager.showTip('退出桌子消息发送超时!');\r\n                } else {\r\n                    dd.ui_manager.showTip(content);\r\n                }\r\n            });\r\n        } else {\r\n            dd.ui_manager.showTip('游戏中不能离开桌子!');\r\n        }\r\n    }\r\n    /**\r\n     * 点击站起\r\n     * \r\n     * @memberof ButtonLayer\r\n     */\r\n    click_stand() {\r\n        this.closeAll();\r\n        let mineSeat = dd.gm_manager.getMineSeat();\r\n        // if (dd.gm_manager.canStandOrLeave()) {\r\n        let obj = {\r\n            tableId: dd.gm_manager.getTableData().tableId,\r\n            seatIndex: mineSeat.seatIndex\r\n        };\r\n        let msg = JSON.stringify(obj);\r\n        dd.ws_manager.sendMsg(dd.protocol.DZPKER_SEAT_UP, msg, (flag: number, content?: any) => {\r\n            if (flag === 0) {\r\n                dd.ui_manager.showTip('离开座位');\r\n            } else if (flag === -1) {\r\n                dd.ui_manager.showTip('站起消息发送超时!');\r\n            } else {\r\n                dd.ui_manager.showTip(content);\r\n            }\r\n        });\r\n        // } else {\r\n        //     dd.ui_manager.showTip('游戏中不能离开座位!');\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * 点击分享\r\n     * \r\n     * @memberof ButtonLayer\r\n     */\r\n    click_share() {\r\n        this.closeAll();\r\n        dd.js_call_native.wxShare(dd.config.cd.ipaUrl, '德扑约', '我在德扑约房间:' + dd.gm_manager.getTableData().tableId + '中,约吗?');\r\n    }\r\n    /**\r\n     * 点击红点\r\n     * \r\n     * @memberof ButtonLayer\r\n     */\r\n    click_dot() {\r\n        this.closeAll();\r\n        dd.ws_manager.sendMsg(dd.protocol.DZPKER_QUERY_BUYCHIP_LIST, '', (flag: number, content?: any) => {\r\n            if (flag === 0) {\r\n                let datas = content.items as DzpkerOrderItem[];\r\n                if (datas && datas.length > 0) {\r\n                    this.showNode(this.emailLayer);\r\n                    let sv = this.emailLayer.getComponent(cc.ScrollView);\r\n                    sv.content.destroyAllChildren();\r\n                    datas.forEach((order: DzpkerOrderItem) => {\r\n                        let itemNode = cc.instantiate(this.emailItem);\r\n                        itemNode.getComponent('EmailItem').init(order, this.doDot);\r\n                        itemNode.parent = sv.content;\r\n                    }, this);\r\n                    sv.scrollToTop();\r\n                    this.showLFBoard();\r\n                } else {\r\n                    dd.ui_manager.showTip('当前没有申购记录!');\r\n                }\r\n            } else if (flag === -1) {\r\n                dd.ui_manager.showTip('获取申购数据超时!');\r\n            } else {\r\n                dd.ui_manager.showTip(content);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 处理申购点击事件\r\n     * \r\n     * @param {number} bt \r\n     * @param {string} id \r\n     * @param {cc.Node} node \r\n     * @memberof ButtonLayer\r\n     */\r\n    doDot(bt: number, id: string, node: cc.Node) {\r\n        let obj = {\r\n            itemId: id,\r\n            bt: bt\r\n        }\r\n        let msg = JSON.stringify(obj);\r\n        dd.ws_manager.sendMsg(dd.protocol.DZPKER_TRANS_BUYCHIP_ITEM, msg, (flag: number, content?: any) => {\r\n            if (flag === 0) {\r\n                if (bt === 1) {\r\n                    dd.ui_manager.showTip('已同意该申请!');\r\n                } else {\r\n                    dd.ui_manager.showTip('已忽略该申请!');\r\n                }\r\n                node.destroy();\r\n            } else if (flag === -1) {\r\n                dd.ui_manager.showTip('处理申购记录超时!');\r\n            } else {\r\n                dd.ui_manager.showTip(content);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 点击申购按钮\r\n     * \r\n     * @memberof ButtonLayer\r\n     */\r\n    click_buy() {\r\n        this.closeAll();\r\n        cc.instantiate(this.pre_buy).parent = this.node;\r\n    }\r\n    /**\r\n     * 点击游戏开始按钮\r\n     * \r\n     * @memberof ButtonLayer\r\n     */\r\n    click_start() {\r\n        dd.ui_manager.showLoading('正在准备开始游戏');\r\n        this.closeAll();\r\n        dd.ws_manager.sendMsg(\r\n            dd.protocol.DZPKER_TABLE_START_RUN,\r\n            JSON.stringify({ tableId: dd.gm_manager.getTableData().tableId }),\r\n            (flag: number, content?: any) => {\r\n                if (flag === 0) {\r\n                    dd.ui_manager.showTip('游戏开始');\r\n                } else {\r\n                    dd.ui_manager.showTip('游戏启动失败!');\r\n                }\r\n            }\r\n        );\r\n    }\r\n    update(dt: number) {\r\n        if (dd && dd.gm_manager && dd.gm_manager.getTableData()) {\r\n            if (this.dotNode.active) {//申购记录数量显示的控制\r\n                if (dd.gm_manager.orderCount > 0) {\r\n                    this.lab_dot.node.parent.active = true;\r\n                    this.lab_dot.string = dd.gm_manager.orderCount.toString();\r\n                } else {\r\n                    this.lab_dot.string = '';\r\n                    this.lab_dot.node.parent.active = false;\r\n                }\r\n                //如果没有申购了，就回收\r\n                if (this.left_isShow && this.emailLayer.active && this.emailLayer.getComponent(cc.ScrollView).content.childrenCount <= 0) {\r\n                    this.closeAll();\r\n                }\r\n            }\r\n            //如果桌子未运行\r\n            if (dd.gm_manager.getTableData().start !== 1) {\r\n                //如果是自己\r\n                if (dd.gm_manager.isMineCreater()) {\r\n                    this.startNode.active = true;\r\n                    //如果桌子上的人数大于1 \r\n                    if (dd.gm_manager.getSeatDownCount() > 1) {\r\n                        this.startNode.getComponent(cc.Button).interactable = true;\r\n                    } else {\r\n                        this.startNode.getComponent(cc.Button).interactable = false;\r\n                    }\r\n                } else {\r\n                    this.waitNode.active = true;\r\n                }\r\n            } else {\r\n                this.startNode.active = false;\r\n                this.waitNode.active = false;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","\r\nconst { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class BuyLayer extends cc.Component {\r\n    /**\r\n     * 最小带入\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof BuyLayer\r\n     */\r\n    @property(cc.Label)\r\n    lab_min: cc.Label = null;\r\n    /**\r\n     * 最大购入\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof BuyLayer\r\n     */\r\n    @property(cc.Label)\r\n    lab_max: cc.Label = null;\r\n    /**\r\n     * 显示当前选择的购买量\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof BuyLayer\r\n     */\r\n    @property(cc.Label)\r\n    lab_buy: cc.Label = null;\r\n    /**\r\n     * 加减购买量用的数组下标\r\n     * \r\n     * @type {number}\r\n     * @memberof BuyLayer\r\n     */\r\n    maxIndex: number = 0;\r\n    /**\r\n     * 记录桌子上的最小带入\r\n     * \r\n     * @type {number}\r\n     * @memberof BuyLayer\r\n     */\r\n    min: number = 0;\r\n\r\n    onLoad() {\r\n        let tableData = dd.gm_manager.getTableData();\r\n        this.min = tableData.joinChip;\r\n        this.maxIndex = Math.floor(tableData.buyMaxChip / tableData.joinChip);\r\n        this.lab_min.string = tableData.joinChip.toString();\r\n        this.lab_max.string = tableData.buyMaxChip.toString();\r\n        this.lab_buy.string = this.lab_min.string;\r\n        this.lab_buy.node.tag = 0;\r\n    }\r\n    /**\r\n     * 点击面板\r\n     * \r\n     * @memberof BuyLayer\r\n     */\r\n    click_board() {\r\n        dd.mp_manager.playButton();\r\n        this.node.destroy();\r\n    }\r\n    /**\r\n     * 点击加号\r\n     * \r\n     * @memberof BuyLayer\r\n     */\r\n    click_add() {\r\n        dd.mp_manager.playButton();\r\n        let index = this.lab_buy.node.tag;\r\n        if (index < this.maxIndex - 1) {\r\n            index++;\r\n            this.lab_buy.string = (this.min * (index + 1)).toString();\r\n            this.lab_buy.node.tag = index;\r\n        }\r\n    }\r\n    /**\r\n     * 点击减号\r\n     * \r\n     * @memberof BuyLayer\r\n     */\r\n    click_reduce() {\r\n        dd.mp_manager.playButton();\r\n        let index = this.lab_buy.node.tag;\r\n        if (index > 0) {\r\n            index--;\r\n            this.lab_buy.string = (this.min * (index + 1)).toString();\r\n            this.lab_buy.node.tag = index;\r\n        }\r\n    }\r\n    /**\r\n     * 点击发送申请\r\n     * \r\n     * @memberof BuyLayer\r\n     */\r\n    click_send() {\r\n        dd.ui_manager.showLoading('正在发送购买申请');\r\n        dd.mp_manager.playButton();\r\n        let obj = {\r\n            tableId: dd.gm_manager.getTableData().tableId,\r\n            chipNum: Number(this.lab_buy.string)\r\n        }\r\n        let msg = JSON.stringify(obj);\r\n        dd.ws_manager.sendMsg(dd.protocol.DZPKER_BUY_CHIP, msg, (flag: number, content?: any) => {\r\n            if (flag === 0) {\r\n                if (dd.gm_manager.getTableData().createPlayer === dd.ud_manager.account_mine.accountId) {\r\n                    dd.ui_manager.hideLoading();\r\n                } else {\r\n                    dd.ui_manager.showTip('申购消息已经发送给房主,请等候房主处理!');\r\n                }\r\n            } else if (flag === -1) {\r\n                dd.ui_manager.showTip('申购消息发送超时!');\r\n            } else {\r\n                dd.ui_manager.showTip(content);\r\n            }\r\n            this.node.destroy();\r\n        });\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class Career extends cc.Component {\r\n    /**\r\n     * 进度条数组\r\n     * \r\n     * @type {cc.Sprite[]}\r\n     * @memberof Career\r\n     */\r\n    @property([cc.Sprite])\r\n    proList: cc.Sprite[] = [];\r\n    /**\r\n     * 指针数组\r\n     * \r\n     * @type {cc.Node[]}\r\n     * @memberof Career\r\n     */\r\n    @property([cc.Node])\r\n    pointList: cc.Node[] = [];\r\n    /**\r\n     * 百分比数组\r\n     * \r\n     * @type {cc.Label[]}\r\n     * @memberof Career\r\n     */\r\n    @property([cc.Label])\r\n    perList: cc.Label[] = [];\r\n    /**\r\n     * 战绩统计\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof Career\r\n     */\r\n    @property(cc.Node)\r\n    layer1: cc.Node = null;\r\n    /**\r\n     * 历史记录\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof Career\r\n     */\r\n    @property(cc.Node)\r\n    layer2: cc.Node = null;\r\n    /**\r\n     * 房间明细界面\r\n     * @type {cc.Node}\r\n     * @memberof Career\r\n     */\r\n    @property(cc.Node)\r\n    detailLayer: cc.Node = null;\r\n    /**\r\n     * 房间明细的列表\r\n     * @type {cc.Node}\r\n     * @memberof Career\r\n     */\r\n    @property(cc.Node)\r\n    svNode_detail: cc.Node = null;\r\n    /**\r\n     * 生涯数据\r\n     * \r\n     * @type {CareerData}\r\n     * @memberof Career\r\n     */\r\n    data: CareerData = null;\r\n\r\n    init(data: CareerData) {\r\n        this.data = data;\r\n    }\r\n\r\n    onLoad() {\r\n        this.layer1.active = true;\r\n        this.layer2.active = false;\r\n        this.detailLayer.active = false;\r\n        let nums = [\r\n            Number(this.data.winRate),\r\n            Number(this.data.seatDown),\r\n            Number(this.data.showCard),\r\n            Number(this.data.addChip),\r\n            Number(this.data.dropCards),\r\n            Number(this.data.fullBet)\r\n        ];\r\n        nums.forEach((num: number, index: number) => {\r\n            this.proList[index].fillRange = -(num / 2);\r\n            this.pointList[index].rotation = -74 + num * 148;\r\n            this.perList[index].string = Math.round(num * 100) + '%';\r\n        }, this);\r\n        dd.ui_manager.hideLoading();\r\n    }\r\n    /**\r\n     * 点击退出\r\n     * \r\n     * @memberof Career\r\n     */\r\n    click_out() {\r\n        dd.mp_manager.playButton();\r\n        this.node.destroy();\r\n    }\r\n    /**\r\n     * 点击下方按钮切换展示界面\r\n     * \r\n     * @param {cc.Event.EventCustom} event \r\n     * @param {*} [data] \r\n     * @memberof Career\r\n     */\r\n    click_toggle(event: cc.Event.EventCustom, data?: any) {\r\n        dd.mp_manager.playButton();\r\n        if (Number(data) === 1) {\r\n            let sv = this.layer2.getComponent(cc.ScrollView);\r\n            sv.scrollToTop();\r\n            sv.content.destroyAllChildren();\r\n            this.layer2.active = false;\r\n            this.layer1.active = true;\r\n            this.detailLayer.active = false;\r\n        } else {\r\n            this.layer1.active = false;\r\n            this.layer2.active = true;\r\n            this.detailLayer.active = false;\r\n            if (this.data.historyList && this.data.historyList.length > 0) {\r\n                this.layer2.getComponent('SVScript').init(this.data.historyList, (data: CareerHistory) => {\r\n                    this.getRoomDetailInfo(data.recordId);\r\n                });\r\n            } else {\r\n                dd.ui_manager.showTip('您当前没有历史记录!');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 获取房间明细\r\n     * @param {string} recordId \r\n     * @memberof Career\r\n     */\r\n    getRoomDetailInfo(recordId: string) {\r\n        let obj = {\r\n            recordId: recordId,\r\n        };\r\n        let msg = JSON.stringify(obj);\r\n        dd.ws_manager.sendMsg(dd.protocol.DZPKER_TABLE_GET_ALL_WIN_SCORE_INFO, msg, (flag: number, content?: any) => {\r\n            if (flag === 0) {\r\n                let data: AllUser = content;\r\n                if (data.items && data.items.length > 0) {\r\n                    this.detailLayer.active = true;\r\n                    let detailList = [];\r\n                    data.items.forEach((item: TablePlayerListItem, index: number) => {\r\n                        let obj = {\r\n                            index: index,\r\n                            item: item\r\n                        };\r\n                        detailList.push(obj);\r\n                    }, this);\r\n                    this.svNode_detail.getComponent('SVScript').init(detailList);\r\n                }\r\n            } else if (flag === -1) {\r\n                dd.ui_manager.showTip('获取房间明细消息发送超时');\r\n            } else {\r\n                dd.ui_manager.showTip(content);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 退出房间明细\r\n     * @memberof Career\r\n     */\r\n    click_btn_outDetail() {\r\n        dd.mp_manager.playButton();\r\n        this.detailLayer.active = false;\r\n    }\r\n}\r\n","/**\r\n * 检测app版本号的请求地址\r\n */\r\nexport const checkUrl: string = 'http://27.50.49.181:8080/checkVer?ver=';\r\n/**\r\n * ws连接地址\r\n */\r\nexport const wsUrl: string = 'ws://27.50.49.181:30000';\r\n// export const wsUrl: string = 'ws://192.168.12.156:30000';\r\n/**\r\n * 微信id和key\r\n */\r\nexport const app_id: string = 'wx19e1237d774e5763';\r\nexport const secret: string = '57ff16852f286c0e571f375b425269d0';\r\n/**\r\n * 微信初始化状态 0 = 成功 其它失败\r\n */\r\nexport let wxState: number = -1;\r\n\r\n/**\r\n * 资源版本号\r\n */\r\nexport let version: string = '1.1.1';\r\n\r\n/**\r\n * 服务器获取的版本信息\r\n */\r\nexport let cd: checkData = null;\r\n","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class Create extends cc.Component {\r\n    /**\r\n     * 房间名称\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof Create\r\n     */\r\n    @property(cc.Label)\r\n    lab_name: cc.Label = null;\r\n    /**\r\n     * 大小盲注\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof Create\r\n     */\r\n    @property(cc.Label)\r\n    lab_blind: cc.Label = null;\r\n    /**\r\n     * 买入积分\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof Create\r\n     */\r\n    @property(cc.Label)\r\n    lab_bet: cc.Label = null;\r\n    /**\r\n     * 进度条\r\n     * \r\n     * @type {cc.Sprite}\r\n     * @memberof Create\r\n     */\r\n    @property(cc.Sprite)\r\n    spr_bar: cc.Sprite = null;\r\n    /**\r\n     * 拖动按钮\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof Create\r\n     */\r\n    @property(cc.Node)\r\n    nod_btn: cc.Node = null;\r\n    /**\r\n     * 时间单选容器\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof Create\r\n     */\r\n    @property(cc.Node)\r\n    nod_time: cc.Node = null;\r\n    /**\r\n     * 时间单选项\r\n     * \r\n     * @type {cc.Prefab}\r\n     * @memberof Create\r\n     */\r\n    @property(cc.Prefab)\r\n    pre_toggle: cc.Prefab = null;\r\n    /**\r\n     * 保险开关\r\n     * \r\n     * @type {cc.Toggle}\r\n     * @memberof Create\r\n     */\r\n    @property(cc.Toggle)\r\n    tog_safe: cc.Toggle = null;\r\n    /**\r\n     * straddie开关\r\n     * \r\n     * @type {cc.Toggle}\r\n     * @memberof Create\r\n     */\r\n    @property(cc.Toggle)\r\n    tog_straddie: cc.Toggle = null;\r\n    /**\r\n     * 单次购入上限\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof Create\r\n     */\r\n    @property(cc.Label)\r\n    lab_limit: cc.Label = null;\r\n\r\n    /**\r\n     * 创建配置信息\r\n     * \r\n     * @type {CreateCfg}\r\n     * @memberof Create\r\n     */\r\n    cfgData: CreateCfg = null;\r\n    /**\r\n     * 选中的时间\r\n     * \r\n     * @type {number}\r\n     * @memberof Create\r\n     */\r\n    selectTime: number = null;\r\n    /**\r\n     * 选中的配置对象\r\n     * \r\n     * @type {ChipAttrib}\r\n     * @memberof Create\r\n     */\r\n    selectChip: ChipAttrib = null;\r\n    /**\r\n     * 初始化数据\r\n     * \r\n     * @param {CreateCfg} cfg \r\n     * @memberof Create\r\n     */\r\n    init(cfg: CreateCfg) {\r\n        this.cfgData = cfg;\r\n    }\r\n\r\n    onLoad() {\r\n        this.lab_name.string = dd.utils.getStringBySize(dd.ud_manager.account_mine.roleAttribVo.nick, 12) + '的房间';\r\n        this.updateBet(0);\r\n        this.updatTime();\r\n        this.updateLimit(0);\r\n\r\n        this.spr_bar.node.parent.on(cc.Node.EventType.TOUCH_END, (event: cc.Event.EventTouch) => {\r\n            dd.mp_manager.playButton();\r\n            let pos = this.spr_bar.node.convertToNodeSpaceAR(event.touch.getLocation());\r\n            if (this.cfgData.chips.length < 2) {\r\n                this.spr_bar.fillRange = 1;\r\n                this.nod_btn.x = this.spr_bar.node.width;\r\n                this.updateBet(0);\r\n                return;\r\n            }\r\n            let index = dd.utils.getClosestIndex(this.spr_bar.node.width, this.cfgData.chips.length - 1, pos.x);\r\n            pos.x = dd.utils.getClosestNumber(this.spr_bar.node.width, this.cfgData.chips.length - 1, pos.x);\r\n            this.spr_bar.fillRange = pos.x / this.spr_bar.node.width;\r\n            this.nod_btn.x = pos.x;\r\n            this.updateBet(index);\r\n        }, this);\r\n        this.nod_btn.on(cc.Node.EventType.TOUCH_MOVE, (event: cc.Event.EventTouch) => {\r\n            let target = event.getCurrentTarget();\r\n            let pos = target.parent.convertToNodeSpaceAR(event.touch.getLocation());\r\n            if (pos.x < 0) pos.x = 0;\r\n            if (pos.x > target.parent.width) pos.x = target.parent.width;\r\n            target.x = pos.x;\r\n            this.spr_bar.fillRange = pos.x / target.parent.width;\r\n            let index = dd.utils.getClosestIndex(target.parent.width, this.cfgData.chips.length - 1, pos.x);\r\n            this.updateBet(index);\r\n            event.stopPropagation();\r\n        }, this);\r\n        this.nod_btn.on(cc.Node.EventType.TOUCH_END, this.touch_fun, this);\r\n        this.nod_btn.on(cc.Node.EventType.TOUCH_CANCEL, this.touch_fun, this);\r\n        dd.ui_manager.hideLoading();\r\n    }\r\n    /**\r\n     * 拖动条按钮点击结束和取消事件\r\n     * \r\n     * @param {cc.Event.EventTouch} event \r\n     * @returns \r\n     * @memberof Create\r\n     */\r\n    touch_fun(event: cc.Event.EventTouch) {\r\n        dd.mp_manager.playButton();\r\n        let target = event.getCurrentTarget();\r\n        let pos = target.parent.convertToNodeSpaceAR(event.touch.getLocation());\r\n        if (this.cfgData.chips.length < 2) {\r\n            this.spr_bar.fillRange = 1;\r\n            this.nod_btn.x = target.parent.width;\r\n            this.updateBet(0);\r\n            return;\r\n        }\r\n        let index = dd.utils.getClosestIndex(target.parent.width, this.cfgData.chips.length - 1, pos.x);\r\n        pos.x = dd.utils.getClosestNumber(target.parent.width, this.cfgData.chips.length - 1, pos.x);\r\n        this.spr_bar.fillRange = pos.x / target.parent.width;\r\n        target.x = pos.x;\r\n        this.updateBet(index);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * 更新下注积分\r\n     * \r\n     * @param {number} index \r\n     * @returns \r\n     * @memberof Create\r\n     */\r\n    updateBet(index: number) {\r\n        if (index < 0 || index > this.cfgData.chips.length - 1) return;\r\n        let chip: ChipAttrib = this.cfgData.chips[index];\r\n        if (chip) {\r\n            this.lab_blind.string = chip.small + '/' + chip.big;\r\n            this.lab_bet.string = chip.join.toString();\r\n            this.selectChip = chip;\r\n            this.lab_limit.string = this.lab_bet.string;\r\n            this.lab_limit.node.tag = 0;\r\n        } else {\r\n            cc.log(index);\r\n            cc.log(this.cfgData);\r\n            cc.error('updateBet:Error');\r\n        }\r\n    }\r\n    /**\r\n     * 更新时间\r\n     * \r\n     * @memberof Create\r\n     */\r\n    updatTime() {\r\n        this.cfgData.vaildTimes.forEach((time: number, index: number) => {\r\n            let node = cc.instantiate(this.pre_toggle);\r\n            node.tag = time;\r\n            if (index === 0) {\r\n                node.getComponent(cc.Toggle).check();\r\n                this.selectTime = time;\r\n            }\r\n            let lab_time = cc.find('time', node).getComponent(cc.Label);\r\n            if (time < 60) {\r\n                lab_time.string = time + 'M';\r\n            } else {\r\n                lab_time.string = Math.floor(time / 60) + 'H';\r\n            }\r\n            node.on('toggle', (event: cc.Event.EventCustom) => {\r\n                dd.mp_manager.playButton();\r\n                let toggle: cc.Toggle = event.detail;\r\n                this.selectTime = toggle.node.tag;\r\n            }, this);\r\n            node.parent = this.nod_time;\r\n        }, this);\r\n    }\r\n    /**\r\n     * 更新单次购入上限\r\n     * \r\n     * @param {number} index \r\n     * @memberof Create\r\n     */\r\n    updateLimit(index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > 9) index = 9;\r\n        this.lab_limit.string = (Number(this.lab_bet.string) * (index + 1)).toString();\r\n        this.lab_limit.node.tag = index;\r\n    }\r\n    /**\r\n     * 点击toggle按钮播放音效\r\n     * \r\n     * @returns \r\n     * @memberof Create\r\n     */\r\n    click_toggle() {\r\n        dd.mp_manager.playButton();\r\n    }\r\n    /**\r\n     * 点击增加上限\r\n     * \r\n     * @memberof Create\r\n     */\r\n    upLimit() {\r\n        dd.mp_manager.playButton();\r\n        let index = this.lab_limit.node.tag;\r\n        if (index < 9) {\r\n            index++;\r\n            this.updateLimit(index);\r\n        }\r\n    }\r\n    /**\r\n     * 点击减小上限\r\n     * \r\n     * @memberof Create\r\n     */\r\n    downLimit() {\r\n        dd.mp_manager.playButton();\r\n        let index = this.lab_limit.node.tag;\r\n        if (index > 0) {\r\n            index--;\r\n            this.updateLimit(index);\r\n        }\r\n    }\r\n    /**\r\n     * 点击关闭按钮\r\n     * \r\n     * @memberof Create\r\n     */\r\n    click_out() {\r\n        dd.mp_manager.playButton();\r\n        this.node.destroy();\r\n    }\r\n    /**\r\n     * 点击创建房间\r\n     * \r\n     * @memberof Create\r\n     */\r\n    click_create() {\r\n        if (!dd.ui_manager.showLoading('正在创建房间,请稍后')) return;\r\n        dd.mp_manager.playButton();\r\n        let obj = {\r\n            tableName: this.lab_name.string,\r\n            small: this.selectChip.small,\r\n            big: this.selectChip.big,\r\n            minJoin: this.selectChip.join,\r\n            vaildTime: this.selectTime,\r\n            insurance: this.tog_safe.isChecked ? 1 : 0,\r\n            straddle: this.tog_straddie.isChecked ? 1 : 0,\r\n            buyMax: Number(this.lab_limit.string)\r\n        };\r\n        let msg = JSON.stringify(obj);\r\n        dd.ws_manager.sendMsg(dd.protocol.DZPKER_TABLE_CREATE, msg, (flag: number, content?: any) => {\r\n            if (flag === 0) {\r\n                dd.gm_manager.setTableData(content as TableData, 1);\r\n                cc.director.loadScene('GameScene', () => {\r\n                    dd.ui_manager.showTip('创建房间成功');\r\n                });\r\n            } else if (flag === -1) {\r\n                dd.ui_manager.showTip('创建房间消息发送超时');\r\n            } else {\r\n                dd.ui_manager.showTip(content);\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class DetailItem extends cc.Component {\r\n    /**\r\n     * 房主头像\r\n     * \r\n     * @type {cc.Sprite}\r\n     * @memberof MineItem\r\n     */\r\n    @property(cc.Sprite)\r\n    head: cc.Sprite = null;\r\n    /**\r\n     * 索引\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof DetailItem\r\n     */\r\n    @property(cc.Label)\r\n    index: cc.Label = null;\r\n    /**\r\n     * 玩家昵称\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof DetailItem\r\n     */\r\n    @property(cc.Label)\r\n    nick: cc.Label = null;\r\n    /**\r\n     * 玩家输赢值\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof DetailItem\r\n     */\r\n    @property(cc.Label)\r\n    gold: cc.Label = null;\r\n    /**\r\n     * 游戏局数\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof DetailItem\r\n     */\r\n    @property(cc.Label)\r\n    num: cc.Label = null;\r\n\r\n    async updateItem(data: any, callback?: Function) {\r\n        if (data) {\r\n            let item: TablePlayerListItem = data.item;\r\n            this.index.string = data.index + 1;\r\n            this.nick.string = dd.utils.getStringBySize(item.nick, 12);\r\n            this.gold.string = item.winMoney;\r\n            this.num.string = item.gameNum;\r\n            this.head.spriteFrame = await dd.img_manager.loadURLImage(item.headImg);\r\n        }\r\n    }\r\n}\r\n","/**\r\n * 封装数据加解密\r\n * \r\n * @export\r\n * @class ENCManager\r\n */\r\nexport default class ENCManager {\r\n    private static _instance: ENCManager = null;\r\n    private constructor() { }\r\n    /**\r\n     * 获取IMGManager单例对象\r\n     * \r\n     * @static\r\n     * @returns {ENCManager} \r\n     * @memberof ENCManager\r\n     */\r\n    static getInstance(): ENCManager {\r\n        if (ENCManager._instance === null) {\r\n            ENCManager._instance = new ENCManager();\r\n        }\r\n        return ENCManager._instance;\r\n    }\r\n\r\n    private RotateLeft(lValue, iShiftBits) {\r\n        return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits));\r\n    }\r\n\r\n    private AddUnsigned(lX, lY) {\r\n        let lX4, lY4, lX8, lY8, lResult;\r\n        lX8 = (lX & 0x80000000);\r\n        lY8 = (lY & 0x80000000);\r\n        lX4 = (lX & 0x40000000);\r\n        lY4 = (lY & 0x40000000);\r\n        lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);\r\n        if (lX4 & lY4) {\r\n            return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\r\n        }\r\n        if (lX4 | lY4) {\r\n            if (lResult & 0x40000000) {\r\n                return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\r\n            } else {\r\n                return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\r\n            }\r\n        } else {\r\n            return (lResult ^ lX8 ^ lY8);\r\n        }\r\n    }\r\n\r\n    private F(x, y, z) { return (x & y) | ((~x) & z); }\r\n\r\n    private G(x, y, z) { return (x & z) | (y & (~z)); }\r\n\r\n    private H(x, y, z) { return (x ^ y ^ z); }\r\n\r\n    private I(x, y, z) { return (y ^ (x | (~z))); }\r\n\r\n    private FF(a, b, c, d, x, s, ac) {\r\n        a = this.AddUnsigned(a, this.AddUnsigned(this.AddUnsigned(this.F(b, c, d), x), ac));\r\n        return this.AddUnsigned(this.RotateLeft(a, s), b);\r\n    }\r\n\r\n    private GG(a, b, c, d, x, s, ac) {\r\n        a = this.AddUnsigned(a, this.AddUnsigned(this.AddUnsigned(this.G(b, c, d), x), ac));\r\n        return this.AddUnsigned(this.RotateLeft(a, s), b);\r\n    }\r\n\r\n    private HH(a, b, c, d, x, s, ac) {\r\n        a = this.AddUnsigned(a, this.AddUnsigned(this.AddUnsigned(this.H(b, c, d), x), ac));\r\n        return this.AddUnsigned(this.RotateLeft(a, s), b);\r\n    }\r\n\r\n    private II(a, b, c, d, x, s, ac) {\r\n        a = this.AddUnsigned(a, this.AddUnsigned(this.AddUnsigned(this.I(b, c, d), x), ac));\r\n        return this.AddUnsigned(this.RotateLeft(a, s), b);\r\n    }\r\n\r\n    private ConvertToWordArray(string) {\r\n        let lWordCount;\r\n        let lMessageLength = string.length;\r\n        let lNumberOfWords_temp1 = lMessageLength + 8;\r\n        let lNumberOfWords_temp2 = (lNumberOfWords_temp1 - (lNumberOfWords_temp1 % 64)) / 64;\r\n        let lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;\r\n        let lWordArray = Array(lNumberOfWords - 1);\r\n        let lBytePosition = 0;\r\n        let lByteCount = 0;\r\n        while (lByteCount < lMessageLength) {\r\n            lWordCount = (lByteCount - (lByteCount % 4)) / 4;\r\n            lBytePosition = (lByteCount % 4) * 8;\r\n            lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount) << lBytePosition));\r\n            lByteCount++;\r\n        }\r\n        lWordCount = (lByteCount - (lByteCount % 4)) / 4;\r\n        lBytePosition = (lByteCount % 4) * 8;\r\n        lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition);\r\n        lWordArray[lNumberOfWords - 2] = lMessageLength << 3;\r\n        lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;\r\n        return lWordArray;\r\n    }\r\n\r\n    private WordToHex(lValue) {\r\n        let WordToHexValue = \"\", WordToHexValue_temp = \"\", lByte, lCount;\r\n        for (lCount = 0; lCount <= 3; lCount++) {\r\n            lByte = (lValue >>> (lCount * 8)) & 255;\r\n            WordToHexValue_temp = \"0\" + lByte.toString(16);\r\n            WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length - 2, 2);\r\n        }\r\n        return WordToHexValue;\r\n    }\r\n\r\n    Utf8Encode(string) {\r\n        string = string.replace(/\\r\\n/g, \"\\n\");\r\n        let utftext = \"\";\r\n        for (let n = 0; n < string.length; n++) {\r\n            let c = string.charCodeAt(n);\r\n            if (c < 128) {\r\n                utftext += String.fromCharCode(c);\r\n            }\r\n            else if ((c > 127) && (c < 2048)) {\r\n                utftext += String.fromCharCode((c >> 6) | 192);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n            else {\r\n                utftext += String.fromCharCode((c >> 12) | 224);\r\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n        }\r\n        return utftext;\r\n    }\r\n\r\n    Utf8Decode(utftext) {\r\n        let string = \"\";\r\n        let i = 0;\r\n        let c1 = 0, c2 = 0, c3 = 0;\r\n        while (i < utftext.length) {\r\n            c1 = utftext.charCodeAt(i);\r\n            if (c1 < 128) {\r\n                string += String.fromCharCode(c1);\r\n                i++;\r\n            } else if ((c1 > 191) && (c1 < 224)) {\r\n                c2 = utftext.charCodeAt(i + 1);\r\n                string += String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n                i += 2;\r\n            } else {\r\n                c2 = utftext.charCodeAt(i + 1);\r\n                c3 = utftext.charCodeAt(i + 2);\r\n                string += String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n                i += 3;\r\n            }\r\n        }\r\n        return string;\r\n    }\r\n\r\n    /**\r\n     * base64加密\r\n     * \r\n     * @param {string} input 明文\r\n     * @returns {string} base64之后的密文\r\n     * @memberof ENCManager\r\n     */\r\n    base64Encode(input: string): string {\r\n        let _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n        let output: string = \"\";\r\n        let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n        let i = 0;\r\n        input = this.Utf8Encode(input);\r\n        while (i < input.length) {\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n            output = output +\r\n                _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +\r\n                _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\r\n        }\r\n        return output;\r\n    }\r\n\r\n    /**\r\n     * base64解密\r\n     * \r\n     * @param {string} input 密文\r\n     * @returns {string} 解密后的明文\r\n     * @memberof ENCManager\r\n     */\r\n    base64Decode(input: string): string {\r\n        let _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n        let output = \"\";\r\n        let chr1, chr2, chr3;\r\n        let enc1, enc2, enc3, enc4;\r\n        let i = 0;\r\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n        while (i < input.length) {\r\n            enc1 = _keyStr.indexOf(input.charAt(i++));\r\n            enc2 = _keyStr.indexOf(input.charAt(i++));\r\n            enc3 = _keyStr.indexOf(input.charAt(i++));\r\n            enc4 = _keyStr.indexOf(input.charAt(i++));\r\n            chr1 = (enc1 << 2) | (enc2 >> 4);\r\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n            chr3 = ((enc3 & 3) << 6) | enc4;\r\n            output = output + String.fromCharCode(chr1);\r\n            if (enc3 != 64) {\r\n                output = output + String.fromCharCode(chr2);\r\n            }\r\n            if (enc4 != 64) {\r\n                output = output + String.fromCharCode(chr3);\r\n            }\r\n        }\r\n        output = this.Utf8Decode(output);\r\n        return output;\r\n    }\r\n\r\n    /**\r\n     * MD5加密字符串\r\n     * \r\n     * @param {string} input 明文\r\n     * @returns {string} md5后的密文\r\n     * @memberof ENCManager\r\n     */\r\n    MD5(input: string): string {\r\n        let x = Array();\r\n        let k, AA, BB, CC, DD, a, b, c, d;\r\n        let S11 = 7, S12 = 12, S13 = 17, S14 = 22;\r\n        let S21 = 5, S22 = 9, S23 = 14, S24 = 20;\r\n        let S31 = 4, S32 = 11, S33 = 16, S34 = 23;\r\n        let S41 = 6, S42 = 10, S43 = 15, S44 = 21;\r\n        input = this.Utf8Encode(input);\r\n        x = this.ConvertToWordArray(input);\r\n        a = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;\r\n        for (k = 0; k < x.length; k += 16) {\r\n            AA = a; BB = b; CC = c; DD = d;\r\n            a = this.FF(a, b, c, d, x[k + 0], S11, 0xD76AA478);\r\n            d = this.FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);\r\n            c = this.FF(c, d, a, b, x[k + 2], S13, 0x242070DB);\r\n            b = this.FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);\r\n            a = this.FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);\r\n            d = this.FF(d, a, b, c, x[k + 5], S12, 0x4787C62A);\r\n            c = this.FF(c, d, a, b, x[k + 6], S13, 0xA8304613);\r\n            b = this.FF(b, c, d, a, x[k + 7], S14, 0xFD469501);\r\n            a = this.FF(a, b, c, d, x[k + 8], S11, 0x698098D8);\r\n            d = this.FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);\r\n            c = this.FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);\r\n            b = this.FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);\r\n            a = this.FF(a, b, c, d, x[k + 12], S11, 0x6B901122);\r\n            d = this.FF(d, a, b, c, x[k + 13], S12, 0xFD987193);\r\n            c = this.FF(c, d, a, b, x[k + 14], S13, 0xA679438E);\r\n            b = this.FF(b, c, d, a, x[k + 15], S14, 0x49B40821);\r\n            a = this.GG(a, b, c, d, x[k + 1], S21, 0xF61E2562);\r\n            d = this.GG(d, a, b, c, x[k + 6], S22, 0xC040B340);\r\n            c = this.GG(c, d, a, b, x[k + 11], S23, 0x265E5A51);\r\n            b = this.GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);\r\n            a = this.GG(a, b, c, d, x[k + 5], S21, 0xD62F105D);\r\n            d = this.GG(d, a, b, c, x[k + 10], S22, 0x2441453);\r\n            c = this.GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);\r\n            b = this.GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);\r\n            a = this.GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);\r\n            d = this.GG(d, a, b, c, x[k + 14], S22, 0xC33707D6);\r\n            c = this.GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);\r\n            b = this.GG(b, c, d, a, x[k + 8], S24, 0x455A14ED);\r\n            a = this.GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);\r\n            d = this.GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);\r\n            c = this.GG(c, d, a, b, x[k + 7], S23, 0x676F02D9);\r\n            b = this.GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);\r\n            a = this.HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);\r\n            d = this.HH(d, a, b, c, x[k + 8], S32, 0x8771F681);\r\n            c = this.HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);\r\n            b = this.HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);\r\n            a = this.HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);\r\n            d = this.HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);\r\n            c = this.HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);\r\n            b = this.HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);\r\n            a = this.HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);\r\n            d = this.HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);\r\n            c = this.HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);\r\n            b = this.HH(b, c, d, a, x[k + 6], S34, 0x4881D05);\r\n            a = this.HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);\r\n            d = this.HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);\r\n            c = this.HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);\r\n            b = this.HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);\r\n            a = this.II(a, b, c, d, x[k + 0], S41, 0xF4292244);\r\n            d = this.II(d, a, b, c, x[k + 7], S42, 0x432AFF97);\r\n            c = this.II(c, d, a, b, x[k + 14], S43, 0xAB9423A7);\r\n            b = this.II(b, c, d, a, x[k + 5], S44, 0xFC93A039);\r\n            a = this.II(a, b, c, d, x[k + 12], S41, 0x655B59C3);\r\n            d = this.II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);\r\n            c = this.II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);\r\n            b = this.II(b, c, d, a, x[k + 1], S44, 0x85845DD1);\r\n            a = this.II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);\r\n            d = this.II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);\r\n            c = this.II(c, d, a, b, x[k + 6], S43, 0xA3014314);\r\n            b = this.II(b, c, d, a, x[k + 13], S44, 0x4E0811A1);\r\n            a = this.II(a, b, c, d, x[k + 4], S41, 0xF7537E82);\r\n            d = this.II(d, a, b, c, x[k + 11], S42, 0xBD3AF235);\r\n            c = this.II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);\r\n            b = this.II(b, c, d, a, x[k + 9], S44, 0xEB86D391);\r\n            a = this.AddUnsigned(a, AA);\r\n            b = this.AddUnsigned(b, BB);\r\n            c = this.AddUnsigned(c, CC);\r\n            d = this.AddUnsigned(d, DD);\r\n        }\r\n        let md5: string = this.WordToHex(a) + this.WordToHex(b) + this.WordToHex(c) + this.WordToHex(d);\r\n        return md5.toLowerCase();\r\n    }\r\n\r\n    /**\r\n     * 释放自己\r\n     * \r\n     * @memberof ENCManager\r\n     */\r\n    destroySelf(): void {\r\n        ENCManager._instance = null;\r\n    }\r\n}","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class EmailItem extends cc.Component {\r\n    /**\r\n     * 用户头像\r\n     * \r\n     * @type {cc.Sprite}\r\n     * @memberof EmailItem\r\n     */\r\n    @property(cc.Sprite)\r\n    headImg: cc.Sprite = null;\r\n    /**\r\n     * 显示申购信息的节点\r\n     * \r\n     * @type {cc.RichText}\r\n     * @memberof EmailItem\r\n     */\r\n    @property(cc.RichText)\r\n    msg: cc.RichText = null;\r\n    /**\r\n     * 模版数据\r\n     * \r\n     * @type {string}\r\n     * @memberof EmailItem\r\n     */\r\n    modelMsg: string = '玩家:<color=#D3AE6C><b><玩家昵称></b></c>,<br/>申购:<color=#D3AE6C><b><积分数量></b></c>积分,<br/>您是否同意?';\r\n    /**\r\n     * 申购条目对象\r\n     * \r\n     * @type {DzpkerOrderItem}\r\n     * @memberof EmailItem\r\n     */\r\n    data: DzpkerOrderItem = null;\r\n    /**\r\n     * 按钮点击的回调\r\n     * \r\n     * @memberof EmailItem\r\n     */\r\n    callback: (bt: number, id: string, node: cc.Node) => void = null;//1是同意,2是拒绝\r\n\r\n    async init(data: DzpkerOrderItem, callback: (bt: number, id: string, node: cc.Node) => void) {\r\n        this.data = data;\r\n        this.callback = callback;\r\n        this.headImg.spriteFrame = await dd.img_manager.loadURLImage(data.headImg);\r\n        this.msg.string = this.modelMsg.replace('<玩家昵称>', dd.utils.getStringBySize(data.nick, 12)).replace('<积分数量>', data.chipNum);\r\n    }\r\n    /**\r\n     * 点击同意\r\n     * \r\n     * @memberof EmailItem\r\n     */\r\n    click_yes() {\r\n        this.callback(1, this.data.itemId, this.node);\r\n    }\r\n    /**\r\n     * 点击忽略\r\n     * \r\n     * @memberof EmailItem\r\n     */\r\n    click_no() {\r\n        this.callback(2, this.data.itemId, this.node);\r\n    }\r\n\r\n}\r\n","(function (self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function () {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function (obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function () {\n        var value = items.shift()\n        return { done: value === undefined, value: value }\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function () {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function (value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function (header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function (name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function (name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue + ',' + value : value\n  }\n\n  Headers.prototype['delete'] = function (name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function (name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function (name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function (name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function (callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function () {\n    var items = []\n    this.forEach(function (value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function () {\n    var items = []\n    this.forEach(function (value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function () {\n    var items = []\n    this.forEach(function (value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function (resolve, reject) {\n      reader.onload = function () {\n        resolve(reader.result)\n      }\n      reader.onerror = function () {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function (body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function () {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function () {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function () {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function () {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function () {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function () {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function (bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function (line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function () {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function () {\n    var response = new Response(null, { status: 0, statusText: '' })\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function (url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, { status: status, headers: { location: url } })\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function (input, init) {\n    return new Promise(function (resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function () {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function () {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function () {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function (value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(window);","import { GameState, CardType } from './Protocol';\r\nimport UDManager from './UDManager'\r\nimport MPManager from './MPManager';\r\nimport ButtonLayer from '../SceneScript/Game/ButtonLayer';\r\nimport PlayerLayer from '../SceneScript/Game/PlayerLayer';\r\n\r\n/**\r\n * 游戏管理类\r\n * \r\n * @export\r\n * @class GMManager\r\n */\r\nexport default class GMManager {\r\n    private static _instance: GMManager = null;\r\n    private constructor() { }\r\n    /**\r\n     * 获取GMManager单例对象\r\n     * \r\n     * @static\r\n     * @returns {GMManager} \r\n     * @memberof GMManager\r\n     */\r\n    static getInstance(): GMManager {\r\n        if (GMManager._instance === null) {\r\n            GMManager._instance = new GMManager();\r\n        }\r\n        return GMManager._instance;\r\n    }\r\n    /**\r\n     * 桌子数据对象\r\n     * \r\n     * @type {TableData}\r\n     * @memberof GMManager\r\n     */\r\n    private tableData: TableData = null;\r\n    /**\r\n     * 保险数据对象\r\n     * \r\n     * @type {SafeData}\r\n     * @memberof GMManager\r\n     */\r\n    safeData: SafeData = null;\r\n    /**\r\n     * 当前正下方节点所代表的坐位号\r\n     * \r\n     * @type {number}\r\n     * @memberof PlayerLayer\r\n     */\r\n    startIndex: number = 0;\r\n\r\n    /**\r\n     * 倒计时(毫秒数)\r\n     * \r\n     * @type {number}\r\n     * @memberof GMManager\r\n     */\r\n    countDownTime: number = 0;\r\n    /**\r\n     * 房主获取积分申购订单数量(热点消息获取)\r\n     * \r\n     * @type {number}\r\n     * @memberof GMManager\r\n     */\r\n    orderCount: number = -1;\r\n    /**\r\n     * 已经创建的公共牌数量\r\n     * @type {number}\r\n     * @memberof GMManager\r\n     */\r\n    publicCardNum: number = 0;\r\n    /**\r\n     * 是否已经创建自己的手牌\r\n     * @type {boolean}\r\n     * @memberof GMManager\r\n     */\r\n    isCreateMineCard: boolean = false;\r\n    /**\r\n     *是否显示游戏单局结算\r\n     * @type {boolean}\r\n     * @memberof GMManager\r\n     */\r\n    isShowGameOver: boolean = false;\r\n    /**\r\n     * 按钮层脚本\r\n     * @type {ButtonLayer}\r\n     * @memberof GMManager\r\n     */\r\n    btnScript: ButtonLayer = null;\r\n    /**\r\n     * 玩家层脚本\r\n     * @type {PlayerLayer}\r\n     * @memberof GMManager\r\n     */\r\n    playerScript: PlayerLayer = null;\r\n    /**\r\n     * 大盲倍数的底池\r\n     * @type {number}\r\n     * @memberof GMManager\r\n     */\r\n    poolMoneys: number = 0;\r\n    getTableData() {\r\n        return this.tableData;\r\n    }\r\n    /**\r\n     * 刷新游戏桌子对象\r\n     * \r\n     * @param {TableData} tableData \r\n     * @param {number} [type] 没值代表是请求返回,1是代表状态切换,2是代表坐位变化,3是有人表态\r\n     * @memberof GMManager\r\n     */\r\n    setTableData(tableData: TableData, type?: number) {\r\n        let oldCount = -1;\r\n        if (this.tableData) {\r\n            oldCount = this.getSeatDownCount();\r\n        }\r\n        this.tableData = tableData;\r\n        //当前这轮已下注的人下注最大值\r\n        let r_max = Math.ceil(Number(tableData.maxBetMoney) / tableData.bigBlind) * tableData.bigBlind;\r\n        if (r_max === 0) r_max = tableData.bigBlind;\r\n        this.poolMoneys = r_max;\r\n\r\n        let newCount = this.getSeatDownCount();\r\n        if (oldCount > -1 && newCount > oldCount) {//有人入座\r\n            MPManager.getInstance().playJoin();\r\n        }\r\n        cc.log('游戏数据++++++++gameState==' + tableData.gameState);\r\n        cc.log(tableData);\r\n        this.countDownTime = Number(tableData.vaildTime) - Number(tableData.svrTime);\r\n        //表态下注\r\n        cc.systemEvent.emit('betBT');\r\n        cc.systemEvent.emit('updateGame');\r\n        switch (type) {\r\n\r\n            case 1://1是代表状态切换\r\n                cc.systemEvent.emit('updatePlayerUI');\r\n                switch (tableData.gameState) {\r\n                    case GameState.STATE_TABLE_IDLE://空闲状态\r\n                        this.publicCardNum = 0;\r\n                        break;\r\n                    case GameState.STATE_TABLE_READY://准备状态\r\n                        this.publicCardNum = 0;\r\n                        MPManager.getInstance().playStart();\r\n                        break;\r\n                    case GameState.STATE_TABLE_OUTCARD_1://发牌状态\r\n                        cc.systemEvent.emit('doFPAction');\r\n                        break;\r\n                    case GameState.STATE_TABLE_BUY_INSURANCE://保险购买状态\r\n                        cc.systemEvent.emit('safe');\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case 2://2是代表坐位变化\r\n                cc.systemEvent.emit('updatePlayer');\r\n                break;\r\n            case 3://3是有人表态\r\n                cc.systemEvent.emit('updatePlayerUI');\r\n                cc.systemEvent.emit('btResult');\r\n                break;\r\n            default: //没值代表是请求返回\r\n                break;\r\n        }\r\n        //小于结算，都赋值\r\n        if (tableData.gameState < GameState.STATE_TABLE_OVER_ONCE) {\r\n            this.isShowGameOver = false;\r\n        }\r\n    }\r\n    /**\r\n     * 获取自己的座位信息(如果没有返回null,表示自己没有坐下)\r\n     * \r\n     * @returns \r\n     * @memberof GMManager\r\n     */\r\n    getMineSeat(): SeatData {\r\n        let account = UDManager.getInstance().account_mine;\r\n        return this.getSeatDataByAccount(account.accountId);\r\n    }\r\n    /**\r\n     * 判断是否是自己\r\n     * \r\n     * @param {SeatData} seatData \r\n     * @returns {boolean} \r\n     * @memberof GMManager\r\n     */\r\n    isMineSeat(seatData: SeatData): boolean {\r\n        if (seatData.accountId === UDManager.getInstance().account_mine.accountId) return true;\r\n        return false;\r\n    }\r\n    /**\r\n     * 获取我是否是房主\r\n     * \r\n     * @returns \r\n     * @memberof GMManager\r\n     */\r\n    isMineCreater() {\r\n        if (this.tableData.createPlayer === UDManager.getInstance().account_mine.accountId) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * 判断当前自己是否可以站起或离开\r\n     * \r\n     * @param {SeatData} mineSeat \r\n     * @returns \r\n     * @memberof GMManager\r\n     */\r\n    canStandOrLeave() {\r\n        let mineSeat = this.getMineSeat();\r\n        if (mineSeat) {//坐下了\r\n            if (this.tableData.gameState > GameState.STATE_TABLE_READY && this.tableData.gameState < GameState.STATE_TABLE_OVER_ONCE) {//游戏状态中\r\n                if (mineSeat.btResult === 1 || mineSeat.bGamed !== 1) {//弃牌了或者这局没有参与游戏\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            } else {\r\n                return true;\r\n            }\r\n        } else {//没有坐下\r\n            return true;\r\n        }\r\n    }\r\n    /**\r\n     * 根据用户id获取用户所在座位对象\r\n     * \r\n     * @param {string} acountId \r\n     * @returns \r\n     * @memberof GMManager\r\n     */\r\n    getSeatDataByAccount(acountId: string): SeatData {\r\n        let seatData = null;\r\n        if (this.tableData && this.tableData.seats) {\r\n            this.tableData.seats.forEach((seat: SeatData) => {\r\n                if (seat.accountId === acountId) {\r\n                    seatData = seat;\r\n                }\r\n            }, this);\r\n        }\r\n        return seatData;\r\n    }\r\n    /**\r\n     * 根据下标获取坐位对象\r\n     * \r\n     * @param {number} index \r\n     * @returns {SeatData} \r\n     * @memberof GMManager\r\n     */\r\n    getSeatDataByIndex(index: number): SeatData {\r\n        if (index < 0 || index > 8) return null;\r\n        for (let i = 0; i < this.tableData.seats.length; i++) {\r\n            let seat = this.tableData.seats[i];\r\n            if (index === seat.seatIndex) {\r\n                return seat;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 获取坐下的数量\r\n     * \r\n     * @memberof GMManager\r\n     */\r\n    getSeatDownCount() {\r\n        let count: number = 0;\r\n        if (this.tableData && this.tableData.seats) {\r\n            this.tableData.seats.forEach((seat: SeatData) => {\r\n                if (seat.accountId !== '0') {\r\n                    count++;\r\n                }\r\n            }, this);\r\n        }\r\n        return count;\r\n    }\r\n    /**\r\n     * 获取牌型\r\n     * @param {number} cType \r\n     * @memberof PlayerUI\r\n     */\r\n    getCardType(cType: number): string {\r\n        let str = '';\r\n        switch (cType) {\r\n            case CardType.TYPE_CARD_NONE:\r\n                str = '单   牌';\r\n                break;\r\n            case CardType.TYPE_CARD_ONE_DOUBLE:\r\n                str = '一   对';\r\n                break;\r\n            case CardType.TYPE_CARD_TWO_DOUBLE:\r\n                str = '两   对';\r\n                break;\r\n            case CardType.TYPE_CARD_SAME_THREE:\r\n                str = '三   条';\r\n                break;\r\n            case CardType.TYPE_CARD_SHUN:\r\n                str = '顺   子';\r\n                break;\r\n            case CardType.TYPE_CARD_SAME_SUIT:\r\n                str = '同   花';\r\n                break;\r\n            case CardType.TYPE_CARD_GOURD:\r\n                str = '葫   芦';\r\n                break;\r\n            case CardType.TYPE_CARD_SAME_FOUR:\r\n                str = '四   条';\r\n                break;\r\n            case CardType.TYPE_CARD_SAME_SUIT_SHUN:\r\n                str = '同 花 顺';\r\n                break;\r\n            case CardType.TYPE_CARD_GOLD_SAME_SUIT_SHUN:\r\n                str = '皇家同花顺';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return str;\r\n    }\r\n    /**\r\n     * 清空单例对象\r\n     * \r\n     * @memberof GMManager\r\n     */\r\n    destroySelf(): void {\r\n        this.clean();\r\n        GMManager._instance = null;\r\n    }\r\n    /**\r\n     * 清空数据\r\n     * \r\n     * @memberof GMManager\r\n     */\r\n    clean() {\r\n        this.tableData = null;\r\n        this.safeData = null;\r\n        this.startIndex = 0;\r\n        this.countDownTime = 0;\r\n        this.orderCount = -1;\r\n        this.publicCardNum = 0;\r\n        this.isCreateMineCard = false;\r\n        this.isShowGameOver = false;\r\n        this.btnScript = null;\r\n        this.playerScript = null;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class GameCanvans extends cc.Component {\r\n    /**\r\n     * 存放信息的父节点\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof GameCanvans\r\n     */\r\n    @property(cc.Node)\r\n    info: cc.Node = null;\r\n    /**\r\n     * 押注池预设\r\n     * @type {cc.Prefab}\r\n     * @memberof GameCanvans\r\n     */\r\n    @property(cc.Prefab)\r\n    pool_prefab: cc.Prefab = null;\r\n    /**\r\n     * 下注池节点\r\n     * @type {cc.Node}\r\n     * @memberof GameCanvans\r\n     */\r\n    @property(cc.Node)\r\n    pool: cc.Node = null;\r\n    /**\r\n     * 边池节点列表\r\n     * @type {cc.Node}\r\n     * @memberof GameCanvans\r\n     */\r\n    @property([cc.Node])\r\n    sidePoolList: cc.Node[] = [];\r\n    /**\r\n     * 倒计时展示标签\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof GameCanvans\r\n     */\r\n    @property(cc.Label)\r\n    lba_time: cc.Label = null;\r\n    /**\r\n     * 底池\r\n     * @type {cc.Label}\r\n     * @memberof GameCanvans\r\n     */\r\n    @property(cc.Label)\r\n    lbl_poolMoneys: cc.Label = null;\r\n    /**\r\n     * 保险预设\r\n     * @type {cc.Prefab}\r\n     * @memberof GameCanvans\r\n     */\r\n    @property(cc.Prefab)\r\n    safe_prefab: cc.Prefab = null;\r\n\r\n    _safe: cc.Node = null;\r\n    onLoad() {\r\n        cc.systemEvent.on('updateGame', this.showGameInfo, this);\r\n        this.showInfo();\r\n    }\r\n\r\n    onDestroy() {\r\n        dd.gm_manager.clean();\r\n        cc.systemEvent.off('updateGame', this.showPool, this);\r\n    }\r\n    /**\r\n     * 显示桌子信息\r\n     * \r\n     * @memberof GameCanvans\r\n     */\r\n    showInfo() {\r\n        if (dd.gm_manager && dd.gm_manager.getTableData()) {\r\n            let tableData = dd.gm_manager.getTableData();\r\n            cc.find('layout2/name', this.info).getComponent(cc.Label).string = tableData.tableName;\r\n            cc.find('layout2/id', this.info).getComponent(cc.Label).string = tableData.tableId.toString();\r\n            cc.find('layout2/small', this.info).getComponent(cc.Label).string = tableData.smallBlind.toString();\r\n            cc.find('layout2/big', this.info).getComponent(cc.Label).string = tableData.bigBlind.toString();\r\n            this.showGameInfo();\r\n        }\r\n    }\r\n    /**\r\n     * 显示游戏信息\r\n     * @memberof GameCanvans\r\n     */\r\n    showGameInfo() {\r\n        this.showSafe();\r\n        if (dd.gm_manager && dd.gm_manager.getTableData()) {\r\n            let tableData = dd.gm_manager.getTableData();\r\n            //如果是 新一轮积分结算 阶段，播放所有人的飞积分动作\r\n            if (tableData.gameState === dd.game_state.STATE_TABLE_NEW_ROUND_BET) {\r\n                //这里判断是否需要飞积分的动作\r\n                let seats = tableData.seats;\r\n                let index = 0;\r\n                for (let i = 0; i < seats.length; i++) {\r\n                    let seat = seats[i];\r\n                    if (seat.bGamed === 1 && Number(seat.betMoney) > 0) {\r\n                        if (dd.gm_manager.playerScript) {\r\n                            dd.gm_manager.playerScript.showFlyBetAction(seat, () => {\r\n                                if (index === 0) {\r\n                                    this.showPool(tableData.pools);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (tableData.gameState > dd.game_state.STATE_TABLE_BETBLIND && tableData.gameState < dd.game_state.STATE_TABLE_OVER_ONCE) {\r\n                    if (tableData.gameState !== dd.game_state.STATE_TABLE_BET_BT_1\r\n                        && tableData.gameState !== dd.game_state.STATE_TABLE_BET_BT_2\r\n                        && tableData.gameState !== dd.game_state.STATE_TABLE_BET_BT_3\r\n                        && tableData.gameState !== dd.game_state.STATE_TABLE_BET_BT_4) {\r\n                        this.showPool(tableData.pools);\r\n                    }\r\n                } else {\r\n                    this.sidePoolList.forEach(sidePool => {\r\n                        sidePool.removeAllChildren();\r\n                        sidePool.active = false;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 显示下注池\r\n     * @memberof GameCanvans\r\n     */\r\n    showPool(pools: string[]) {\r\n        if (!pools || !pools[0]) return;\r\n        this.sidePoolList.forEach(sidePool => {\r\n            sidePool.removeAllChildren();\r\n        });\r\n        pools.forEach((bet: string, index: number) => {\r\n            if (index < 4) {\r\n                this.sidePoolList[0].active = true;\r\n                this.creatSidePool(bet, this.sidePoolList[0]);\r\n            } else if (index >= 4 && index < 8) {\r\n                this.sidePoolList[1].active = true;\r\n                this.creatSidePool(bet, this.sidePoolList[1]);\r\n            } else {\r\n                this.sidePoolList[2].active = true;\r\n                this.creatSidePool(bet, this.sidePoolList[2]);\r\n            }\r\n        });\r\n    }\r\n\r\n    creatSidePool(bet: string, parentNode: cc.Node) {\r\n        let sPool = cc.instantiate(this.pool_prefab);\r\n        cc.find('lblBet', sPool).getComponent(cc.Label).string = bet;\r\n        sPool.parent = parentNode;\r\n    }\r\n    /**\r\n     * 显示保险\r\n     * @memberof GameCanvans\r\n     */\r\n    showSafe() {\r\n        let tableData = dd.gm_manager.getTableData();\r\n        if (tableData.gameState === dd.game_state.STATE_TABLE_BUY_INSURANCE) {\r\n            if (!this._safe || !this._safe.isValid) {\r\n                this._safe = cc.instantiate(this.safe_prefab);\r\n                this._safe.parent = this.node;\r\n            }\r\n        } else {\r\n            if (this._safe && this._safe.isValid) {\r\n                this._safe.removeFromParent();\r\n                this._safe.destroy();\r\n            }\r\n        }\r\n\r\n    }\r\n    update(dt: number) {\r\n        if (dd && dd.gm_manager) {\r\n            //倒计时标签控制\r\n            if (dd.gm_manager.countDownTime > 0) {\r\n                dd.gm_manager.countDownTime -= dt * 1000;\r\n            }\r\n            if (dd.gm_manager.countDownTime < 0) {\r\n                cc.log('房间时间到了,系统回收房间');\r\n                dd.gm_manager.countDownTime = 0;\r\n            }\r\n            this.lba_time.string = dd.utils.getCountDownString(dd.gm_manager.countDownTime);\r\n\r\n            if (dd.gm_manager.getTableData()) {\r\n                if (Number(dd.gm_manager.getTableData().poolMoneys) > 0) {\r\n                    this.lbl_poolMoneys.node.parent.active = true;\r\n                    this.lbl_poolMoneys.string = dd.gm_manager.getTableData().poolMoneys;\r\n                } else {\r\n                    this.lbl_poolMoneys.node.parent.active = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\nconst { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n    /**\r\n     * 参加局数\r\n     * @type {cc.Label}\r\n     * @memberof NewClass\r\n     */\r\n    @property(cc.Label)\r\n    lbl_join: cc.Label = null;\r\n    /**\r\n     * 胜率\r\n     * @type {cc.Label}\r\n     * @memberof NewClass\r\n     */\r\n    @property(cc.Label)\r\n    lbl_winRate: cc.Label = null;\r\n    /**\r\n     * 最大押注\r\n     * @type {cc.Label}\r\n     * @memberof NewClass\r\n     */\r\n    @property(cc.Label)\r\n    lbl_maxBet: cc.Label = null;\r\n    /**\r\n     * 盈利\r\n     * @type {cc.Label}\r\n     * @memberof NewClass\r\n     */\r\n    @property(cc.Label)\r\n    lbl_profit: cc.Label = null;\r\n    /**\r\n     * 申请积分\r\n     * @type {cc.Label}\r\n     * @memberof NewClass\r\n     */\r\n    @property(cc.Label)\r\n    lbl_applyMoney: cc.Label = null;\r\n    /**\r\n     * 结算\r\n     * @type {cc.Label}\r\n     * @memberof NewClass\r\n     */\r\n    @property(cc.Label)\r\n    lbl_settlement: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.lbl_join.string = '';\r\n        this.lbl_maxBet.string = '';\r\n        this.lbl_winRate.string = '';\r\n        this.lbl_applyMoney.string = '';\r\n        this.lbl_profit.string = '';\r\n        this.lbl_settlement.string = '';\r\n    }\r\n\r\n    updateData(data: SettlementVo) {\r\n        this.lbl_join.string = data.gameNum;\r\n        this.lbl_maxBet.string = data.maxBetMoney;\r\n        this.lbl_winRate.string = Number(data.winRate) * 100 + '%';\r\n        this.lbl_applyMoney.string = data.buyTotalMoney;\r\n        this.lbl_profit.string = data.maxWinMoney;\r\n        this.lbl_settlement.string = data.winMoney;\r\n    }\r\n    /**\r\n     * 返回到大厅\r\n     * @memberof NewClass\r\n     */\r\n    click_btn_out() {\r\n        dd.mp_manager.playButton();\r\n        if(dd.ui_manager.showLoading()){\r\n            cc.director.loadScene('HomeScene');\r\n        }\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class HomeCanvas extends cc.Component {\r\n    /**\r\n     * 头像\r\n     * \r\n     * @type {cc.Sprite}\r\n     * @memberof HomeCanvas\r\n     */\r\n    @property(cc.Sprite)\r\n    spr_head: cc.Sprite = null;\r\n    /**\r\n     * 用户昵称\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof HomeCanvas\r\n     */\r\n    @property(cc.Label)\r\n    lab_name: cc.Label = null;\r\n    /**\r\n     * 玩家id\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof HomeCanvas\r\n     */\r\n    @property(cc.Label)\r\n    lab_id: cc.Label = null;\r\n    /**\r\n     * 设置界面\r\n     * \r\n     * @type {cc.Prefab}\r\n     * @memberof HomeCanvas\r\n     */\r\n    @property(cc.Prefab)\r\n    pre_setting: cc.Prefab = null;\r\n    /**\r\n     * 创建界面\r\n     * \r\n     * @type {cc.Prefab}\r\n     * @memberof HomeCanvas\r\n    */\r\n    @property(cc.Prefab)\r\n    pre_create: cc.Prefab = null;\r\n    /**\r\n     * 加入房间\r\n     * \r\n     * @type {cc.Prefab}\r\n     * @memberof HomeCanvas\r\n     */\r\n    @property(cc.Prefab)\r\n    pre_join: cc.Prefab = null;\r\n    /**\r\n     * 我的牌局\r\n     * \r\n     * @type {cc.Prefab}\r\n     * @memberof HomeCanvas\r\n     */\r\n    @property(cc.Prefab)\r\n    pre_mine: cc.Prefab = null;\r\n    /**\r\n     * 公告\r\n     * \r\n     * @type {cc.Prefab}\r\n     * @memberof HomeCanvas\r\n     */\r\n    @property(cc.Prefab)\r\n    pre_notice: cc.Prefab = null;\r\n    /**\r\n     * 生涯\r\n     * \r\n     * @type {cc.Prefab}\r\n     * @memberof HomeCanvas\r\n     */\r\n    @property(cc.Prefab)\r\n    pre_career: cc.Prefab = null;\r\n\r\n    onLoad() {\r\n        cc.log(dd.ud_manager.account_mine);\r\n    }\r\n\r\n    async update(dt: number) {\r\n        if (dd.ud_manager && dd.ud_manager.account_mine) {\r\n            if (dd.ud_manager.account_mine.roleAttribVo) {\r\n                this.lab_name.string = dd.utils.getStringBySize(dd.ud_manager.account_mine.roleAttribVo.nick, 12);\r\n                this.lab_id.string = dd.ud_manager.account_mine.roleAttribVo.starNO;\r\n                try {\r\n                    this.spr_head.spriteFrame = await dd.img_manager.loadURLImage(dd.ud_manager.account_mine.roleAttribVo.headImg);\r\n                } catch (error) {\r\n                    cc.log('获取头像错误');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 点击设置按钮\r\n     * \r\n     * @memberof HomeCanvas\r\n     */\r\n    click_setting() {\r\n        dd.ui_manager.showLoading();\r\n        dd.mp_manager.playButton();\r\n        let setNode = cc.instantiate(this.pre_setting);\r\n        setNode.parent = dd.ui_manager.getRootNode();\r\n    }\r\n    /**\r\n     * 点击公告按钮\r\n     * \r\n     * @memberof HomeCanvas\r\n     */\r\n    click_notice() {\r\n        dd.ui_manager.showLoading();\r\n        dd.mp_manager.playButton();\r\n        let noticeNode = cc.instantiate(this.pre_notice);\r\n        dd.ws_manager.sendMsg(dd.protocol.ACTIVITY_GET_ACTIVITY_LIST, '', (flag: number, content?: any) => {\r\n            if (flag === 0) {\r\n                let datas: ActivityItemAttrib[] = content.items as ActivityItemAttrib[];\r\n                noticeNode.getComponent('Notice').init(datas);\r\n                noticeNode.parent = dd.ui_manager.getRootNode();\r\n            } else if (flag === -1) {\r\n                dd.ui_manager.showTip('获取房间配置消息发送超时');\r\n            } else {\r\n                dd.ui_manager.showTip(content);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 点击生涯按钮\r\n     * \r\n     * @memberof HomeCanvas\r\n     */\r\n    click_career() {\r\n        dd.ui_manager.showLoading();\r\n        dd.mp_manager.playButton();\r\n        let careerNode = cc.instantiate(this.pre_career);\r\n        dd.ws_manager.sendMsg(dd.protocol.DZPKER_TABLE_GET_CAREE_INFO, '', (flag: number, content?: any) => {\r\n            if (flag === 0) {\r\n                let data: CareerData = content as CareerData;\r\n                careerNode.getComponent('Career').init(data);\r\n                careerNode.parent = dd.ui_manager.getRootNode();\r\n            } else if (flag === -1) {\r\n                dd.ui_manager.showTip('获取房间配置消息发送超时');\r\n            } else {\r\n                dd.ui_manager.showTip(content);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 点击商店按钮\r\n     * \r\n     * @memberof HomeCanvas\r\n     */\r\n    click_store() {\r\n\r\n    }\r\n    /**\r\n     * 点击创建房间\r\n     * \r\n     * @memberof HomeCanvas\r\n     */\r\n    click_create() {\r\n        dd.ui_manager.showLoading();\r\n        dd.mp_manager.playButton();\r\n        let createNode = cc.instantiate(this.pre_create);\r\n        dd.ws_manager.sendMsg(dd.protocol.DZPKER_TABLE_GET_CFG, '', (flag: number, content?: any) => {\r\n            if (flag === 0) {\r\n                let cfg: CreateCfg = content as CreateCfg;\r\n                createNode.getComponent('Create').init(cfg);\r\n                createNode.parent = dd.ui_manager.getRootNode();\r\n            } else if (flag === -1) {\r\n                dd.ui_manager.showTip('获取房间配置消息发送超时');\r\n            } else {\r\n                dd.ui_manager.showTip(content);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 点击加入房间\r\n     * \r\n     * @memberof HomeCanvas\r\n     */\r\n    click_join() {\r\n        dd.ui_manager.showLoading();\r\n        dd.mp_manager.playButton();\r\n        let joinNode = cc.instantiate(this.pre_join);\r\n        joinNode.parent = dd.ui_manager.getRootNode();\r\n    }\r\n    /**\r\n     * 点击我的房间\r\n     * \r\n     * @memberof HomeCanvas\r\n     */\r\n    click_mine() {\r\n        dd.ui_manager.showLoading();\r\n        dd.mp_manager.playButton();\r\n        let mineNode = cc.instantiate(this.pre_mine);\r\n        dd.ws_manager.sendMsg(dd.protocol.DZPKER_GET_FIGHTED_TABLE_LIST, '', (flag: number, content?: any) => {\r\n            if (flag === 0) {\r\n                let datas: JoinedTableItem[] = content.items as JoinedTableItem[];\r\n                mineNode.getComponent('Mine').init(datas);\r\n                mineNode.parent = dd.ui_manager.getRootNode();\r\n            } else if (flag === -1) {\r\n                dd.ui_manager.showTip('获取我的牌局消息发送超时');\r\n            } else {\r\n                dd.ui_manager.showTip(content);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import ENCManager from './ENCManager';\r\n/**\r\n * 图片动态加载管理类\r\n * \r\n * @export\r\n * @class IMGManager\r\n */\r\nexport default class IMGManager {\r\n    private static _instance: IMGManager = null;\r\n    private constructor() { }\r\n    /**\r\n     * 获取IMGManager单例对象\r\n     * \r\n     * @static\r\n     * @returns {IMGManager} \r\n     * @memberof IMGManager\r\n     */\r\n    static getInstance(): IMGManager {\r\n        if (IMGManager._instance === null) {\r\n            IMGManager._instance = new IMGManager();\r\n        }\r\n        return IMGManager._instance;\r\n    }\r\n\r\n    /**\r\n     * 系统头像\r\n     * \r\n     * @private\r\n     * @type {cc.SpriteFrame}\r\n     * @memberof IMGManager\r\n     */\r\n    private headSpriteFrame: cc.SpriteFrame = null;\r\n\r\n    /**\r\n     * 表情集合\r\n     * \r\n     * @private\r\n     * @type {cc.SpriteFrame[]}\r\n     * @memberof IMGManager\r\n     */\r\n    bqSpriteFrames: cc.SpriteFrame[] = [];\r\n\r\n    /**\r\n     * 扑克牌集合\r\n     * \r\n     * @private\r\n     * @type {cc.SpriteFrame[]}\r\n     * @memberof IMGManager\r\n     */\r\n    private pokerSpriteFrames: cc.SpriteFrame[] = [];\r\n\r\n    /**\r\n     * 存放加载过的头像纹理\r\n     * \r\n     * @private\r\n     * @type {cc.SpriteFrame[]}\r\n     * @memberof IMGManager\r\n     */\r\n    private spriteFrames: cc.SpriteFrame[] = [];\r\n\r\n    /** \r\n     * 把加载成功的纹理存放到数组，待释放的时候使用\r\n     * \r\n     * @param {cc.SpriteFrame} spriteFrame  添加纹理\r\n     * @memberof IMGManager\r\n     */\r\n    private addSpriteFrame(spriteFrame: cc.SpriteFrame): void {\r\n        let bool: boolean = this.spriteFrames.some((sf) => {\r\n            return sf === spriteFrame;\r\n        });\r\n        if (!bool) this.spriteFrames.push(spriteFrame);\r\n    }\r\n    /**\r\n     * 初始化加载图片资源\r\n     * \r\n     * @returns {Promise<void>} \r\n     * @memberof IMGManager\r\n     */\r\n    async initIMG(): Promise<void> {\r\n        this.headSpriteFrame = await this.initSystemHead();\r\n        this.bqSpriteFrames.length = 0;\r\n        this.bqSpriteFrames = await this.initAtlas('Atlas/bq');\r\n        this.pokerSpriteFrames.length = 0;\r\n        this.pokerSpriteFrames = await this.initAtlas('Atlas/poker');\r\n    }\r\n    /**\r\n     * 根据资源名排序\r\n     * \r\n     * @param {cc.SpriteFrame[]} spriteFrames \r\n     * @memberof IMGManager\r\n     */\r\n    private sortByName(spriteFrames: cc.SpriteFrame[]) {\r\n        if (spriteFrames && spriteFrames.length > 1) {\r\n            spriteFrames.sort((a: cc.SpriteFrame, b: cc.SpriteFrame) => {\r\n                return Number(a.name) - Number(b.name);\r\n            })\r\n        }\r\n    }\r\n    /**\r\n     * 根据id获取扑克图片\r\n     * \r\n     * @param {number} id \r\n     * @returns {cc.SpriteFrame} \r\n     * @memberof IMGManager\r\n     */\r\n    getPokerSpriteFrameById(id: number): cc.SpriteFrame {\r\n        let res: cc.SpriteFrame = null;\r\n        if (this.pokerSpriteFrames && this.pokerSpriteFrames.length > 0) {\r\n            for (let i = 0; i < this.pokerSpriteFrames.length; i++) {\r\n                let spriteFrame = this.pokerSpriteFrames[i];\r\n                if (Number(spriteFrame.name) === id) {\r\n                    res = spriteFrame;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * 初始化，动态加载系统头像\r\n     * \r\n     * @returns {Promise<void>} \r\n     * @memberof IMGManager\r\n     */\r\n    private initSystemHead(): Promise<cc.SpriteFrame> {\r\n        return new Promise<cc.SpriteFrame>((resolve, reject) => {\r\n            cc.loader.loadRes(\"Texture/systemHead\", cc.SpriteFrame, (err: Error, spriteFrame: cc.SpriteFrame) => {\r\n                if (err) {\r\n                    reject(err.message);\r\n                }\r\n                else {\r\n                    resolve(spriteFrame);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private initAtlas(path: string): Promise<cc.SpriteFrame[]> {\r\n        return new Promise<cc.SpriteFrame[]>((resolve, reject) => {\r\n            cc.loader.loadRes(path, cc.SpriteAtlas, (err: Error, spriteAtlas: cc.SpriteAtlas) => {\r\n                if (err) {\r\n                    reject(err.message);\r\n                }\r\n                else {\r\n                    let spriteFrames: cc.SpriteFrame[] = spriteAtlas.getSpriteFrames();\r\n                    this.sortByName(spriteFrames);\r\n                    cc.loader.release(spriteAtlas);\r\n                    resolve(spriteFrames);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取图片目录\r\n     * \r\n     * @returns {string} \r\n     * @memberof IMGManager\r\n     */\r\n    private getDirPath(): string {\r\n        //图片保存目录\r\n        let dirpath = jsb.fileUtils.getWritablePath() + 'img/';\r\n        //验证路径是否存在，如果不存在则创建路径\r\n        if (!jsb.fileUtils.isDirectoryExist(dirpath)) {\r\n            jsb.fileUtils.createDirectory(dirpath);\r\n        }\r\n        return dirpath;\r\n    }\r\n\r\n    /**\r\n     * 根据url地址获取本地路径\r\n     * \r\n     * @param {string} url \r\n     * @returns {string} \r\n     * @memberof IMGManager\r\n     */\r\n    private getFilePath(url: string): string {\r\n        return this.getDirPath() + ENCManager.getInstance().MD5(url) + '.jpg';\r\n    }\r\n\r\n    /**\r\n     * 根据路径加载本地存储的图片\r\n     * \r\n     * @param {string} filePath 图片路径\r\n     * @returns {Promise<cc.SpriteFrame>} \r\n     * @memberof IMGManager\r\n     */\r\n    private loadLocalImg(filePath: string): Promise<cc.SpriteFrame> {\r\n        return new Promise<cc.SpriteFrame>((resolve, reject) => {\r\n            cc.loader.load(filePath, (err, tex) => {\r\n                if (err) {\r\n                    reject(err);\r\n                } else {\r\n                    let spriteFrame = new cc.SpriteFrame(tex);\r\n                    this.addSpriteFrame(spriteFrame);\r\n                    resolve(spriteFrame);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 根据url加载图片，长度为0取系统头像，大于0取微信头像\r\n     * \r\n     * @param {string} url 头像地址\r\n     * @returns {Promise<cc.SpriteFrame>} \r\n     * @memberof IMGManager\r\n     */\r\n    async loadURLImage(url: string): Promise<cc.SpriteFrame> {\r\n        if (url.length > 0) {//取微信头像\r\n            if (cc.sys.isNative) {\r\n                let filePath = this.getFilePath(url);\r\n                if (jsb.fileUtils.isFileExist(filePath)) {\r\n                    return this.loadLocalImg(filePath);\r\n                } else {\r\n                    let buffer = await new Promise<ArrayBuffer>((resolve, reject) => {\r\n                        let xhr = new XMLHttpRequest()\r\n                        xhr.responseType = 'arraybuffer';\r\n                        xhr.timeout = 10000;\r\n                        xhr.onload = () => {\r\n                            if (xhr.status === 200) {\r\n                                resolve(xhr.response);\r\n                            } else {\r\n                                reject(new TypeError('Network response failed'));\r\n                            }\r\n                        }\r\n                        xhr.onerror = () => {\r\n                            reject(new TypeError('Network request error'));\r\n                        }\r\n                        xhr.ontimeout = () => {\r\n                            reject(new TypeError('Network request timeout'));\r\n                        }\r\n                        xhr.open(\"GET\", url, true);\r\n                        xhr.send();\r\n                    });\r\n                    jsb.fileUtils.writeDataToFile(new Uint8Array(buffer), filePath);\r\n                    return this.loadLocalImg(filePath);\r\n                }\r\n            } else {\r\n                return new Promise<cc.SpriteFrame>((resolve, reject) => {\r\n                    cc.loader.load({ url: url, type: 'jpg' }, (err, tex) => {\r\n                        if (err) {\r\n                            reject(err);\r\n                        } else {\r\n                            let spriteFrame = new cc.SpriteFrame(tex);\r\n                            this.addSpriteFrame(spriteFrame);\r\n                            resolve(spriteFrame);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        } else {//取系统头像\r\n            return this.headSpriteFrame;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 释放图片管理器的资源\r\n     * \r\n     * @memberof IMGManager\r\n     */\r\n    destroySelf(): void {\r\n        this.destrySpriteFrames(this.spriteFrames);\r\n        this.destrySpriteFrames(this.bqSpriteFrames);\r\n        this.destrySpriteFrames(this.pokerSpriteFrames);\r\n        this.release(this.headSpriteFrame);\r\n        this.headSpriteFrame = null;\r\n        IMGManager._instance = null;\r\n    }\r\n    /**\r\n     * 释放图集\r\n     * \r\n     * @private\r\n     * @param {cc.SpriteFrame[]} spriteFrames \r\n     * @memberof IMGManager\r\n     */\r\n    private destrySpriteFrames(spriteFrames: cc.SpriteFrame[]) {\r\n        spriteFrames.forEach((spriteFrame: cc.SpriteFrame) => {\r\n            this.release(spriteFrame);\r\n        }, this);\r\n        spriteFrames.length = 0;\r\n    }\r\n\r\n    /**\r\n     * 释放资源及其所有的引用\r\n     * \r\n     * @private\r\n     * @param {(cc.Asset | cc.RawAsset | string)} owner 需要释放的资源\r\n     * @memberof IMGManager\r\n     */\r\n    private release(owner: cc.Asset | cc.RawAsset | string): void {\r\n        let deps = cc.loader.getDependsRecursively(owner);\r\n        cc.loader.release(deps);\r\n    }\r\n}\r\n    //http://wx.qlogo.cn/mmopen/g3MonUZtNHkdmzicIlibx6iaFqAc56vxLSUfpb6n5WKSYVY0ChQKkiaJSgQ1dZuTOgvLLrhJbERQQ4eMsv84eavHiaiceqxibJxCfHe/0","import { config, ui_manager } from './ModuleManager';\r\n/**\r\n * 初始化微信\r\n * \r\n * @export\r\n * @returns {number} \r\n */\r\nexport function initWX(app_id: string, app_key: string): number {\r\n    let res = -1;\r\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_ANDROID) {\r\n        // res = jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AndroidHelper\", \"initWX\", \"(Ljava/lang/String;Ljava/lang/String;)I\", app_id, app_key);\r\n    } else if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n        res = jsb.reflection.callStaticMethod(\"IOSHelper\", \"initWX:key:\", app_id, app_key);\r\n    } else {\r\n        cc.log(\"该方法只支持原生平台\");\r\n        res = -1;\r\n    }\r\n    return res;\r\n}\r\n\r\n/**\r\n * 初始化实时语音\r\n * \r\n * @export\r\n * @param {string} openId \r\n * @returns {number} \r\n */\r\nexport function initVoice(openId: string, app_id: string, app_key: string): number {\r\n    let result = -1;\r\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_ANDROID) {\r\n        result = jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AndroidHelper\", \"initVoice\", \"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\", openId, app_id, app_key);\r\n    } else if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n        result = jsb.reflection.callStaticMethod(\"IOSHelper\", \"initVoice:app_id:app_key:\", openId, app_id, app_key);\r\n    }\r\n    else {\r\n        cc.log(\"该方法只支持原生平台\");\r\n        result = 0;\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * 获取app版本号\r\n * \r\n * @export\r\n * @returns {string} \r\n */\r\nexport function getAppVersion(): string {\r\n    let ver = \"\";\r\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_ANDROID) {\r\n        ver = jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AndroidHelper\", \"getAppVersion\", \"()Ljava/lang/String;\");\r\n    } else if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n        ver = jsb.reflection.callStaticMethod(\"IOSHelper\", \"getAppVersion\");\r\n    }\r\n    else {\r\n        cc.log(\"该方法只支持原生平台\");\r\n    }\r\n    return ver;\r\n}\r\n\r\n/**\r\n * 用默认浏览器打开指定url\r\n * \r\n * @export\r\n * @param {string} url url地址\r\n */\r\nexport function openBrowser(url: string): void {\r\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_ANDROID) {\r\n        jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AndroidHelper\", \"openBrowser\", \"(Ljava/lang/String;)V\", url);\r\n    } else if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n        jsb.reflection.callStaticMethod(\"IOSHelper\", \"openBrowser:\", url);\r\n    }\r\n    else {\r\n        cc.log(\"该方法只支持原生平台\");\r\n    }\r\n}\r\n\r\n/**\r\n * 获取电量百分比0<x<=100\r\n * \r\n * @export\r\n * @returns {number} \r\n */\r\nexport function getBatteryLevel(): number {\r\n    let level = 0;\r\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_ANDROID) {\r\n        level = jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AndroidHelper\", \"getBatteryLevel\", \"()I\");\r\n    } else if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n        level = jsb.reflection.callStaticMethod(\"IOSHelper\", \"getBatteryLevel\");\r\n    }\r\n    else {\r\n        cc.log(\"该方法只支持原生平台\");\r\n    }\r\n    return level;\r\n}\r\n\r\n/**\r\n * 微信登录\r\n * \r\n * @export\r\n */\r\nexport function wxLogin(): void {\r\n    if (config.wxState !== 0) {\r\n        return;\r\n    }\r\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_ANDROID) {\r\n        // jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AndroidHelper\", \"wxLogin\", \"()V\");\r\n    } else if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n        jsb.reflection.callStaticMethod(\"IOSHelper\", \"wxLogin\");\r\n    }\r\n    else {\r\n        cc.log(\"该方法只支持原生平台\");\r\n    }\r\n}\r\n\r\n/**\r\n * 微信分享\r\n * \r\n * @export\r\n * @param {string} url 网页地址\r\n * @param {string} title 标题\r\n * @param {string} des 说明\r\n */\r\nexport function wxShare(url: string, title: string, des: string): void {\r\n    if (config.wxState !== 0) {\r\n        return;\r\n    }\r\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_ANDROID) {\r\n        // jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AndroidHelper\", \"wxShare\", \"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\", url, title, des);\r\n    } else if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n        jsb.reflection.callStaticMethod(\"IOSHelper\", \"wxShare:title:des:\", url, title, des);\r\n    }\r\n    else {\r\n        cc.log(\"该方法只支持原生平台\");\r\n    }\r\n}\r\n\r\n/**\r\n * 战绩分享-图片分享\r\n * \r\n * @export\r\n * @param {string} filePath 截图文件路径\r\n */\r\nexport function wxShareRecord(filePath: string): void {\r\n    if (config.wxState !== 0) {\r\n        return;\r\n    }\r\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_ANDROID) {\r\n        // jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AndroidHelper\", \"wxShareRecord\", \"(Ljava/lang/String;)V\", filePath);\r\n    } else if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n        jsb.reflection.callStaticMethod(\"IOSHelper\", \"wxShareRecord:\", filePath);\r\n    }\r\n    else {\r\n        cc.log(\"该方法只支持原生平台\");\r\n    }\r\n}\r\n\r\n/**\r\n * 复制文本到剪切板\r\n * \r\n * @export\r\n * @param {string} text 需要复制的文本\r\n */\r\nexport function copyToClipboard(text: string): void {\r\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_ANDROID) {\r\n        // jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AndroidHelper\", \"copyToClipboard\", \"(Ljava/lang/String;)V\", text);\r\n    } else if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n        jsb.reflection.callStaticMethod(\"IOSHelper\", \"copyToClipboard:\", text);\r\n    }\r\n    else {\r\n        cc.log(\"该方法只支持原生平台\");\r\n    }\r\n}\r\n\r\n/**\r\n * 调用手机震动\r\n * \r\n * @export\r\n */\r\nexport function phoneVibration(): void {\r\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_ANDROID) {\r\n        // jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AndroidHelper\", \"phoneVibration\", \"()V\");\r\n    } else if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n        jsb.reflection.callStaticMethod(\"IOSHelper\", \"phoneVibration\");\r\n    }\r\n    else {\r\n        cc.log(\"该方法只支持原生平台\");\r\n    }\r\n}\r\n\r\n/**\r\n * 加入语音房间\r\n * \r\n * @export\r\n */\r\nexport function joinTeamRoom(roomId: string): number {\r\n    let result = -1;\r\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_ANDROID) {\r\n        // result = jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AndroidHelper\", \"joinTeamRoom\", \"(Ljava/lang/String;)I\", roomId);\r\n    } else if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n        result = jsb.reflection.callStaticMethod(\"IOSHelper\", \"joinTeamRoom:\", roomId);\r\n    }\r\n    else {\r\n        cc.log(\"该方法只支持原生平台\");\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * 离开语音房间\r\n * \r\n * @export\r\n */\r\nexport function quitRoom(): number {\r\n    let result = -1;\r\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_ANDROID) {\r\n        // result = jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AndroidHelper\", \"quitRoom\", \"()I\");\r\n    } else if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n        result = jsb.reflection.callStaticMethod(\"IOSHelper\", \"quitRoom\");\r\n    }\r\n    else {\r\n        cc.log(\"该方法只支持原生平台\");\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * 开关音频\r\n * \r\n * @export\r\n * @param {boolean} isOpen 是否需要开启音频\r\n */\r\nexport function setState(isOpen: boolean): number {\r\n    let result = -1;\r\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_ANDROID) {\r\n        // result = jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AndroidHelper\", \"setState\", \"(Z)I\", isOpen);\r\n    } else if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n        result = jsb.reflection.callStaticMethod(\"IOSHelper\", \"setState:\", isOpen);\r\n    }\r\n    else {\r\n        cc.log(\"该方法只支持原生平台\");\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * 请求ios内购列表\r\n * @param ids 苹果网站上配置的商品id，多个用‘,’隔开\r\n */\r\nexport function getProducts(ids: string): void {\r\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n        // jsb.reflection.callStaticMethod(\"IOSHelper\", \"getProducts:\", ids);\r\n    } else {\r\n        cc.log(\"该方法只支持IOS原生平台\");\r\n    }\r\n}\r\n/**\r\n * 购买指定商品\r\n * \r\n * @export\r\n * @param {string} pid 商品id\r\n * @param {string} bid 订单id\r\n */\r\nexport function buyProduct(pid: string, bid: string) {\r\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n        jsb.reflection.callStaticMethod(\"IOSHelper\", \"buyProduct:bid:\", pid, bid);\r\n    } else {\r\n        cc.log(\"该方法只支持IOS原生平台\");\r\n    }\r\n}","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class Join extends cc.Component {\r\n    /**\r\n     * 展示点击数字的标签数组\r\n     * \r\n     * @type {cc.Label[]}\r\n     * @memberof Join\r\n     */\r\n    nums: cc.Label[] = [];\r\n    /**\r\n     * 当前输入的数字对应的下标\r\n     * \r\n     * @type {number}\r\n     * @memberof Join\r\n     */\r\n    currentIndex: number = 0;\r\n\r\n    onLoad() {\r\n        this.nums.length = 0;\r\n        this.currentIndex = 0;\r\n        cc.find('layout', this.node).children.forEach((node: cc.Node) => {\r\n            let num = cc.find('num', node).getComponent(cc.Label);\r\n            this.nums.push(num);\r\n        }, this);\r\n        this.nums.sort((a: cc.Label, b: cc.Label) => {\r\n            return Number(a.node.parent.name) - Number(b.node.parent.name);\r\n        });\r\n        dd.ui_manager.hideLoading();\r\n    }\r\n    /**\r\n     * 点击关闭按钮\r\n     * \r\n     * @memberof Join\r\n     */\r\n    click_out() {\r\n        dd.mp_manager.playButton();\r\n        this.node.destroy();\r\n    }\r\n    /**\r\n     * 点击按钮\r\n     * \r\n     * @param {cc.Event.EventTouch} event \r\n     * @param {string} [data] \r\n     * @memberof Join\r\n     */\r\n    click_btn(event: cc.Event.EventTouch, data: string) {\r\n        dd.mp_manager.playButton();\r\n        let index = Number(data);\r\n        if (index === 10) {//删除\r\n            if (this.currentIndex > 0) {\r\n                this.currentIndex--;\r\n                this.nums[this.currentIndex].string = '';\r\n            } else {\r\n                this.nums[0].string = '';\r\n            }\r\n        } else if (index === 11) {//清空\r\n            this.nums.forEach((label: cc.Label) => {\r\n                label.string = '';\r\n            }, this);\r\n            this.currentIndex = 0;\r\n        } else {//0-9的数字\r\n            if (this.currentIndex < this.nums.length) {\r\n                this.nums[this.currentIndex].string = data;\r\n                this.currentIndex++;\r\n                if (this.currentIndex === this.nums.length) {\r\n                    if (!dd.ui_manager.showLoading('正在加入房间,请稍后')) return;\r\n                    let obj = { tableId: this.getNumber() };\r\n                    let msg = JSON.stringify(obj);\r\n                    dd.ws_manager.sendMsg(dd.protocol.DZPKER_TABLE_JOIN, msg, (flag: number, content?: any) => {\r\n                        if (flag === 0) {\r\n                            dd.gm_manager.setTableData(content as TableData, 1);\r\n                            cc.director.loadScene('GameScene', () => {\r\n                                dd.ui_manager.showTip('加入房间成功');\r\n                            });\r\n                        } else if (flag === -1) {\r\n                            dd.ui_manager.showTip('加入房间消息发送超时');\r\n                        } else {\r\n                            dd.ui_manager.showTip(content);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 获取所有标签所组成的数字\r\n     * \r\n     * @returns \r\n     * @memberof Join\r\n     */\r\n    getNumber() {\r\n        let numStr = '';\r\n        for (let i = 0; i < this.nums.length; i++) {\r\n            numStr += this.nums[i].string;\r\n        }\r\n        return Number(numStr);\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n@ccclass\r\nexport default class LoadCanvas extends cc.Component {\r\n\r\n    /**\r\n     * 热更本地资源配置文件\r\n     * \r\n     * @memberof LoadCanvas\r\n     */\r\n    @property({ url: cc.RawAsset })\r\n    manifestUrl = null;\r\n    /**\r\n     * 显示初始化错误信息的标签\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof LoadCanvas\r\n     */\r\n    @property(cc.Label)\r\n    lbl_err: cc.Label = null;\r\n    /**\r\n     * 是否需要热更新\r\n     * \r\n     * @type {boolean}\r\n     * @memberof LoadCanvas\r\n     */\r\n    _needUpdate: boolean = false;\r\n    /**\r\n     * 热更新管理器\r\n     * \r\n     * @type {any}\r\n     * @memberof LoadCanvas\r\n     */\r\n    _am: any = null;//\r\n    /**\r\n     * 热更新，检测状态监听\r\n     * \r\n     * @type {any}\r\n     * @memberof LoadCanvas\r\n     */\r\n    _checkListener: any = null;\r\n    /**\r\n     * 热更新，下载状态监听\r\n     * \r\n     * @type {any}\r\n     * @memberof LoadCanvas\r\n     */\r\n    _updateListener: any = null;\r\n    /**\r\n     * 热更新文件下载失败次数\r\n     * \r\n     * @type {number}\r\n     * @memberof LoadCanvas\r\n     */\r\n    _failCount: number = 0;\r\n    /**\r\n     * 下载最新安装包\r\n     * \r\n     * @memberof LoadCanvas\r\n     */\r\n    download: (data: any) => void = (json: any) => {\r\n        switch (cc.sys.os) {\r\n            case cc.sys.OS_ANDROID:\r\n                dd.js_call_native.openBrowser(json.apkUrl);\r\n                break;\r\n            case cc.sys.OS_IOS:\r\n                dd.js_call_native.openBrowser(json.ipaUrl);\r\n                break;\r\n            default:\r\n                dd.js_call_native.openBrowser(json.apkUrl);\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * 显示错误信息\r\n     * \r\n     * @memberof LoadCanvas\r\n     */\r\n    error: (msg: string) => void = (msg: string) => {\r\n        dd.ui_manager.hideLoading();\r\n        this.lbl_err.string = msg;\r\n    }\r\n\r\n    async onLoad() {\r\n        // //设置全局对象\r\n        (<any>window).dd = dd;\r\n        dd.config.wxState = dd.js_call_native.initWX(dd.config.app_id, dd.config.secret);\r\n        dd.init();\r\n        //根据数值判断是网络问题还是包体问题\r\n        try {\r\n            await dd.ui_manager.initUI();\r\n            dd.ui_manager.showLoading('正在初始化游戏资源,请稍后');\r\n            await dd.img_manager.initIMG();\r\n            await dd.mp_manager.initMP();\r\n        }\r\n        catch (errMsg) {\r\n            this.error(errMsg + ',请重启或卸载重装!');\r\n            return;\r\n        }\r\n        await this.checkAppVersion();\r\n    }\r\n\r\n    /**\r\n     * 原生平台检测app版本号，web跳过\r\n     * \r\n     * @memberof LoadCanvas\r\n     */\r\n    async checkAppVersion(): Promise<void> {\r\n        let ver = dd.js_call_native.getAppVersion();\r\n        if (ver.length > 0) {\r\n            let response: Response = await fetch(dd.config.checkUrl + ver);\r\n            if (response.ok) {\r\n                let json: checkData = await response.json();\r\n                dd.config.cd = json;\r\n                if (json.type < 0) {\r\n                    dd.ui_manager.showAlert(2, '当前版本过低,请更新至最新版本再继续游戏!', () => {\r\n                        this.download(json);\r\n                    });\r\n                } else if (json.type === 1) {\r\n                    dd.ui_manager.showAlert(1, '发现新版本,是否前往下载?', () => {\r\n                        this.download(json);\r\n                    }, () => {\r\n                        this.checkResVersion();\r\n                    });\r\n                } else {\r\n                    this.checkResVersion();\r\n                }\r\n            } else {\r\n                this.error('检测APP版本信息服务器响应失败，请确认您的网络通畅后，重启游戏!');\r\n            }\r\n        } else {\r\n            this.jumpScene();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 资源版本检测，web跳过\r\n     * \r\n     * @memberof LoadCanvas\r\n     */\r\n    checkResVersion(): void {\r\n        let storagePath = ((jsb.fileUtils ? jsb.fileUtils.getWritablePath() : '/') + 'platform-remote-asset');\r\n        this._am = new jsb.AssetsManager(this.manifestUrl, storagePath);\r\n        this._am.retain();\r\n        if (this._am.getLocalManifest().isLoaded()) {\r\n            this._checkListener = new jsb.EventListenerAssetsManager(this._am, this.checkCb.bind(this));\r\n            cc.eventManager.addListener(this._checkListener, 1);\r\n            this._am.checkUpdate();\r\n        } else {\r\n            this.error('获取本地资源配置失败，请卸载重装!');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 资源版本检测的回调方法\r\n     * \r\n     * @param {any} event \r\n     * @memberof LoadCanvas\r\n     */\r\n    checkCb(event) {\r\n        switch (event.getEventCode()) {\r\n            case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:\r\n                this.error('没有发现本地的资源配置文件，热更新失败！');\r\n                cc.eventManager.removeListener(this._checkListener);\r\n                break;\r\n            case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:\r\n            case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:\r\n                dd.ui_manager.showAlert(2, '下载服务端资源配置文件失败，请检查网络！', () => {\r\n                    cc.game.end();\r\n                })\r\n                cc.eventManager.removeListener(this._checkListener);\r\n                break;\r\n            case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:\r\n                cc.log(\"当前已经是最新版本，跳过热更新！\");\r\n                cc.eventManager.removeListener(this._checkListener);\r\n                this.jumpScene();\r\n                break;\r\n            case jsb.EventAssetsManager.NEW_VERSION_FOUND:\r\n                dd.ui_manager.showLoading('发现新版本资源，开始准备更新！');\r\n                this._needUpdate = true;\r\n                cc.eventManager.removeListener(this._checkListener);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._am && this._needUpdate) {\r\n            this._needUpdate = false;\r\n            this._updateListener = new jsb.EventListenerAssetsManager(this._am, this.updateCb.bind(this));\r\n            cc.eventManager.addListener(this._updateListener, 1);\r\n            this._failCount = 0;\r\n            this._am.update();\r\n        }\r\n    }\r\n\r\n    updateCb(event) {\r\n        let needRestart = false;\r\n        let failed = false;\r\n        switch (event.getEventCode()) {\r\n            case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:\r\n                cc.log(\"没有发现本地的资源配置文件，热更新失败！\");\r\n                failed = true;\r\n                break;\r\n            case jsb.EventAssetsManager.UPDATE_PROGRESSION:\r\n                dd.ui_manager.showLoading('正在更新，下载进度：(' + (event.getPercentByFile() * 100).toFixed(2) + '%)');\r\n                break;\r\n            case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:\r\n            case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:\r\n                cc.log(\"下载服务端资源配置文件失败，热更新失败！\");\r\n                failed = true;\r\n                break;\r\n            case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:\r\n                cc.log(\"当前已经是最新版本，跳过热更新！\");\r\n                failed = true;\r\n                break;\r\n            case jsb.EventAssetsManager.UPDATE_FINISHED:\r\n                cc.log('热更新完毕：' + event.getMessage());\r\n                needRestart = true;\r\n                break;\r\n            case jsb.EventAssetsManager.UPDATE_FAILED:\r\n                cc.log('文件下载失败：' + event.getMessage());\r\n                this._failCount++;\r\n                if (this._failCount < 5) {\r\n                    this._am.downloadFailedAssets();\r\n                }\r\n                else {\r\n                    cc.log('太多文件下载失败，退出热更新！');\r\n                    this._failCount = 0;\r\n                    failed = true;\r\n                }\r\n                break;\r\n            case jsb.EventAssetsManager.ERROR_UPDATING:\r\n                cc.log('Asset update error: ' + event.getAssetId() + ', ' + event.getMessage());\r\n                break;\r\n            case jsb.EventAssetsManager.ERROR_DECOMPRESS:\r\n                cc.log(event.getMessage());\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n\r\n        if (failed) {\r\n            //提示用户热更失败，让用户重新启动尝试或者跳过\r\n            cc.eventManager.removeListener(this._updateListener);\r\n            dd.ui_manager.showAlert(2, '更新资源失败，请确认您的网络通畅后，重启游戏！', () => {\r\n                cc.game.end();\r\n            })\r\n        }\r\n        if (needRestart) {\r\n            cc.eventManager.removeListener(this._updateListener);\r\n            let searchPaths = jsb.fileUtils.getSearchPaths();\r\n            let newPaths = this._am.getLocalManifest().getSearchPaths();\r\n            Array.prototype.unshift(searchPaths, newPaths);\r\n            cc.sys.localStorage.setItem('HotUpdateSearchPaths', JSON.stringify(searchPaths));\r\n            jsb.fileUtils.setSearchPaths(searchPaths);\r\n            dd.ui_manager.showLoading('资源更新完毕，正在重启游戏！');\r\n            setTimeout(() => {\r\n                dd.destroy();\r\n                cc.sys.garbageCollect();\r\n                cc.game.restart();\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 跳转到登陆场景\r\n     * \r\n     * @memberof LoadCanvas\r\n     */\r\n    jumpScene(): void {\r\n        setTimeout(() => {\r\n            cc.director.loadScene('LoginScene');\r\n        }, 1000);\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this._am && this._am.release();\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class LoginCanvas extends cc.Component {\r\n    /**\r\n     * 微信登录按钮\r\n     * \r\n     * @type {cc.Button}\r\n     * @memberof LoginCanvas\r\n     */\r\n    @property(cc.Button)\r\n    btn_wechat: cc.Button = null;\r\n    /**\r\n     * 快速登录按钮\r\n     * \r\n     * @type {cc.Button}\r\n     * @memberof LoginCanvas\r\n     */\r\n    @property(cc.Button)\r\n    btn_quick: cc.Button = null;\r\n    /**\r\n     * 微信登录结果回调\r\n     * \r\n     * @memberof LoginCanvas\r\n     */\r\n    cb_login: (event: cc.Event.EventCustom) => void = (event: cc.Event.EventCustom) => {\r\n        let detail = event.detail;\r\n        if (detail.flag === 1) {//成功\r\n            let userInfo: UserInfo = detail.data;\r\n            userInfo.headimgurl = dd.utils.getHeadImgUrl(userInfo.headimgurl);\r\n            this.wsLogin(dd.protocol.ACCOUNT_LOGIN_WX, userInfo);\r\n        } else {//失败\r\n            dd.ui_manager.showTip(detail.data as string);\r\n        }\r\n    }\r\n    /**\r\n     * ccc组件释放的生命周期回调\r\n     * \r\n     * @memberof LoginCanvas\r\n     */\r\n    onDestroy() {\r\n        if (dd.config.wxState === 0) {\r\n            cc.systemEvent.off('cb_login', this.cb_login, this);\r\n        }\r\n    }\r\n    async onLoad() {\r\n        dd.ui_manager.showLoading();\r\n        try {\r\n            await dd.ws_manager.connect(dd.config.wsUrl);//连接服务器\r\n            if (dd.config.wxState === 0) {\r\n                //注册微信登录回调\r\n                cc.systemEvent.on('cb_login', this.cb_login, this);\r\n                //微信自动登录\r\n                await this.aotuLogin();\r\n                this.btn_quick.node.active = false;\r\n                this.btn_wechat.node.active = true;\r\n            } else {\r\n                dd.ui_manager.hideLoading();\r\n                this.btn_quick.node.active = true;\r\n                this.btn_wechat.node.active = false;\r\n            }\r\n        } catch (errMsg) {\r\n            dd.ui_manager.showAlert(2, errMsg, () => {\r\n                this.onLoad();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 微信自动登录\r\n     * \r\n     * @returns {Promise<void>} \r\n     * @memberof LoginCanvas\r\n     */\r\n    async aotuLogin(): Promise<void> {\r\n        let db = cc.sys.localStorage;\r\n        if (db.getItem('TokenInfo')) {//验证是否有授权过\r\n            try {\r\n                let data: TokenInfo = JSON.parse(db.getItem('TokenInfo'));\r\n                //刷新token过期时间\r\n                let url_refresh = 'https://api.weixin.qq.com/sns/oauth2/refresh_token?appid=' + dd.config.app_id + '&grant_type=refresh_token&refresh_token=' + data.refresh_token;\r\n                let response_refresh = await fetch(url_refresh);\r\n                if (response_refresh.ok) {//请求成功\r\n                    let newToken: TokenInfo = await response_refresh.json();\r\n                    db.setItem('TokenInfo', JSON.stringify(newToken));\r\n                    let url_userInfo = 'https://api.weixin.qq.com/sns/userinfo?access_token=' + newToken.access_token + '&openid=' + newToken.openid;\r\n                    let response_userInfo = await fetch(url_userInfo);\r\n                    if (response_userInfo.ok) {//获取用户信息成功\r\n                        let userInfo = await response_userInfo.json();\r\n                        userInfo.headimgurl = dd.utils.getHeadImgUrl(userInfo.headimgurl);\r\n                        this.wsLogin(dd.protocol.ACCOUNT_LOGIN_WX, userInfo);\r\n                    } else {//获取用户信息失败\r\n                        dd.ui_manager.showTip('微信用户信息获取失败，请重新授权登录');\r\n                    }\r\n                } else {//授权过期需要重新授权\r\n                    dd.ui_manager.showTip('微信授权过期，请重新授权登录');\r\n                }\r\n            } catch (err) {\r\n                dd.ui_manager.showTip(err + '微信请求异常，请重新授权登录');\r\n            }\r\n        } else {\r\n            dd.ui_manager.hideLoading();\r\n        }\r\n    }\r\n    /**\r\n     * 微信登录\r\n     * \r\n     * @returns \r\n     * @memberof LoginCanvas\r\n     */\r\n    click_wx() {\r\n        if (!dd.ui_manager.showLoading('准备跳往微信授权登录')) return;\r\n        setTimeout(() => {\r\n            dd.js_call_native.wxLogin();\r\n        }, 1000);\r\n    }\r\n    /**\r\n     * ws登录请求\r\n     * \r\n     * @param {number} msgId 协议号\r\n     * @param {UserInfo} [info] 微信获取的数据对象\r\n     * @memberof LoginCanvas\r\n     */\r\n    wsLogin(msgId: number, info?: UserInfo): void {\r\n        dd.mp_manager.playButton();\r\n        let obj: any = {};\r\n        if (info) {\r\n            obj.uuid = info.unionid;\r\n            obj.headImg = info.headimgurl;\r\n            obj.nick = info.nickname;\r\n            obj.sex = info.sex;\r\n        } else {\r\n            obj.uuid = this.getGuestAccount();\r\n        }\r\n        dd.ws_manager.sendMsg(\r\n            msgId,\r\n            JSON.stringify(obj),\r\n            (flag: number, content?: any) => {\r\n                if (flag === 0) {//登录服务器成功\r\n                    dd.ud_manager.account_mine = content as AccountData;\r\n                    dd.ws_manager.setLoginState(true);\r\n                    if (dd.ud_manager.account_mine.gameDataAttribVo.tableId !== 0) {\r\n                        this.getTableData(0);\r\n                    } else {\r\n                        setTimeout(() => {\r\n                            cc.director.loadScene('HomeScene');\r\n                        }, 1000);\r\n                    }\r\n                } else if (flag === -1) {\r\n                    dd.ui_manager.showTip('登录消息超时');\r\n                } else {//登录服务器失败\r\n                    dd.ui_manager.showTip(content);\r\n                }\r\n            });\r\n    }\r\n    /**\r\n     * 游客登录\r\n     * \r\n     * @returns \r\n     * @memberof LoginCanvas\r\n     */\r\n    click_quick() {\r\n        if (!dd.ui_manager.showLoading('正在登录中,请稍后')) return;\r\n        this.wsLogin(dd.protocol.ACCOUNT_LOGIN_TOURIST);\r\n    }\r\n    /**\r\n     * 获取当前最新的桌子数据\r\n     * \r\n     * @param {number} count 请求次数\r\n     * @memberof LoginCanvas\r\n     */\r\n    getTableData(count: number) {\r\n        dd.ws_manager.sendMsg(\r\n            dd.protocol.DZPKER_TABLE_GET_TABLE_INFO,\r\n            JSON.stringify({ tableId: dd.ud_manager.account_mine.gameDataAttribVo.tableId }),\r\n            (flag: number, content?: any) => {\r\n                if (flag === 0) {\r\n                    dd.gm_manager.setTableData(content as TableData, 1);\r\n                    cc.director.loadScene('GameScene', () => {\r\n                        dd.ui_manager.showTip('返回牌局成功!');\r\n                    });\r\n                } else {\r\n                    count++;\r\n                    if (count > 3) {\r\n                        dd.ui_manager.showAlert(2, '连接服务器失败,请确认网络后重新启动游戏!', () => {\r\n                            cc.game.end();\r\n                        });\r\n                    } else {\r\n                        this.getTableData(count);\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * 获取uuid，第一次运行创建uuid\r\n     * \r\n     * @returns \r\n     * @memberof LoginCanvas\r\n     */\r\n    getGuestAccount(): string {\r\n        let db = cc.sys.localStorage;\r\n        let uuid = db.getItem('uuid');\r\n        if (uuid && uuid.length === 32) {\r\n            return uuid;\r\n        } else {\r\n            uuid = dd.utils.createUUID(32, 16);\r\n            db.setItem('uuid', uuid);\r\n            return uuid;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * 音频管理类\r\n * \r\n * @export\r\n * @class MPManager\r\n */\r\nexport default class MPManager {\r\n    private static _instance: MPManager = null;\r\n    private constructor() { }\r\n    /**\r\n     * 获取WSManager单例对象\r\n     * \r\n     * @static\r\n     * @returns {MPManager} \r\n     * @memberof MPManager\r\n     */\r\n    static getInstance(): MPManager {\r\n        if (MPManager._instance === null) {\r\n            MPManager._instance = new MPManager();\r\n        }\r\n        return MPManager._instance;\r\n    }\r\n\r\n    private url_allin: string = null;\r\n    private url_bet: string = null;\r\n    private url_call: string = null;\r\n    private url_check: string = null;\r\n    private url_deal: string = null;\r\n    private url_flop: string = null;\r\n    private url_fold: string = null;\r\n    private url_join: string = null;\r\n    private url_msg: string = null;\r\n    private url_over: string = null;\r\n    private url_raise: string = null;\r\n    private url_start: string = null;\r\n    private url_straddle: string = null;\r\n    private url_time: string = null;\r\n    private url_button: string = null;\r\n\r\n    /**\r\n     * 音效开关\r\n     * \r\n     * @private\r\n     * @type {boolean}\r\n     * @memberof MPManager\r\n     */\r\n    sw: boolean = true;\r\n\r\n    /**\r\n     * 初始化音频管理\r\n     * \r\n     * @returns {Promise<void>} \r\n     * @memberof MPManager\r\n     */\r\n    async initMP(): Promise<void> {\r\n        this.initSetting();\r\n        this.url_allin = await this.loadFile('allin');\r\n        this.url_bet = await this.loadFile('bet');\r\n        this.url_call = await this.loadFile('call');\r\n        this.url_check = await this.loadFile('check');\r\n        this.url_deal = await this.loadFile('deal');\r\n        this.url_flop = await this.loadFile('flop');\r\n        this.url_fold = await this.loadFile('fold');\r\n        this.url_join = await this.loadFile('join');\r\n        this.url_msg = await this.loadFile('msg');\r\n        this.url_over = await this.loadFile('over');\r\n        this.url_raise = await this.loadFile('raise');\r\n        this.url_start = await this.loadFile('start');\r\n        this.url_straddle = await this.loadFile('straddle');\r\n        this.url_time = await this.loadFile('time');\r\n        this.url_button = await this.loadFile('button');\r\n    }\r\n\r\n    /**\r\n     * 加载音频文件\r\n     * \r\n     * @private\r\n     * @param {string} name 音频名称(不带扩展名)\r\n     * @returns {Promise<string>} 返回音频可用播放的路径\r\n     * @memberof MPManager\r\n     */\r\n    private loadFile(name: string): Promise<string> {\r\n        return new Promise<string>((resolve, reject) => {\r\n            let path = 'Audio/' + name;\r\n            cc.loader.loadRes(path, (error: Error, resource: string) => {\r\n                if (error) {\r\n                    cc.error(error.message || error);\r\n                    reject(error.message || error);\r\n                }\r\n                cc.loader.setAutoRelease(resource, false);\r\n                resolve(resource);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 初始化音频配置\r\n     * \r\n     * @memberof MPManager\r\n     */\r\n    private initSetting(): void {\r\n        let db = cc.sys.localStorage;\r\n        let sw = db.getItem('sw');\r\n        if (sw) {\r\n            this.sw = JSON.parse(sw).sw;\r\n        } else {\r\n            db.setItem('sw', JSON.stringify({ sw: this.sw }));\r\n        }\r\n    }\r\n    /**\r\n     * 播放allin音效\r\n     * \r\n     * @memberof MPManager\r\n     */\r\n    playAllin() {\r\n        if (this.sw && this.url_allin) {\r\n            cc.audioEngine.play(this.url_allin, false, 1);\r\n        }\r\n    }\r\n    /**\r\n     * 播放提示当前表态玩家的音效\r\n     * \r\n     * @memberof MPManager\r\n     */\r\n    playBet() {\r\n        if (this.sw && this.url_bet) {\r\n            cc.audioEngine.play(this.url_bet, false, 1);\r\n        }\r\n    }\r\n    /**\r\n     * 播放跟住音效\r\n     * \r\n     * @memberof MPManager\r\n     */\r\n    playCall() {\r\n        if (this.sw && this.url_call) {\r\n            cc.audioEngine.play(this.url_call, false, 1);\r\n        }\r\n    }\r\n    /**\r\n     * 播放看牌(过牌)音效\r\n     * \r\n     * @memberof MPManager\r\n     */\r\n    playCheck() {\r\n        if (this.sw && this.url_check) {\r\n            cc.audioEngine.play(this.url_check, false, 1);\r\n        }\r\n    }\r\n    /**\r\n     * 播放发牌音效\r\n     * \r\n     * @memberof MPManager\r\n     */\r\n    playDeal() {\r\n        if (this.sw && this.url_deal) {\r\n            cc.audioEngine.play(this.url_deal, false, 1);\r\n        }\r\n    }\r\n    /**\r\n     * 播放翻盘音效\r\n     * \r\n     * @memberof MPManager\r\n     */\r\n    playFlop() {\r\n        if (this.sw && this.url_flop) {\r\n            cc.audioEngine.play(this.url_flop, false, 1);\r\n        }\r\n    }\r\n    /**\r\n     * 播放弃牌音效\r\n     * \r\n     * @memberof MPManager\r\n     */\r\n    playFold() {\r\n        if (this.sw && this.url_fold) {\r\n            cc.audioEngine.play(this.url_fold, false, 1);\r\n        }\r\n    }\r\n    /**\r\n     * 播放入座音效\r\n     * \r\n     * @memberof MPManager\r\n     */\r\n    playJoin() {\r\n        if (this.sw && this.url_join) {\r\n            cc.audioEngine.play(this.url_join, false, 1);\r\n        }\r\n    }\r\n    /**\r\n     * 播放新消息音效\r\n     * \r\n     * @memberof MPManager\r\n     */\r\n    playMsg() {\r\n        if (this.sw && this.url_msg) {\r\n            cc.audioEngine.play(this.url_msg, false, 1);\r\n        }\r\n    }\r\n    /**\r\n     * 播放游戏结束的音效\r\n     * \r\n     * @memberof MPManager\r\n     */\r\n    playOver() {\r\n        if (this.sw && this.url_over) {\r\n            cc.audioEngine.play(this.url_over, false, 1);\r\n        }\r\n    }\r\n    /**\r\n     * 播放加注音效\r\n     * @memberof MPManager\r\n     */\r\n    playRaise() {\r\n        if (this.sw && this.url_raise) {\r\n            cc.audioEngine.play(this.url_raise, false, 1);\r\n        }\r\n    }\r\n    /**\r\n     * 播放游戏开始音效\r\n     * \r\n     * @memberof MPManager\r\n     */\r\n    playStart() {\r\n        if (this.sw && this.url_start) {\r\n            cc.audioEngine.play(this.url_start, false, 1);\r\n        }\r\n    }\r\n    /**\r\n     * 播放闭眼盲音效\r\n     * \r\n     * @memberof MPManager\r\n     */\r\n    playStraddle() {\r\n        if (this.sw && this.url_straddle) {\r\n            cc.audioEngine.play(this.url_straddle, false, 1);\r\n        }\r\n    }\r\n    /**\r\n     * 播放时间到的音效\r\n     * \r\n     * @memberof MPManager\r\n     */\r\n    playTime() {\r\n        if (this.sw && this.url_time) {\r\n            cc.audioEngine.play(this.url_time, false, 1);\r\n        }\r\n    }\r\n    /**\r\n     * 播放按钮音效\r\n     * \r\n     * @memberof MPManager\r\n     */\r\n    playButton() {\r\n        if (this.sw && this.url_button) {\r\n            cc.audioEngine.play(this.url_button, false, 1);\r\n        }\r\n    }\r\n    /**\r\n     * 释放销毁\r\n     * \r\n     * @memberof MPManager\r\n     */\r\n    destroySelf(): void {\r\n        cc.loader.release(this.url_allin);\r\n        cc.loader.release(this.url_bet);\r\n        cc.loader.release(this.url_call);\r\n        cc.loader.release(this.url_check);\r\n        cc.loader.release(this.url_deal);\r\n        cc.loader.release(this.url_flop);\r\n        cc.loader.release(this.url_fold);\r\n        cc.loader.release(this.url_join);\r\n        cc.loader.release(this.url_msg);\r\n        cc.loader.release(this.url_over);\r\n        cc.loader.release(this.url_raise);\r\n        cc.loader.release(this.url_start);\r\n        cc.loader.release(this.url_straddle);\r\n        cc.loader.release(this.url_time);\r\n        cc.loader.release(this.url_button);\r\n        cc.audioEngine.uncacheAll();\r\n        this.url_allin = null;\r\n        this.url_bet = null;\r\n        this.url_call = null;\r\n        this.url_check = null;\r\n        this.url_deal = null;\r\n        this.url_flop = null;\r\n        this.url_fold = null;\r\n        this.url_join = null;\r\n        this.url_msg = null;\r\n        this.url_over = null;\r\n        this.url_raise = null;\r\n        this.url_start = null;\r\n        this.url_straddle = null;\r\n        this.url_time = null;\r\n        this.url_button = null;\r\n    }\r\n}","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class MineItem extends cc.Component {\r\n    /**\r\n     * 房主头像\r\n     * \r\n     * @type {cc.Sprite}\r\n     * @memberof MineItem\r\n     */\r\n    @property(cc.Sprite)\r\n    head: cc.Sprite = null;\r\n    /**\r\n     * 房主昵称\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof MineItem\r\n     */\r\n    @property(cc.Label)\r\n    nick: cc.Label = null;\r\n    /**\r\n     * 大小盲注\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof MineItem\r\n     */\r\n    @property(cc.Label)\r\n    blind: cc.Label = null;\r\n    /**\r\n     * 最小买入\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof MineItem\r\n     */\r\n    @property(cc.Label)\r\n    min: cc.Label = null;\r\n    /**\r\n     * 剩余时间\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof MineItem\r\n     */\r\n    @property(cc.Label)\r\n    time: cc.Label = null;\r\n    /**\r\n     * 现有人数\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof MineItem\r\n     */\r\n    @property(cc.Label)\r\n    count: cc.Label = null;\r\n    /**\r\n     * 我的牌局对象\r\n     * \r\n     * @type {JoinedTableItem}\r\n     * @memberof MineItem\r\n     */\r\n    data: JoinedTableItem = null;\r\n    /**\r\n     * 点击节点触发的回调方法\r\n     * \r\n     * @type {Function}\r\n     * @memberof MineItem\r\n     */\r\n    callback: Function = null;\r\n\r\n    async updateItem(data: JoinedTableItem, callback?: Function) {\r\n        this.data = data;\r\n        this.callback = callback;\r\n        if (this.data) {\r\n            this.nick.string = dd.utils.getStringBySize(data.nick, 12);\r\n            this.blind.string = data.small + '/' + data.big;\r\n            this.min.string = data.minJoin.toString();\r\n            this.count.string = data.currPlayer + '/' + data.seatNum;\r\n            this.head.spriteFrame = await dd.img_manager.loadURLImage(data.headImg);\r\n        }\r\n    }\r\n\r\n    update(dt: number) {\r\n        if (this.data) {\r\n            let endTime = Number(this.data.vaildTime);\r\n            if (endTime > 0) {\r\n                endTime -= dt * 1000;\r\n                if (endTime < 0) {\r\n                    endTime = 0;\r\n                }\r\n                this.data.vaildTime = endTime.toString();\r\n                this.time.string = dd.utils.getCountDownString(Number(this.data.vaildTime));\r\n            } else {\r\n                this.data = null;\r\n                this.node.destroy();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 点击当前节点\r\n     * \r\n     * @memberof MineItem\r\n     */\r\n    click_item() {\r\n        if (this.callback) {\r\n            this.callback(this.data);\r\n        }\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class Mine extends cc.Component {\r\n    /**\r\n     * 滚动节点\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof Mine\r\n     */\r\n    @property(cc.Node)\r\n    svNode: cc.Node = null;\r\n    /**\r\n     * 我的牌局对象数据集\r\n     * \r\n     * @type {JoinedTableItem[]}\r\n     * @memberof Mine\r\n     */\r\n    dataList: JoinedTableItem[] = [];\r\n\r\n    init(datas: JoinedTableItem[]) {\r\n        this.dataList = datas;\r\n    }\r\n\r\n    onLoad() {\r\n        if (this.dataList && this.dataList.length > 0) {\r\n            this.svNode.getComponent('SVScript').init(this.dataList, (data: JoinedTableItem) => {\r\n                dd.ui_manager.showLoading('正在进入房间');\r\n                dd.mp_manager.playButton();\r\n                let obj = { tableId: data.tableId };\r\n                let msg = JSON.stringify(obj);\r\n                dd.ws_manager.sendMsg(dd.protocol.DZPKER_TABLE_JOIN, msg, (flag: number, content?: any) => {\r\n                    if (flag === 0) {\r\n                        dd.gm_manager.setTableData(content as TableData, 1);\r\n                        cc.director.loadScene('GameScene', () => {\r\n                            dd.ui_manager.showTip('加入房间成功');\r\n                        });\r\n                    } else if (flag === -1) {\r\n                        dd.ui_manager.showTip('加入房间消息发送超时');\r\n                    } else {\r\n                        dd.ui_manager.showTip(content);\r\n                    }\r\n                });\r\n            });\r\n            dd.ui_manager.hideLoading();\r\n        } else {\r\n            dd.ui_manager.showTip('当前没有您可以继续的牌局!');\r\n        }\r\n    }\r\n    /**\r\n     * 点击关闭按钮\r\n     * \r\n     * @memberof Mine\r\n     */\r\n    click_out() {\r\n        dd.mp_manager.playButton();\r\n        this.node.destroy();\r\n    }\r\n}\r\n","import * as JSCallNative from './JSCallNative';\r\nimport * as NativeCallJS from './NativeCallJS';\r\nimport * as Utils from './Utils';\r\nimport * as Config from './Config';\r\nimport WSManager from './WSManager';\r\nimport IMGManager from './IMGManager';\r\nimport UDManager from './UDManager';\r\nimport GMManager from './GMManager';\r\nimport UIManager from './UIManager';\r\nimport ENCManger from './ENCManager';\r\nimport MPManager from './MPManager';\r\nimport * as Enum from './Protocol';\r\nimport NodeManager from './NodeManager';\r\n\r\n/**\r\n * js调用native管理对象\r\n */\r\nexport const js_call_native = JSCallNative;\r\n/**\r\n * native调用js管理对象\r\n */\r\nexport const native_call_js = NativeCallJS;\r\n/**\r\n * 常用方法管理对象\r\n */\r\nexport const utils = Utils;\r\n/**\r\n * 配置管理对象\r\n */\r\nexport const config = Config;\r\n/**\r\n * 协议号枚举\r\n */\r\nexport const protocol = Enum.Protocol;\r\nexport const hot_key = Enum.HotKey;\r\nexport const card_type = Enum.CardType;\r\nexport const game_state = Enum.GameState;\r\nexport const suit = Enum.Suit;\r\n/**\r\n * ws管理单例\r\n */\r\nexport let ws_manager: WSManager = null;\r\n/**\r\n * 图片管理单例\r\n */\r\nexport let img_manager: IMGManager = null;\r\n/**\r\n * 用户管理单例\r\n */\r\nexport let ud_manager: UDManager = null;\r\n/**\r\n * 游戏管理单例\r\n */\r\nexport let gm_manager: GMManager = null;\r\n/**\r\n * UI管理单例\r\n */\r\nexport let ui_manager: UIManager = null;\r\n/**\r\n * 加密管理单例\r\n */\r\nexport let enc_manager: ENCManger = null;\r\n/**\r\n * 音频管理类\r\n */\r\nexport let mp_manager: MPManager = null;\r\n/**\r\n * 节点管理类\r\n */\r\nexport let node_manager: NodeManager = null;\r\n\r\nexport function errAlert() {\r\n    ui_manager.showAlert(2, '连接服务器失败，请重新启动游戏！', () => {\r\n        cc.game.end();\r\n    });\r\n    gm_manager.destroySelf();\r\n    ud_manager.destroySelf();\r\n    ws_manager.destroySelf();\r\n    gm_manager = null;\r\n    ud_manager = null;\r\n    ws_manager = null;\r\n}\r\n/**\r\n * 意外断线通知回调\r\n */\r\nexport let cb_diconnect: (event: cc.Event.EventCustom) => void = (event: cc.Event.EventCustom) => {\r\n    //0意外,1心跳超时,2未知\r\n    let accountId = null;\r\n    if (ud_manager && ud_manager.account_mine) {\r\n        accountId = ud_manager && ud_manager.account_mine.accountId;\r\n    }\r\n\r\n    gm_manager.destroySelf();\r\n    ud_manager.destroySelf();\r\n    gm_manager = null;\r\n    ud_manager = null;\r\n\r\n    ui_manager.hideLoading();\r\n    ui_manager.showLoading('正在重连,请稍后');\r\n    setTimeout(async () => {\r\n        ws_manager = WSManager.getInstance();\r\n        gm_manager = GMManager.getInstance();\r\n        ud_manager = UDManager.getInstance();\r\n        try {\r\n            let sceneName = cc.director.getScene().name;\r\n            await ws_manager.connect(config.wsUrl);//连接服务器\r\n            if (sceneName !== 'LoginScene' && accountId) {\r\n                //通过accountId获取用户信息\r\n                ws_manager.sendMsg(\r\n                    protocol.ACCOUNT_LOGIN_ACCOUNTID,\r\n                    JSON.stringify({ accountId: accountId }),\r\n                    (flag: number, content?: any) => {\r\n                        if (flag === 0) {//登录服务器成功\r\n                            ud_manager.account_mine = content as AccountData;\r\n                            ws_manager.setLoginState(true);\r\n                            //判断是否在战斗中\r\n                            if (ud_manager.account_mine && ud_manager.account_mine.gameDataAttribVo && ud_manager.account_mine.gameDataAttribVo.tableId !== 0) {\r\n                                //获取当前最新的桌子数据\r\n                                ws_manager.sendMsg(\r\n                                    protocol.DZPKER_TABLE_GET_TABLE_INFO,\r\n                                    JSON.stringify({ tableId: ud_manager.account_mine.gameDataAttribVo.tableId }),\r\n                                    (flag: number, content?: any) => {\r\n                                        if (flag === 0) {\r\n                                            gm_manager.setTableData(content as TableData);\r\n                                            if (sceneName !== 'GameScene') {\r\n                                                cc.director.loadScene('GameScene', () => {\r\n                                                    ui_manager.showTip('重连成功!');\r\n                                                });\r\n                                            } else {\r\n                                                ui_manager.showTip('重连成功!');\r\n                                            }\r\n                                        } else {\r\n                                            errAlert();\r\n                                        }\r\n                                    });\r\n                            } else {\r\n                                if (sceneName === 'GameScene') {\r\n                                    cc.director.loadScene('HomeScene', () => {\r\n                                        ui_manager.showTip('重连成功!');\r\n                                    });\r\n                                } else {\r\n                                    ui_manager.showTip('重连成功!');\r\n                                }\r\n                            }\r\n                        } else {//登录服务器失败\r\n                            errAlert();\r\n                        }\r\n                    });\r\n            } else {\r\n                ui_manager.hideLoading();\r\n            }\r\n        } catch (err) {\r\n            errAlert();\r\n        }\r\n    }, 100);\r\n}\r\n\r\n/**\r\n * 初始化单例对象\r\n * \r\n * @export\r\n */\r\nexport function init(): void {\r\n    ws_manager = WSManager.getInstance();\r\n    img_manager = IMGManager.getInstance();\r\n    ud_manager = UDManager.getInstance();\r\n    ui_manager = UIManager.getInstance();\r\n    enc_manager = ENCManger.getInstance();\r\n    gm_manager = GMManager.getInstance();\r\n    mp_manager = MPManager.getInstance();\r\n    node_manager = NodeManager.getInstance();\r\n\r\n    cc.systemEvent.on('cb_diconnect', cb_diconnect, this);\r\n}\r\n/**\r\n * 释放所有单例对象\r\n * \r\n * @export\r\n */\r\nexport function destroy() {\r\n    img_manager.destroySelf();\r\n    ws_manager.destroySelf();\r\n    ui_manager.destroySelf();\r\n    ud_manager.destroySelf();\r\n    gm_manager.destroySelf();\r\n    mp_manager.destroySelf();\r\n    node_manager.destroySelf();\r\n\r\n    img_manager = null;\r\n    ws_manager = null;\r\n    ui_manager = null;\r\n    ud_manager = null;\r\n    gm_manager = null;\r\n    mp_manager = null;\r\n    node_manager = null;\r\n\r\n    cc.systemEvent.off('cb_diconnect', cb_diconnect, this);\r\n}\r\n","import * as Config from './Config';\r\n\r\n/**\r\n * 微信登录-获取access_token\r\n * \r\n * @export\r\n * @param {string} code 登录授权获取到的code\r\n */\r\nexport async function getAccessToken(code: string) {\r\n    try {\r\n        let url = 'https://api.weixin.qq.com/sns/oauth2/access_token?appid=' + Config.app_id + '&secret=' + Config.secret + '&code=' + code + '&grant_type=authorization_code';\r\n        let response = await fetch(url);\r\n        if (response.ok) {\r\n            let data: TokenInfo = await response.json();\r\n            if (data.access_token) {\r\n                let db = cc.sys.localStorage;\r\n                db.setItem('TokenInfo', JSON.stringify(data));\r\n                let url_userInfo = 'https://api.weixin.qq.com/sns/userinfo?access_token=' + data.access_token + '&openid=' + data.openid;\r\n                let response_userInfo = await fetch(url_userInfo);\r\n                if (response_userInfo.ok) {\r\n                    let userInfo = await response_userInfo.json();\r\n                    cc.systemEvent.emit('cb_login', { flag: 1, data: userInfo });\r\n                } else {\r\n                    cc.systemEvent.emit('cb_login', { flag: 0, data: '获取用户信息失败' });\r\n                }\r\n            } else {\r\n                cc.systemEvent.emit('cb_login', { flag: 0, data: '获取token失败' });\r\n            }\r\n        } else {\r\n            cc.systemEvent.emit('cb_login', { flag: 0, data: '请求token失败' });\r\n        }\r\n    } catch (err) {\r\n        cc.systemEvent.emit('cb_login', { flag: 0, data: 'http请求异常' });\r\n    }\r\n}\r\n\r\n/**\r\n * 微信登录-授权失败\r\n * \r\n * @export\r\n */\r\nexport function loginError(): void {\r\n    cc.systemEvent.emit('cb_login', { flag: 0, data: '授权失败' });\r\n}\r\n\r\n/**\r\n * 微信分享-结果回调\r\n * \r\n * @export\r\n * @param {number} result 分享结果,0为成功\r\n */\r\nexport function shareCallback(result: number): void {\r\n    cc.systemEvent.emit('cb_share', result);\r\n}","\r\n/**\r\n * 用户管理类\r\n * \r\n * @export\r\n * @class NodeManager\r\n */\r\nexport default class NodeManager {\r\n    private static _instance: NodeManager = null;\r\n    private constructor() { }\r\n    /**\r\n     * 获取NodeManager单例对象\r\n     * \r\n     * @static\r\n     * @returns {NodeManager} \r\n     * @memberof NodeManager\r\n     */\r\n    static getInstance(): NodeManager {\r\n        if (NodeManager._instance === null) {\r\n            NodeManager._instance = new NodeManager();\r\n            NodeManager._instance.__dispatchEvent__ = cc.Node.prototype.dispatchEvent;\r\n            cc.Node.prototype.dispatchEvent = NodeManager._instance.dispatchEvent;\r\n        }\r\n        return NodeManager._instance;\r\n    }\r\n\r\n    private canTouch: boolean = true;\r\n    private maxTouchNum: number = 1;\r\n    private touchNum: number = 0;\r\n    private __dispatchEvent__: (event: cc.Event) => void = null;\r\n\r\n    private dispatchEvent(event: cc.Event): void {\r\n        //这里的this指向的是cc.Node\r\n        switch (event.type) {\r\n            case 'touchstart':\r\n                if (NodeManager._instance.touchNum < NodeManager._instance.maxTouchNum) {\r\n                    NodeManager._instance.touchNum++;\r\n                    NodeManager._instance.canTouch = true;\r\n                    NodeManager._instance.__dispatchEvent__.call(this, event);\r\n                }\r\n                break;\r\n            case 'touchmove':\r\n                if (!NodeManager._instance.canTouch && NodeManager._instance.touchNum < NodeManager._instance.maxTouchNum) {\r\n                    NodeManager._instance.canTouch = true;\r\n                    NodeManager._instance.touchNum++;\r\n                }\r\n\r\n                if (NodeManager._instance.canTouch) {\r\n                    NodeManager._instance.__dispatchEvent__.call(this, event);\r\n                }\r\n\r\n                break;\r\n            case 'touchend':\r\n                if (NodeManager._instance.canTouch) {\r\n                    NodeManager._instance.canTouch = false;\r\n                    NodeManager._instance.touchNum--;\r\n                    NodeManager._instance.__dispatchEvent__.call(this, event);\r\n                }\r\n                break;\r\n            case 'touchcancel':\r\n                if (NodeManager._instance.canTouch) {\r\n                    NodeManager._instance.canTouch = false;\r\n                    NodeManager._instance.touchNum--;\r\n                    NodeManager._instance.__dispatchEvent__.call(this, event);\r\n                }\r\n                break;\r\n            default:\r\n                NodeManager._instance.__dispatchEvent__.call(this, event);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 清空单例对象\r\n     * \r\n     * @memberof NodeManager\r\n     */\r\n    destroySelf(): void {\r\n        this.canTouch = true;\r\n        this.maxTouchNum = 1;\r\n        this.touchNum = 0;\r\n        cc.Node.prototype.dispatchEvent = this.__dispatchEvent__;\r\n        this.__dispatchEvent__ = null;\r\n\r\n        NodeManager._instance = null;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class Notice extends cc.Component {\r\n    /**\r\n     * 存放公告的一级容器\r\n     * \r\n     * @type {cc.ScrollView}\r\n     * @memberof Notice\r\n     */\r\n    @property(cc.ScrollView)\r\n    sv1: cc.ScrollView = null;\r\n    /**\r\n     * 公告展示的容器\r\n     * \r\n     * @type {cc.ScrollView}\r\n     * @memberof Notice\r\n     */\r\n    @property(cc.ScrollView)\r\n    sv2: cc.ScrollView = null;\r\n    /**\r\n     * 公告数据集\r\n     * \r\n     * @type {ActivityItemAttrib[]}\r\n     * @memberof Notice\r\n     */\r\n    dataList: ActivityItemAttrib[] = null;\r\n\r\n\r\n    init(datas: ActivityItemAttrib[]) {\r\n        this.dataList = datas;\r\n    }\r\n\r\n    onLoad() {\r\n        this.sv1.node.active = true;\r\n        this.sv2.node.active = false;\r\n        if (this.dataList && this.dataList.length > 0) {\r\n            this.dataList.forEach(async (data: ActivityItemAttrib, index: number) => {\r\n                let sf1 = await dd.img_manager.loadURLImage(data.currUrl);\r\n                let node_out = new cc.Node();\r\n                node_out.tag = index;\r\n                node_out.addComponent(cc.Sprite).spriteFrame = sf1;\r\n                node_out.on(cc.Node.EventType.TOUCH_END, async (event: cc.Event.EventTouch) => {\r\n                    let traget = event.getCurrentTarget();\r\n                    let item = this.dataList[traget.tag];\r\n                    let sf2 = await dd.img_manager.loadURLImage(item.openUrl);\r\n                    let node_in = new cc.Node();\r\n                    node_in.addComponent(cc.Sprite).spriteFrame = sf2;\r\n                    this.sv1.node.active = false;\r\n                    this.sv2.node.active = true;\r\n                    this.sv2.content.addChild(node_in);\r\n                }, this);\r\n                this.sv1.content.addChild(node_out);\r\n            }, this);\r\n            dd.ui_manager.hideLoading();\r\n        } else {\r\n            dd.ui_manager.showTip('当前没有公告消息');\r\n        }\r\n    }\r\n    /**\r\n     * 点击关闭按钮\r\n     * \r\n     * @memberof Notice\r\n     */\r\n    click_out() {\r\n        dd.mp_manager.playButton();\r\n        if (this.sv2.node.active) {\r\n            this.sv2.scrollToTop();\r\n            this.sv2.content.removeAllChildren();\r\n            this.sv2.node.active = false;\r\n            this.sv1.node.active = true;\r\n        } else {\r\n            this.node.destroy();\r\n        }\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class PlayerItem extends cc.Component {\r\n    /**\r\n     * 头像\r\n     * \r\n     * @type {cc.Sprite}\r\n     * @memberof PlayerItem\r\n     */\r\n    @property(cc.Sprite)\r\n    headImg: cc.Sprite = null;\r\n    /**\r\n     * 用户昵称\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof PlayerItem\r\n     */\r\n    @property(cc.Label)\r\n    nick: cc.Label = null;\r\n    /**\r\n     * 积分数\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof PlayerItem\r\n     */\r\n    @property(cc.Label)\r\n    gold: cc.Label = null;\r\n    /**\r\n     * 参与局数\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof PlayerItem\r\n     */\r\n    @property(cc.Label)\r\n    count: cc.Label = null;\r\n    /**\r\n     * 输赢量\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof PlayerItem\r\n     */\r\n    @property(cc.Label)\r\n    win: cc.Label = null;\r\n\r\n    async init(data: TablePlayerListItem) {\r\n        this.headImg.spriteFrame = await dd.img_manager.loadURLImage(data.headImg);\r\n        this.nick.string = dd.utils.getStringBySize(data.nick, 12);\r\n        this.gold.string = data.currMoney;\r\n        this.count.string = data.gameNum;\r\n        this.win.string = data.winMoney;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class PlayerLayer extends cc.Component {\r\n    /**\r\n     * 玩家预制\r\n     * \r\n     * @type {cc.Prefab}\r\n     * @memberof PlayerLayer\r\n     */\r\n    @property(cc.Prefab)\r\n    pre_player: cc.Prefab = null;\r\n    /**\r\n     * 坐位节点数组\r\n     * \r\n     * @type {cc.Node[]}\r\n     * @memberof PlayerLayer\r\n     */\r\n    @property([cc.Node])\r\n    seatNodes: cc.Node[] = [];\r\n    /**\r\n     * 公共牌列表\r\n     * @type {cc.Node[]}\r\n     * @memberof PlayerLayer\r\n     */\r\n    @property([cc.Node])\r\n    pCardNodes: cc.Node[] = [];\r\n    /**\r\n     * 扑克牌预制\r\n     * \r\n     * @type {cc.Prefab}\r\n     * @memberof PlayerLayer\r\n     */\r\n    @property(cc.Prefab)\r\n    pre_card: cc.Prefab = null;\r\n    /**\r\n     * 积分\r\n     * @type {cc.Prefab}\r\n     * @memberof PlayerLayer\r\n     */\r\n    @property(cc.Prefab)\r\n    chip_prefab: cc.Prefab = null;\r\n    onLoad() {\r\n        cc.systemEvent.on('updatePlayer', this.updatePlayer, this);\r\n        cc.systemEvent.on('doFPAction', this.doFPAction, this);\r\n        cc.systemEvent.on('btResult', this.showBTResult, this);\r\n        cc.systemEvent.on('lookCard', this.showLookCard, this);\r\n        cc.systemEvent.on('chatPush', this.showChat, this);\r\n\r\n        this.seatNodes.forEach((seatNode: cc.Node) => {\r\n            seatNode.getChildByName('empty').on(cc.Node.EventType.TOUCH_END, this.click_empty, this);\r\n        }, this);\r\n\r\n        this.updatePlayer();\r\n        dd.gm_manager.playerScript = this;\r\n    }\r\n\r\n    onDestroy() {\r\n        cc.systemEvent.off('updatePlayer', this.updatePlayer, this);\r\n        cc.systemEvent.off('doFPAction', this.doFPAction, this);\r\n        cc.systemEvent.off('btResult', this.showBTResult, this);\r\n        cc.systemEvent.off('lookCard', this.showLookCard, this);\r\n        cc.systemEvent.off('chatPush', this.showChat, this);\r\n    }\r\n\r\n    update() {\r\n        if (dd.gm_manager && dd.gm_manager.getTableData()) {\r\n            let tabelData = dd.gm_manager.getTableData();\r\n            if (tabelData.gameState === dd.game_state.STATE_TABLE_OUTCARD_2) {\r\n                if (dd.gm_manager.publicCardNum !== 3) {\r\n                    dd.gm_manager.publicCardNum = 3;\r\n                    //创建3张公共牌\r\n                    this.showPublicCardAction(0, 3);\r\n                }\r\n            } else if (tabelData.gameState === dd.game_state.STATE_TABLE_OUTCARD_3) {\r\n                if (dd.gm_manager.publicCardNum !== 4) {\r\n                    dd.gm_manager.publicCardNum = 4;\r\n                    //创建第4张公共牌\r\n                    this.showPublicCardAction(3, 4);\r\n                    this.updatePublicCard(3);\r\n                }\r\n            } else if (tabelData.gameState === dd.game_state.STATE_TABLE_OUTCARD_4) {\r\n                if (dd.gm_manager.publicCardNum !== 5) {\r\n                    dd.gm_manager.publicCardNum = 5;\r\n                    //创建第5张公共牌\r\n                    this.showPublicCardAction(4, 5);\r\n                    this.updatePublicCard(4);\r\n                }\r\n            } else {\r\n                this.updatePublicCard(tabelData.tableHandCards.length);\r\n                //单局结算\r\n                if (tabelData.gameState === dd.game_state.STATE_TABLE_OVER_ONCE) {\r\n                    if (!dd.gm_manager.isShowGameOver) {\r\n                        dd.gm_manager.isShowGameOver = true;\r\n                        this.showOthersCard();\r\n                        setTimeout(() => {\r\n                            this.showGameOver();\r\n                        }, 1000);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 显示聊天\r\n     * @memberof PlayerLayer\r\n     */\r\n    showChat(content: any) {\r\n        let data = content.detail;\r\n        let seatInfo = dd.gm_manager.getSeatDataByAccount(data.accountId);\r\n        if (seatInfo) {\r\n            let playerNode = this.getNodeBySeatId(seatInfo.seatIndex);\r\n            if (playerNode) {\r\n                let node = new cc.Node();\r\n                node.width = 80;\r\n                node.height = 80;\r\n                let spriteNode = new cc.Node();\r\n                spriteNode.addComponent(cc.Sprite).spriteFrame = dd.img_manager.bqSpriteFrames[data.content - 1];\r\n                spriteNode.parent = node;\r\n                node.parent = playerNode;\r\n                node.scale = 0;\r\n\r\n                let action = cc.scaleTo(0.5, 1);\r\n                action.easing(cc.easeElasticOut(0.4));\r\n                let seq = cc.sequence(action, cc.delayTime(1), cc.callFunc((target: cc.Node, data?: any) => {\r\n                    target.removeFromParent(true);\r\n                    target.destroy();\r\n                }, this));\r\n                node.runAction(seq);\r\n            }\r\n        }\r\n\r\n    }\r\n    /**\r\n     * 更新坐位上的玩家\r\n     * \r\n     * @memberof PlayerLayer\r\n     */\r\n    updatePlayer() {\r\n        let mineSeat = dd.gm_manager.getMineSeat();\r\n        if (mineSeat) {\r\n            dd.gm_manager.startIndex = mineSeat.seatIndex;\r\n        }\r\n        let tempIndex = dd.gm_manager.startIndex;\r\n        for (let i = 0; i < this.seatNodes.length; i++) {\r\n            let seatData = dd.gm_manager.getSeatDataByIndex(tempIndex);\r\n            let seatNode = this.seatNodes[i];\r\n            let emptyNode = seatNode.getChildByName('empty');\r\n            let playerNode = seatNode.getChildByName('Player');\r\n            if (seatData.accountId === '0') {//座位没人\r\n                emptyNode.active = true;\r\n                if (playerNode) {\r\n                    playerNode.destroy();\r\n                }\r\n            } else {//座位有人\r\n                emptyNode.active = false;\r\n                if (!playerNode) {\r\n                    playerNode = cc.instantiate(this.pre_player);\r\n                }\r\n                playerNode.getComponent('PlayerUI').updateData(seatData, i);\r\n                playerNode.parent = seatNode;\r\n                if (i === 0 && mineSeat) {//是自己\r\n                    playerNode.x = -150;\r\n                } else {\r\n                    playerNode.x = 0;\r\n                }\r\n            }\r\n            tempIndex++;\r\n            if (tempIndex > 8) {\r\n                tempIndex = 0;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 播放发牌动画(如果自己参与战斗发牌给自己后会执行翻牌动画)\r\n     * \r\n     * @memberof PlayerLayer\r\n     */\r\n    doFPAction() {\r\n        let nodeList: cc.Node[] = [];\r\n        let dataList: SeatData[] = [];\r\n        let tabelData = dd.gm_manager.getTableData();\r\n        let dealIndex = tabelData.bankerIndex;\r\n        for (let i = 0; i < tabelData.seats.length; i++) {\r\n            let seatData = tabelData.seats[dealIndex];\r\n            if (seatData.bGamed === 1) {\r\n                let nodeIndex = seatData.seatIndex - dd.gm_manager.startIndex;\r\n                if (nodeIndex < 0) {\r\n                    nodeIndex = 9 + nodeIndex;\r\n                }\r\n                let playerNode = this.seatNodes[nodeIndex].getChildByName('Player');\r\n                if (playerNode) {\r\n                    nodeList.push(playerNode);\r\n                    dataList.push(seatData);\r\n                }\r\n            }\r\n            dealIndex++;\r\n            if (dealIndex > 8) {\r\n                dealIndex = 0;\r\n            }\r\n        }\r\n        let dTime = (Number(tabelData.actTime) - Number(tabelData.svrTime)) / 1000;\r\n        let eTime = dTime / nodeList.length / 2;\r\n        if (eTime < 0.1) {\r\n            eTime = 0.1;\r\n        }\r\n        cc.log('发每张手牌的时间' + eTime);\r\n        let index = 0;\r\n        for (let i = 0; i < 2; i++) {\r\n            for (let j = 0; j < nodeList.length; j++) {\r\n                let playerNode = nodeList[j];\r\n                if (playerNode) {\r\n                    let data = dataList[j];\r\n                    let endPos = playerNode.parent.getPosition().add(playerNode.getPosition());\r\n                    let isMine = playerNode.x === 0 ? false : true;\r\n                    let actionNode = new cc.Node();\r\n                    actionNode.addComponent(cc.Sprite).spriteFrame = dd.img_manager.getPokerSpriteFrameById(0);\r\n                    actionNode.scale = 0.5;\r\n                    actionNode.setPosition(0, 0);\r\n                    actionNode.parent = this.node;\r\n                    let delayAction = cc.delayTime(eTime * index);\r\n                    let audioCallBack = cc.callFunc((target: cc.Node) => {\r\n                        dd.mp_manager.playDeal();\r\n                    }, this);\r\n                    let moveAction = cc.moveTo(eTime, endPos);\r\n                    let scaleAction = cc.scaleTo(eTime, 1);\r\n                    let rotateAction = cc.rotateBy(eTime, 720);\r\n                    let spawnAction = cc.spawn(moveAction, scaleAction, rotateAction);\r\n                    let callback = cc.callFunc((target: cc.Node) => {\r\n                        target.destroy();\r\n\r\n                        if (isMine && playerNode && playerNode.isValid) {\r\n                            dd.gm_manager.isCreateMineCard = true;\r\n                            //播放翻牌动画\r\n                            let fpNode = cc.instantiate(this.pre_card);\r\n                            fpNode.getChildByName('img').getComponent(cc.Sprite).spriteFrame = dd.img_manager.getPokerSpriteFrameById(data.handCards[i]);\r\n                            fpNode.parent = playerNode.getChildByName('card' + (i + 1));\r\n                            fpNode.getComponent(cc.Animation).play();\r\n                            dd.mp_manager.playFlop();\r\n                        }\r\n                    }, this);\r\n                    actionNode.runAction(cc.sequence(delayAction, audioCallBack, spawnAction, callback));\r\n                    index++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 显示结算时候的玩家看牌\r\n     * @memberof PlayerLayer\r\n     */\r\n    showLookCard() {\r\n        let tabelData = dd.gm_manager.getTableData();\r\n        if (tabelData && tabelData.showCardSeatIndex !== -1) {\r\n            let seatInfo = dd.gm_manager.getSeatDataByIndex(tabelData.showCardSeatIndex);\r\n            //不是自己才翻牌\r\n            if (!dd.gm_manager.isMineSeat(seatInfo)) {\r\n                let playerNode = this.getNodeBySeatId(tabelData.showCardSeatIndex);\r\n                if (playerNode) {\r\n                    for (let i = 0; i < 2; i++) {\r\n                        //播放翻牌动画\r\n                        let fpNode = cc.instantiate(this.pre_card);\r\n                        fpNode.getChildByName('img').getComponent(cc.Sprite).spriteFrame = dd.img_manager.getPokerSpriteFrameById(seatInfo.handCards[i]);\r\n                        fpNode.parent = playerNode.getChildByName('card' + (i + 3));\r\n                        fpNode.getComponent(cc.Animation).play();\r\n                        dd.mp_manager.playFlop();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 显示公共牌的发牌动作\r\n     * @param {number} sIndex \r\n     * @param {number} eIndex 结束牌索引\r\n     * @memberof PlayerLayer\r\n     */\r\n    showPublicCardAction(sIndex: number, eIndex: number) {\r\n        cc.log('显示公共牌的发牌动作');\r\n        let tabelData = dd.gm_manager.getTableData();\r\n        let index = 0;\r\n        let dTime = (Number(tabelData.actTime) - Number(tabelData.svrTime)) / 1000;\r\n        let eTime = dTime / (eIndex - sIndex);\r\n        if (eTime < 0.1) {\r\n            eTime = 0.1;\r\n        }\r\n        cc.log('发每张公共牌的时间' + eTime);\r\n        for (let i = sIndex; i < eIndex; i++) {\r\n            let pCardNode = this.pCardNodes[i];\r\n            let oldCardNode = pCardNode.getChildByName('FPCard');\r\n            if (oldCardNode) {\r\n                oldCardNode.destroy();\r\n            }\r\n            let endPos = pCardNode.parent.getPosition().add(pCardNode.getPosition());\r\n            let actionNode = new cc.Node();\r\n            actionNode.addComponent(cc.Sprite).spriteFrame = dd.img_manager.getPokerSpriteFrameById(0);\r\n            actionNode.scale = 0.5;\r\n            actionNode.setPosition(0, 0);\r\n            actionNode.parent = this.node;\r\n            let delayAction = cc.delayTime(eTime * index);\r\n            let moveAction = cc.moveTo(eTime, endPos);\r\n            let scaleAction = cc.scaleTo(eTime, 1);\r\n            let rotateAction = cc.rotateBy(eTime, 720);\r\n            let spawnAction = cc.spawn(moveAction, scaleAction, rotateAction);\r\n            let callback = cc.callFunc((target: cc.Node) => {\r\n                target.destroy();\r\n\r\n                //播放翻牌动画\r\n                let fpNode = cc.instantiate(this.pre_card);\r\n                fpNode.getChildByName('img').getComponent(cc.Sprite).spriteFrame = dd.img_manager.getPokerSpriteFrameById(tabelData.tableHandCards[i]);\r\n                fpNode.parent = pCardNode;\r\n                fpNode.getComponent(cc.Animation).play();\r\n                dd.mp_manager.playFlop();\r\n            }, this);\r\n            actionNode.runAction(cc.sequence(delayAction, spawnAction, callback));\r\n            dd.mp_manager.playDeal();\r\n            index++;\r\n        }\r\n    }\r\n    /**\r\n     * 刷新公共牌\r\n     * @param {number} pIndex 刷新公共牌的数量\r\n     * @memberof PlayerLayer\r\n     */\r\n    updatePublicCard(pIndex: number) {\r\n        let tabelData = dd.gm_manager.getTableData();\r\n        if (tabelData.gameState < dd.game_state.STATE_TABLE_OUTCARD_2) {\r\n            for (let i = 0; i < this.pCardNodes.length; i++) {\r\n                this.pCardNodes[i].removeAllChildren();\r\n            }\r\n        } else {\r\n            tabelData.tableHandCards.forEach((id: number, index: number) => {\r\n                if (index < pIndex) {\r\n                    let pNode = this.pCardNodes[index];\r\n                    let cardNode = pNode.getChildByName('FPCard');\r\n                    if (!cardNode) {\r\n                        cardNode = cc.instantiate(this.pre_card);\r\n                        cardNode.getChildByName('img').getComponent(cc.Sprite).spriteFrame = dd.img_manager.getPokerSpriteFrameById(id);\r\n                        cardNode.getChildByName('back').active = false;\r\n                        cardNode.parent = pNode;\r\n                    } else {\r\n                        let isPlayAnim = cardNode.getComponent(cc.Animation).getAnimationState('fpAction').isPlaying;\r\n                        if (!isPlayAnim) {\r\n                            cardNode.getChildByName('img').getComponent(cc.Sprite).spriteFrame = dd.img_manager.getPokerSpriteFrameById(id);\r\n                            cardNode.getChildByName('back').active = false;\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }, this);\r\n        }\r\n    }\r\n    /**\r\n     * 显示表态人的表态结果\r\n     * @memberof PlayerLayer\r\n     */\r\n    showBTResult() {\r\n        let tabelData = dd.gm_manager.getTableData();\r\n        if (tabelData) {\r\n            let prevBtIndex = tabelData.prevBtIndex;\r\n            let prevSeat = dd.gm_manager.getSeatDataByIndex(prevBtIndex);\r\n            if (prevSeat) {\r\n                switch (prevSeat.btResult) {//座位表态结果(1=弃牌,2=过牌,3=跟注,4=加注,5=全下\r\n                    case 1://弃牌\r\n                        dd.mp_manager.playFold();\r\n                        this.showDiscardAction(prevSeat);\r\n                        break;\r\n                    case 2://过牌\r\n                        dd.mp_manager.playCheck();\r\n                        break;\r\n                    case 3://跟注\r\n                        dd.mp_manager.playCall();\r\n                        break;\r\n                    case 4:\r\n                        dd.mp_manager.playRaise();\r\n                        break;\r\n                    case 5://全下\r\n                        dd.mp_manager.playAllin();\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 显示弃牌动作\r\n     * @memberof PlayerLayer\r\n     */\r\n    showDiscardAction(seatData: SeatData) {\r\n        let playerNode = this.getNodeBySeatId(seatData.seatIndex);\r\n        if (playerNode) {\r\n            let sPos = playerNode.parent.getPosition().add(playerNode.getPosition());\r\n            let actionNode = new cc.Node();\r\n            actionNode.addComponent(cc.Sprite).spriteFrame = dd.img_manager.getPokerSpriteFrameById(0);\r\n            actionNode.setPosition(sPos);\r\n            actionNode.parent = this.node;\r\n            let moveAction = cc.moveTo(0.5, cc.p(0, 0));\r\n            let scaleAction = cc.scaleTo(0.5, 0.5);\r\n            let rotateAction = cc.rotateBy(0.5, 720);\r\n            let spawnAction = cc.spawn(moveAction, scaleAction, rotateAction);\r\n            let callback = cc.callFunc((target: cc.Node) => {\r\n                target.destroy();\r\n            }, this);\r\n            actionNode.runAction(cc.sequence(spawnAction, callback));\r\n            dd.mp_manager.playFold();\r\n        }\r\n    }\r\n    /**\r\n     * 显示下注的动作\r\n     * @memberof PlayerLayer\r\n     */\r\n    showFlyBetAction(seatData: SeatData, cb: any = null) {\r\n        let seats = dd.gm_manager.getTableData().seats;\r\n        let canvasTarget = dd.ui_manager.getCanvasNode().getComponent('GameCanvas');\r\n        let ePos = canvasTarget.pool.parent.getPosition().add(canvasTarget.pool.getPosition());\r\n        let playerNode = this.getNodeBySeatId(seatData.seatIndex);\r\n        if (playerNode) {\r\n            let pos = playerNode.parent.getPosition().add(playerNode.getPosition());\r\n            this.flyBetAction(pos, ePos, '', this.node, cb);\r\n        }\r\n    }\r\n    /**\r\n     * 飞积分\r\n     * @param {cc.Vec2} sPos 开始位置\r\n     * @param {cc.Vec2} ePos 结束位置\r\n     * @param {string} money 金币\r\n     * @param {cc.Node} parentNode 父节点\r\n     * @param {any} cb  回调函数\r\n     * @memberof PlayerLayer\r\n     */\r\n    flyBetAction(sPos: cc.Vec2, ePos: cc.Vec2, money: string, parentNode: cc.Node, cb: any = null) {\r\n        let chipNode = cc.instantiate(this.chip_prefab);\r\n        chipNode.getChildByName('lblBet').getComponent(cc.Label).string = money;\r\n        chipNode.setPosition(sPos);\r\n        chipNode.parent = this.node;\r\n        let moveAction = cc.moveTo(cc.pDistance(ePos, sPos) / 2500, ePos);\r\n        let callback = cc.callFunc((target: cc.Node) => {\r\n            target.destroy();\r\n            if (cb) {\r\n                cb();\r\n            }\r\n        }, this);\r\n        chipNode.runAction(cc.sequence(moveAction, callback));\r\n    }\r\n    /**\r\n     * 根据座位id获取节点索引\r\n     * @param {number} seatIndex 座位号\r\n     * @returns \r\n     * @memberof PlayerLayer\r\n     */\r\n    getNodeBySeatId(seatIndex: number) {\r\n        let nodeIndex = seatIndex - dd.gm_manager.startIndex;\r\n        if (nodeIndex < 0) {\r\n            nodeIndex = 9 + nodeIndex;\r\n        }\r\n        let playerNode = this.seatNodes[nodeIndex].getChildByName('Player');\r\n        return playerNode;\r\n    }\r\n    /**\r\n     * 显示游戏单局结算飞积分\r\n     * @memberof PlayerLayer\r\n     */\r\n    showGameOver() {\r\n        let canvasTarget = dd.ui_manager.getCanvasNode().getComponent('GameCanvas');\r\n        let ePos = canvasTarget.pool.parent.getPosition().add(canvasTarget.pool.getPosition());\r\n        let tabelData = dd.gm_manager.getTableData();\r\n        if (tabelData) {\r\n            dd.mp_manager.playOver();\r\n            for (let i = 0; i < tabelData.settlementOnceList.length; i++) {\r\n                let data = tabelData.settlementOnceList[i];\r\n                let playerNode = this.getNodeBySeatId(data.seatIndex);\r\n                if (playerNode) {\r\n                    if (Number(data.winMoney) > 0) {\r\n                        let pos = playerNode.parent.getPosition().add(playerNode.getPosition());\r\n                        //播放飞积分的动画\r\n                        this.flyBetAction(ePos, pos, data.winMoney, this.node);\r\n                    }\r\n                    //播放飞数字的动画\r\n                    this.showWinOrLostAction(data.winMoney, playerNode);\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 游戏结算时，显示其他人的牌\r\n     * @memberof PlayerLayer\r\n     */\r\n    showOthersCard() {\r\n        let tabelData = dd.gm_manager.getTableData();\r\n        if (tabelData) {\r\n            let players: SeatData[] = [];//游戏结算时，剩余的在游戏中的玩家数量\r\n            for (let i = 0; i < tabelData.seats.length; i++) {\r\n                let seat = tabelData.seats[i];\r\n                if (seat.bGamed === 1 && seat.btResult !== 1) {\r\n                    players.push(seat);\r\n                }\r\n            }\r\n            //如果剩余的玩家数量大于1，就翻开所有剩余玩家的牌\r\n            if (players.length > 1) {\r\n                for (let i = 0; i < players.length; i++) {\r\n                    let seat = players[i];\r\n                    //不是自己才翻牌\r\n                    if (!dd.gm_manager.isMineSeat(seat)) {\r\n                        let playerNode = this.getNodeBySeatId(seat.seatIndex);\r\n                        if (playerNode) {\r\n                            for (let j = 0; j < seat.handCards.length; j++) {\r\n                                //播放翻牌动画\r\n                                let fpNode = cc.instantiate(this.pre_card);\r\n                                fpNode.getChildByName('img').getComponent(cc.Sprite).spriteFrame = dd.img_manager.getPokerSpriteFrameById(seat.handCards[j]);\r\n                                fpNode.parent = playerNode.getChildByName('card' + (j + 3));\r\n                                fpNode.getComponent(cc.Animation).play();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 显示输赢金币动作\r\n     * @memberof PlayerLayer\r\n     */\r\n    showWinOrLost() {\r\n        let tabelData = dd.gm_manager.getTableData();\r\n        if (tabelData) {\r\n            for (let i = 0; i < tabelData.settlementOnceList.length; i++) {\r\n                let data = tabelData.settlementOnceList[i];\r\n                let playerNode = this.getNodeBySeatId(data.seatIndex);\r\n                if (playerNode) {\r\n                    this.showWinOrLostAction(data.winMoney, playerNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 显示输赢金币动作\r\n     * @param {number} money \r\n     * @memberof PlayerLayer\r\n     */\r\n    showWinOrLostAction(money: string, parent: cc.Node) {\r\n        let actionNode = new cc.Node();\r\n        let lbl = actionNode.addComponent(cc.Label);\r\n        lbl.fontSize = 40;\r\n        lbl.string = Number(money) > 0 ? ('+' + money) : money;\r\n        actionNode.parent = parent;\r\n        actionNode.setPosition(cc.p(0, 0));\r\n        actionNode.color = Number(money) > 0 ? cc.Color.RED : cc.Color.GREEN;\r\n        let move = cc.moveBy(1, cc.p(0, 100));\r\n        let callback = cc.callFunc((target: cc.Node) => {\r\n            target.destroy();\r\n        }, this);\r\n        actionNode.runAction(cc.sequence(move, callback));\r\n    }\r\n    /**\r\n     * 点击空位\r\n     * \r\n     * @param {cc.Event.EventTouch} event \r\n     * @memberof PlayerLayer\r\n     */\r\n    click_empty(event: cc.Event.EventTouch) {\r\n        if (dd.gm_manager.getMineSeat()) return;\r\n        dd.ui_manager.showLoading('正在申请坐下');\r\n        dd.mp_manager.playButton();\r\n        let seatIndex = Number(event.getCurrentTarget().parent.name) + dd.gm_manager.startIndex;\r\n        if (seatIndex > 8) {\r\n            seatIndex -= 9;\r\n        }\r\n        let obj = {\r\n            tableId: dd.gm_manager.getTableData().tableId,\r\n            seatIndex: seatIndex\r\n        }\r\n        let msg = JSON.stringify(obj);\r\n        dd.ws_manager.sendMsg(dd.protocol.DZPKER_SEAT_DOWN, msg, (flag: number, content?: any) => {\r\n            if (flag === 0) {\r\n                dd.ui_manager.showTip('入座成功!');\r\n            } else if (flag === -1) {\r\n                dd.ui_manager.showTip('坐下消息发送超时');\r\n            } else {\r\n                // dd.ui_manager.showTip(content);\r\n                dd.gm_manager.btnScript.click_buy();\r\n                dd.ui_manager.hideLoading();\r\n            }\r\n        });\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class PlayerUI extends cc.Component {\r\n    /**\r\n     * 头像\r\n     * \r\n     * @type {cc.Sprite}\r\n     * @memberof PlayerUI\r\n     */\r\n    @property(cc.Sprite)\r\n    headImg: cc.Sprite = null;\r\n    /**\r\n     * 名称\r\n     * @type {cc.Label}\r\n     * @memberof PlayerUI\r\n     */\r\n    @property(cc.Label)\r\n    lab_nick: cc.Label = null;\r\n    /**\r\n     * 携带金币\r\n     * @type {cc.Label}\r\n     * @memberof PlayerUI\r\n     */\r\n    @property(cc.Label)\r\n    lab_gold: cc.Label = null;\r\n    /**\r\n     * 下注金币\r\n     * @type {cc.Label}\r\n     * @memberof PlayerUI\r\n     */\r\n    @property(cc.Label)\r\n    lab_bet: cc.Label = null;\r\n    /**\r\n     * 牌型\r\n     * @type {cc.Label}\r\n     * @memberof PlayerUI\r\n     */\r\n    @property(cc.Label)\r\n    lab_cardType: cc.Label = null;\r\n    /**\r\n     * 倒计时\r\n     * @type {cc.Sprite}\r\n     * @memberof PlayerUI\r\n     */\r\n    @property(cc.Sprite)\r\n    timer: cc.Sprite = null;\r\n    /**\r\n     * 庄节点\r\n     * @type {cc.Node}\r\n     * @memberof PlayerUI\r\n     */\r\n    @property(cc.Node)\r\n    deal: cc.Node = null;\r\n    /**\r\n     * straddle节点\r\n     * @type {cc.Node}\r\n     * @memberof PlayerUI\r\n     */\r\n    @property(cc.Node)\r\n    straddle: cc.Node = null;\r\n    /**\r\n     * 下注积分节点\r\n     * @type {cc.Node}\r\n     * @memberof PlayerUI\r\n     */\r\n    @property(cc.Node)\r\n    board: cc.Node = null;\r\n    /**\r\n     * 小牌节点\r\n     * @type {cc.Node}\r\n     * @memberof PlayerUI\r\n     */\r\n    @property(cc.Node)\r\n    minCard: cc.Node = null;\r\n    /**\r\n     * 两张手牌的节点集合 0 、1为手牌   2、3为看牌时候翻牌的节点\r\n     * \r\n     * @type {cc.Node[]}\r\n     * @memberof PlayerUI\r\n     */\r\n    @property([cc.Node])\r\n    handCards: cc.Node[] = [];\r\n    /**\r\n     * straddle表态按钮\r\n     * \r\n     * @type {cc.Node}\r\n     * @memberof PlayerUI\r\n     */\r\n    @property(cc.Node)\r\n    btn_straddle: cc.Node = null;\r\n    /**\r\n     * 亮牌按钮\r\n     * @type {cc.Node}\r\n     * @memberof PlayerUI\r\n     */\r\n    @property(cc.Node)\r\n    btn_lookCard: cc.Node = null;\r\n    /**\r\n     * 当前节点绑定的座位对象\r\n     * \r\n     * @type {SeatData}\r\n     * @memberof PlayerUI\r\n     */\r\n    seatData: SeatData = null;\r\n    /**\r\n     * 当前表态已经用掉的时间\r\n     * \r\n     * @type {number}\r\n     * @memberof PlayerUI\r\n     */\r\n    timeCount: number = -1;\r\n    /**\r\n     * 是否已创建了手牌\r\n     * \r\n     * @type {boolean}\r\n     * @memberof PlayerUI\r\n     */\r\n    isCreateCard: boolean = false;\r\n\r\n    onLoad() {\r\n        cc.systemEvent.on('updatePlayerUI', this.updatePlayerUI, this);\r\n    }\r\n\r\n    updatePlayerUI() {\r\n        if (!this.seatData) return;\r\n        this.seatData = dd.gm_manager.getSeatDataByAccount(this.seatData.accountId);\r\n        let tableData = dd.gm_manager.getTableData();\r\n        if (this.seatData && tableData) {\r\n            //如果结算的时候,最后那个亮牌的人是自己\r\n            if (tableData.showCardSeatIndex !== -1 && tableData.showCardSeatIndex === this.seatData.seatIndex\r\n                && tableData.gameState === dd.game_state.STATE_TABLE_OVER_ONCE) {\r\n                this.btn_lookCard.active = true;\r\n                let seq = cc.sequence(cc.scaleTo(0.4, 0.8), cc.scaleTo(0.4, 0.9).easing(cc.easeElasticOut(0.4)));\r\n                let action = cc.repeatForever(seq);\r\n                this.btn_lookCard.runAction(action);\r\n            } else {\r\n                this.btn_lookCard.stopAllActions();\r\n                this.btn_lookCard.active = false;\r\n            }\r\n        } else {\r\n            this.btn_lookCard.stopAllActions();\r\n            this.btn_lookCard.active = false;\r\n        }\r\n    }\r\n\r\n    updateData(data: SeatData, index: number) {\r\n        this.seatData = data;\r\n        this.setLeftOrRight(this.straddle, 100, index);\r\n        this.setLeftOrRight(this.deal, 100, index);\r\n        this.setLeftOrRight(this.board, 100, index);\r\n        this.setCenter(this.minCard, -50, index);\r\n        this.setCenter(this.lab_bet.node, 55, index);\r\n    }\r\n    /**\r\n     * 设置距离左边或右边的距离\r\n     * \r\n     * @param {cc.Node} node \r\n     * @param {number} len \r\n     * @param {number} index \r\n     * @memberof PlayerUI\r\n     */\r\n    setLeftOrRight(node: cc.Node, len: number, index: number) {\r\n        let widget = node.getComponent(cc.Widget);\r\n        if (index > 4) {\r\n            widget.isAlignRight = true;\r\n            widget.isAbsoluteRight = true;\r\n            widget.isAlignLeft = false;\r\n            widget.right = 100;\r\n        } else {\r\n            widget.isAlignLeft = true;\r\n            widget.isAbsoluteLeft = true;\r\n            widget.isAlignRight = false;\r\n            widget.left = len;\r\n        }\r\n    }\r\n    /**\r\n     * 控制节点水平居中的偏移\r\n     * \r\n     * @param {cc.Node} node \r\n     * @param {number} len \r\n     * @param {number} index \r\n     * @memberof PlayerUI\r\n     */\r\n    setCenter(node: cc.Node, len: number, index: number) {\r\n        let widget = node.getComponent(cc.Widget);\r\n        widget.isAlignHorizontalCenter = true;\r\n        widget.isAbsoluteHorizontalCenter = true;\r\n        if (index > 4) {\r\n            widget.horizontalCenter = -len;\r\n        } else {\r\n            widget.horizontalCenter = len;\r\n        }\r\n    }\r\n\r\n    async update(dt: number) {\r\n        if (dd && dd.gm_manager) {\r\n\r\n            let tableData = dd.gm_manager.getTableData();\r\n            if (this.seatData && tableData) {\r\n                this.deal.active = (tableData.bankerIndex === this.seatData.seatIndex) ? true : false;\r\n\r\n                //这个玩家是否参加游戏\r\n                if (this.seatData.bGamed === 1) {\r\n                    switch (this.seatData.btResult) {\r\n                        case 1:\r\n                            this.lab_nick.string = '弃  牌';\r\n                            break;\r\n                        case 2:\r\n                            this.lab_nick.string = '过  牌';\r\n                            break;\r\n                        case 3:\r\n                            this.lab_nick.string = '跟  注';\r\n                            break;\r\n                        case 4:\r\n                            this.lab_nick.string = '加  注';\r\n                            break;\r\n                        case 5:\r\n                            this.lab_nick.string = 'ALL IN';\r\n                            break;\r\n                        default: {\r\n                            if (this.seatData.btState === 0 && this.seatData.seatIndex === tableData.btIndex\r\n                                && tableData.gameState < dd.game_state.STATE_TABLE_OVER_ONCE) {\r\n                                this.lab_nick.string = '思考中...';\r\n                            } else {\r\n                                this.lab_nick.string = dd.utils.getStringBySize(this.seatData.nick, 12);\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.lab_nick.string = '等待下局';\r\n                }\r\n                //如果在庄家定大小盲阶段\r\n                if (tableData.gameState === dd.game_state.STATE_TABLE_BETBLIND) {\r\n                    if (this.seatData.straddleFlag === 1) {\r\n                        this.lab_nick.string = 'straddle';\r\n                    } else {\r\n                        this.lab_nick.string = dd.utils.getStringBySize(this.seatData.nick, 12);\r\n                    }\r\n                }\r\n\r\n                this.lab_gold.string = this.seatData.currMoney;\r\n                this.board.active = Number(this.seatData.betMoney) > 0 ? true : false;\r\n                if (this.board.active) {\r\n                    this.lab_bet.string = this.seatData.betMoney;\r\n                }\r\n                this.straddle.active = this.seatData.straddleFlag === 1 ? true : false;\r\n                //在订庄家大小盲注的时候，才显示 straddle\r\n                if (tableData.gameState === dd.game_state.STATE_TABLE_BETBLIND) {\r\n                    this.btn_straddle.active = (this.seatData.straddle === 1) && dd.gm_manager.isMineSeat(this.seatData) ? true : false;\r\n                } else {\r\n                    this.btn_straddle.active = false;\r\n                }\r\n\r\n                if (this.seatData.btResult === 1 || dd.gm_manager.isMineSeat(this.seatData) || tableData.gameState < dd.game_state.STATE_TABLE_OUTCARD_1) {\r\n                    //自己和弃牌的人不显示小牌\r\n                    this.minCard.active = false;\r\n\r\n                    //自己和别人，小于发牌的阶段，都不显示牌，不管是亮牌还是手牌\r\n                    if (tableData.gameState < dd.game_state.STATE_TABLE_OUTCARD_1) {\r\n                        this.handCards.forEach((card: cc.Node) => {\r\n                            if (card.childrenCount > 0) {\r\n                                card.destroyAllChildren();\r\n                            }\r\n                        }, this);\r\n                    }\r\n                } else {\r\n                    this.minCard.active = true;\r\n                }\r\n                //判断当前是否该作为表态(排除straddle)\r\n                if (this.seatData.btState === 0 && tableData.btIndex === this.seatData.seatIndex) {\r\n                    if (tableData.gameState === dd.game_state.STATE_TABLE_BET_BT_1\r\n                        || tableData.gameState === dd.game_state.STATE_TABLE_BET_BT_2\r\n                        || tableData.gameState === dd.game_state.STATE_TABLE_BET_BT_3\r\n                        || tableData.gameState === dd.game_state.STATE_TABLE_BET_BT_4) {\r\n                        if (this.timeCount === -1) {\r\n                            //表态已经用了的时间\r\n                            this.timeCount = Number(tableData.actTotalTime) - (Number(tableData.actTime) - Number(tableData.svrTime));\r\n                            if (this.timeCount < 0) {\r\n                                this.timeCount = 0;\r\n                            }\r\n                            if (this.timeCount > Number(tableData.actTotalTime)) {\r\n                                this.timeCount = Number(tableData.actTotalTime);\r\n                            }\r\n                        }\r\n                        this.timeCount += dt * 1000;\r\n                        if (this.timeCount > Number(tableData.actTotalTime)) {\r\n                            this.timeCount = Number(tableData.actTotalTime);\r\n                        }\r\n                        this.timer.fillRange = -this.timeCount / Number(tableData.actTotalTime);\r\n                        //播放倒计时\r\n                        if (this.timer.fillRange === -0.8) {\r\n                            dd.mp_manager.playTime();\r\n                        }\r\n                    } else {\r\n                        this.timeCount = -1;\r\n                        this.timer.fillRange = 0;\r\n                    }\r\n                } else {\r\n                    this.timeCount = -1;\r\n                    this.timer.fillRange = 0;\r\n                }\r\n\r\n                if (dd.gm_manager.isMineSeat(this.seatData)) {\r\n                    if (tableData.gameState > dd.game_state.STATE_TABLE_OUTCARD_1 && this.seatData.btResult !== 1) {\r\n                        this.lab_cardType.string = dd.gm_manager.getCardType(this.seatData.cardType);\r\n                    } else {\r\n                        this.lab_cardType.string = '';\r\n                    }\r\n                    if (tableData.gameState > dd.game_state.STATE_TABLE_OUTCARD_1 && !dd.gm_manager.isCreateMineCard && this.seatData.btResult !== 1) {\r\n                        dd.gm_manager.isCreateMineCard = true;\r\n                        this.seatData.handCards.forEach((id: number, index: number) => {\r\n                            let card = this.handCards[index];\r\n                            if (card.childrenCount < 1) {\r\n                                let cardNode = new cc.Node();\r\n                                cardNode.addComponent(cc.Sprite).spriteFrame = dd.img_manager.getPokerSpriteFrameById(id);\r\n                                cardNode.parent = card;\r\n                            }\r\n                        }, this);\r\n                    }\r\n                    if (tableData.gameState < dd.game_state.STATE_TABLE_OUTCARD_1 || this.seatData.btResult === 1) {\r\n                        if (dd.gm_manager.isCreateMineCard) {\r\n                            dd.gm_manager.isCreateMineCard = false;\r\n                            this.handCards.forEach((card: cc.Node) => {\r\n                                if (card.childrenCount > 0) {\r\n                                    card.destroyAllChildren();\r\n                                }\r\n                            }, this);\r\n                        }\r\n                    }\r\n                    //如果不为 结算阶段，不显示亮牌按钮\r\n                    if (tableData.gameState !== dd.game_state.STATE_TABLE_OVER_ONCE) {\r\n                        this.btn_lookCard.stopAllActions();\r\n                        this.btn_lookCard.active = false;\r\n                    }\r\n                } else {\r\n                    this.lab_cardType.string = '';\r\n                    this.btn_lookCard.active = false;\r\n                }\r\n                //显示头像的部分，因为是异步，所以要放到最后\r\n                this.headImg.spriteFrame = await dd.img_manager.loadURLImage(this.seatData.headImg);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 亮牌按钮\r\n     * @memberof PlayerUI\r\n     */\r\n    click_btn_lookCard() {\r\n        dd.mp_manager.playButton();\r\n        this.btn_lookCard.active = false;\r\n        let obj = {\r\n            tableId: dd.gm_manager.getTableData().tableId\r\n        };\r\n        let msg = JSON.stringify(obj);\r\n        dd.ws_manager.sendMsg(dd.protocol.DZPKER_TABLE_SHOW_CARD_BT, msg);\r\n    }\r\n    /**\r\n     * 闭眼盲注表态\r\n     * @memberof PlayerUI\r\n     */\r\n    click_btn_straddle() {\r\n        dd.mp_manager.playButton();\r\n        this.btn_lookCard.active = false;\r\n        let obj = {\r\n            tableId: dd.gm_manager.getTableData().tableId,\r\n            seatIndex: this.seatData.seatIndex\r\n        };\r\n        let msg = JSON.stringify(obj);\r\n        dd.ws_manager.sendMsg(dd.protocol.DZPKER_STRADDLE_BT, msg);\r\n    }\r\n}\r\n","(function (root) {\n\n  // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var setTimeoutFunc = setTimeout;\n\n  function noop() { }\n\n  // Polyfill for Function.prototype.bind\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n\n  function Promise(fn) {\n    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n      return;\n    }\n    self._handled = true;\n    Promise._immediateFn(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n      var ret;\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      Promise._immediateFn(function () {\n        if (!self._handled) {\n          Promise._unhandledRejectionFn(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n    self._deferreds = null;\n  }\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n  function doResolve(fn, self) {\n    var done = false;\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var prom = new (this.constructor)(noop);\n\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.all = function (arr) {\n    var args = Array.prototype.slice.call(arr);\n\n    return new Promise(function (resolve, reject) {\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n          args[i] = val;\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  };\n\n  // Use polyfill for setImmediate for performance gains\n  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||\n    function (fn) {\n      setTimeoutFunc(fn, 0);\n    };\n\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n\n  /**\n   * Set the immediate function to execute callbacks\n   * @param fn {function} Function to execute\n   * @deprecated\n   */\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\n    Promise._immediateFn = fn;\n  };\n\n  /**\n   * Change the function to execute on unhandled rejection\n   * @param {function} fn Function to execute on unhandled rejection\n   * @deprecated\n   */\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n    Promise._unhandledRejectionFn = fn;\n  };\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Promise;\n  } else if (!root.Promise) {\n    root.Promise = Promise;\n  }\n})(window);\n","/**\n * 通信协议枚举\n *\n * @export\n * @enum {number}\n */\nexport enum Protocol {\n\n    /**\n     * 心跳消息\n     */\n    ACCOUNT_HEART = 101,\n\n    /**\n     * 帐号注册\n     * account [String] 帐号名称\n     * password [String] 密码\n     * headImg [String] 头像\n     * nick [String] 呢称\n     * sex [int] 性别\n     */\n    ACCOUNT_REGISTER = 102,\n\n    /**\n     * 帐号密码方式登录\n     * account [String] 帐号名称\n     * password [String] 密码\n     */\n    ACCOUNT_LOGIN_PASSWORD = 103,\n\n    /**\n     * 游客登录\n     * uuid [String] 微信或游客唯一uuid\n     */\n    ACCOUNT_LOGIN_TOURIST = 104,\n\n    /**\n     * 微信登录\n     * uuid [String] 微信或游客唯一uuid\n     * headImg [String] 头像\n     * nick [String] 呢称\n     * sex [int] 性别\n     */\n    ACCOUNT_LOGIN_WX = 105,\n\n    /**\n     * 帐号Id登录\n     * accountId [String] 数据库唯 一Id\n     */\n    ACCOUNT_LOGIN_ACCOUNTID = 106,\n\n    /**\n     * 登出\n     * accountId [String] 帐号Id\n     */\n    ACCOUNT_LOGIN_OUT = 107,\n\n    /**\n     * 通过帐号获取角色信息\n     * accountId [String] 帐号Id\n     */\n    ACCOUNT_ROLE_ACCOUNTID = 108,\n\n    /**\n     * 通过明星号获取角色信息\n     * starNO [String] 明星号\n     */\n    ACCOUNT_ROLE_STARNO = 109,\n\n    /**\n     * 客户端上报与服务器ping值\n     * ping [int] ping数值\n     */\n    ACCOUNT_PING = 110,\n\n    /**\n     * 帐号实名认证\n     * name [String] 姓名\n     * cardId [String] 身份证\n     */\n    ACCOUNT_AUTHENTICATION = 111,\n\n    /**\n     * 手机绑定\n     * phone [String] 手机号\n     * vaildCode [String] 验证码\n     */\n    ACCOUNT_PHONE_BIND = 112,\n\n    /**\n     * 获取手机短信效验码\n     * phone [String] 手机号\n     */\n    ACCOUNT_PHONE_GET_SMSCODE = 113,\n\n    /**\n     * 赠送房卡\n     * givePlayer [String] 赠送玩家StarNO\n     * giveNum [int] 赠送数量\n     */\n    WALLET_ROOMCARD_GIVE = 201,\n\n    /**\n     * 获取房卡赠送记录\n     */\n    WALLET_ROOMCARD_RECORD = 202,\n\n    /**\n     * 获取所有邮件列表\n     */\n    MAIL_GET_MAIL_LIST = 301,\n\n    /**\n     * 查看邮件\n     * mailId [int] 邮件唯一Id\n     */\n    MAIL_VIEW_MAIL_ITEM = 302,\n\n    /**\n     * 发送聊天信息\n     * tableId [int] 桌子Id\n     * type [int] 聊天内容类型\n     * content [int] 聊天内容Id\n     */\n    CHAT_SEND = 501,\n\n    /**\n     * 获取活动信息列表\n     */\n    ACTIVITY_GET_ACTIVITY_LIST = 601,\n\n    /**\n     * 获取红点数据\n     * accountId [String] 帐号Id\n     */\n    HOTPROMPT_GET_HOTDATA = 701,\n\n    /**\n     * 获取商城信息列表\n     */\n    MALL_GET_MALL_LIST = 801,\n\n    /**\n     * 购买商城物品\n     * itemId [int] 物品配置Id\n     */\n    MALL_BUY_ITEM = 802,\n\n    /**\n     * 充值指定数量金币\n     * rmb [int] 人民币数量\n     * goldmoney [int] 金币数量\n     */\n    MALL_CHARGE_GOLDMONEY = 803,\n\n    /**\n     * 充值指定数量钻石\n     * rmb [int] 人民币数量\n     * diamond [int] 钻石数量\n     */\n    MALL_CHARGE_DIAMOND = 804,\n\n    /**\n     * 查询战绩\n     * type [int] 查询类型(1=个人,2=俱乐部)\n     * query [String] 查询参数(个人=玩家帐号Id,俱乐部=俱乐部Id)\n     */\n    REPLAY_QUERY_RECORD = 1001,\n\n    /**\n     * 查询详细战绩数据\n     * tableId [int] 桌子Id\n     */\n    REPLAY_QUERY_DETAILED_RECORD = 1002,\n\n    /**\n     * 获取桌子创建配置\n     */\n    DZPKER_TABLE_GET_CFG = 1201,\n\n    /**\n     * 创建桌子\n     * tableName [String] 桌子名称\n     * small [int] 小盲注\n     * big [int] 大盲注\n     * minJoin [int] 最小座下\n     * vaildTime [int] 游戏时长(单位:分钟)\n     * insurance [int] 是否开启保险(0=未开,1=开启)\n     * straddle [int] 是否开启闭眼盲注(0=未开,1=开启)\n     * buyMax [int] 单次积分购买上限\n     */\n    DZPKER_TABLE_CREATE = 1202,\n\n    /**\n     * 房主点击运行桌子\n     * tableId [int] 桌子Id\n     */\n    DZPKER_TABLE_START_RUN = 1203,\n\n    /**\n     * 加入指定桌子\n     * tableId [int] 桌子Id\n     */\n    DZPKER_TABLE_JOIN = 1204,\n\n    /**\n     * 退出指定桌子\n     * tableId [int] 桌子Id\n     */\n    DZPKER_TABLE_LEAVE = 1205,\n\n    /**\n     * 座下指定位置\n     * tableId [int] 桌子Id\n     * seatIndex [int] 座位下标\n     */\n    DZPKER_SEAT_DOWN = 1206,\n\n    /**\n     * 从座位上站起\n     * tableId [int] 桌子Id\n     * seatIndex [int] 座位下标\n     */\n    DZPKER_SEAT_UP = 1207,\n\n    /**\n     * 购买积分\n     * tableId [int] 桌子Id\n     * chipNum [int] 积分数量\n     */\n    DZPKER_BUY_CHIP = 1208,\n\n    /**\n     * 正常游戏表态\n     * tableId [int] 桌子Id\n     * bt [int] 表态(1=弃牌,2=过牌,3=跟注,4=加注,5=全下)\n     * btVal [int] 表态值\n     */\n    DZPKER_TABLE_BT = 1209,\n\n    /**\n     * 房主获取积分购买申请列表\n     */\n    DZPKER_QUERY_BUYCHIP_LIST = 1210,\n\n    /**\n     * 房主处理积分购买申请条目\n     * itemId [String] 购买申请Id\n     * bt [int] 处理表态(1=同意,2=拒绝)\n     */\n    DZPKER_TRANS_BUYCHIP_ITEM = 1211,\n\n    /**\n     * 闭眼盲注表态\n     * tableId [int] 桌子Id\n     * seatIndex [int] 座位下标\n     */\n    DZPKER_STRADDLE_BT = 1212,\n\n    /**\n     * 获取参与过游戏的未解散的桌子\n     */\n    DZPKER_GET_FIGHTED_TABLE_LIST = 1213,\n\n    /**\n     * 获取桌子上一局游戏信息\n     * tableId [int] 桌子Id\n     */\n    DZPKER_TABLE_PREV_FIGHT = 1214,\n\n    /**\n     * 获取桌子所有玩家数据信息\n     * tableId [int] 桌子Id\n     */\n    DZPKER_TABLE_PLAYER_LIST = 1215,\n\n    /**\n     * 获取桌子个人赢亏数据\n     * tableId [int] 桌子Id\n     */\n    DZPKER_TABLE_PLAYER_ONCE_WINSCORE = 1216,\n\n    /**\n     * 购买保险\n     * tableId [int] 桌子Id\n     * bt [int] 0=不买,1=购买\n     * buyCards [[I] 购买的牌数据\n     * buyMoney [int] 购买积分\n     * payMoney [int] 赔付积分\n     */\n    DZPKER_TABLE_BUY_INSURANCE = 1217,\n\n    /**\n     * 获取生涯历史数据\n     */\n    DZPKER_TABLE_GET_CAREE_INFO = 1218,\n\n    /**\n     * 结算后亮牌表态\n     * tableId [int] 桌子Id\n     */\n    DZPKER_TABLE_SHOW_CARD_BT = 1219,\n\n    /**\n     * 获取指定桌子数据\n     * tableId [int] 桌子Id\n     */\n    DZPKER_TABLE_GET_TABLE_INFO = 1220,\n\n    /**\n     * 获取指定桌子所有参与过游戏的玩家输赢明细\n     * recordId [String] 桌子记录Id\n     */\n    DZPKER_TABLE_GET_ALL_WIN_SCORE_INFO = 1221,\n\n    /**\n     * 推送消息(玩家被踢下线)\n     */\n    ACCOUNT_KICK_OFFLINE_NOTIFY = 10001,\n\n    /**\n     * 推送消息(钱包数据变化)\n     */\n    WALLET_WALLET_NOTIFY = 20001,\n\n    /**\n     * 推送消息(公告数据)\n     */\n    MESSAGE_NOTICE_NOTIFY = 40001,\n\n    /**\n     * 推送消息(聊天信息通知)\n     */\n    CHAT_SEND_NOTIFY = 50001,\n\n    /**\n     * 推送消息(红点提示数据)\n     */\n    HOTPROMPT_HOTDATA_NOTIFY = 70001,\n\n    /**\n     * 购买或充值成功通知\n     */\n    MALL_CHARGE_NOTIFY = 80001,\n\n    /**\n     * 推送消息(游戏桌子状态变化通知)\n     */\n    DZPKER_TABLE_STATE_NOTIFY = 120001,\n\n    /**\n     * 推送消息(游戏座位数据变化通知)\n     */\n    DZPKER_SEAT_STATE_NOTIFY = 120002,\n\n    /**\n     * 推送消息(游戏桌子表态通知)\n     */\n    DZPKER_TABLE_BT_NOTIFY = 120003,\n\n    /**\n     * 推送消息(游戏桌子总结算数据通知)\n     */\n    DZPKER_TABLE_SETTLEMENT_NOTIFY = 120004,\n\n    /**\n     * 推送消息(保险结算结果数据通知)\n     */\n    DZPKER_TABLE_SETTLEMENT_INSURANCE_NOTIFY = 120005,\n\n    /**\n     * 推送消息(积分购买成功通知)\n     */\n    DZPKER_TABLE_BUY_CHIP_SUCESS_NOTIFY = 120006,\n\n    /**\n     * 推送消息(玩家亮牌通知)\n     */\n    DZPKER_TABLE_SHOW_CARD_NOTIFY = 120007,\n    /**\n     * 推送消息(闭眼盲注表态通知)\n     */\n    DZPKER_TABLE_STRADDL_BT_NOTIFY = 120008,\n\n    /**\n     * 推送消息(玩家从座位上被踢起通知)\n     */\n    DZPKER_TABLE_SEAT_KICK_NOTIFY = 120009\n}\n\n\n/**\n * 游戏状态\n * \n * @enum {number}\n */\nexport enum GameState {\n    /**\n     * 空闲状态\n     */\n    STATE_TABLE_IDLE = 0,\n    /**\n     * 准备状态\n     */\n    STATE_TABLE_READY = 1,\n    /**\n     * 定庄家下大小盲注\n     */\n    STATE_TABLE_BETBLIND = 2,\n    /**\n     * 第一轮发手牌\n     */\n    STATE_TABLE_OUTCARD_1 = 3,\n    /**\n     * 第一轮下注表态\n     */\n    STATE_TABLE_BET_BT_1 = 4,\n    /**\n     * 第二轮发三张公用牌\n     */\n    STATE_TABLE_OUTCARD_2 = 5,\n    /**\n     * 第二轮下注表态\n     */\n    STATE_TABLE_BET_BT_2 = 6,\n    /**\n     * 第三轮发一张公用牌\n     */\n    STATE_TABLE_OUTCARD_3 = 7,\n    /**\n     * 第三轮下注表态\n     */\n    STATE_TABLE_BET_BT_3 = 8,\n    /**\n     * 第四轮发一张公用牌\n     */\n    STATE_TABLE_OUTCARD_4 = 9,\n    /**\n     * 第四轮下注表态\n     */\n    STATE_TABLE_BET_BT_4 = 10,\n    /**\n     * 保险购买状态\n     */\n    STATE_TABLE_BUY_INSURANCE = 11,\n    /**\n     * 单局结算\n     */\n    STATE_TABLE_OVER_ONCE = 12,\n    /**\n     * 总结算\n     */\n    STATE_TABLE_OVER_ALL = 13,\n    /**\n     * 新一轮积分结算\n     */\n    STATE_TABLE_NEW_ROUND_BET = 14\n}\n\nexport enum CardType {\n    /**\n     * 单牌\n     */\n    TYPE_CARD_NONE = 0,\n    /**\n     * 一对\n     */\n    TYPE_CARD_ONE_DOUBLE = 1,\n    /**\n     * 两对\n     */\n    TYPE_CARD_TWO_DOUBLE = 2,\n    /**\n     * 三条\n     */\n    TYPE_CARD_SAME_THREE = 3,\n    /**\n     * 顺子\n     */\n    TYPE_CARD_SHUN = 4,\n    /**\n     * 同花\n     */\n    TYPE_CARD_SAME_SUIT = 5,\n    /**\n     * 葫芦(3条+1对)\n     */\n    TYPE_CARD_GOURD = 6,\n    /**\n     * 四条\n     */\n    TYPE_CARD_SAME_FOUR = 7,\n    /**\n     * 同花顺\n     */\n    TYPE_CARD_SAME_SUIT_SHUN = 8,\n    /**\n     * 皇家同花顺\n     */\n    TYPE_CARD_GOLD_SAME_SUIT_SHUN = 9\n}\n/**\n * 扑克花色\n * \n * @enum {number}\n */\nexport enum Suit {\n    /**\n     * 黑桃\n     */\n    TYPE_SUIT_BACK = 0,\n    /**\n     * 红桃\n     */\n    TYPE_SUIT_RED = 1,\n    /**\n     * 梅花\n     */\n    TYPE_SUIT_CLUB = 2,\n    /**\n     * 方片\n     */\n    TYPE_SUIT_BLOCK = 3,\n}\n\n/**\n * 红点消息类型\n * \n * @enum {number}\n */\nexport enum HotKey {\n    /**\n     * 邮件\n     */\n    HOT_KEY_MAIL = 1,\n    /**\n     * 房主订单\n     */\n    HOT_KEY_ORDER = 2\n}","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class Record extends cc.Component {\r\n    /**\r\n     * 房主头像\r\n     * \r\n     * @type {cc.Sprite}\r\n     * @memberof MineItem\r\n     */\r\n    @property(cc.Sprite)\r\n    head: cc.Sprite = null;\r\n    /**\r\n     * 房间名称\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof Record\r\n     */\r\n    @property(cc.Label)\r\n    room: cc.Label = null;\r\n    /**\r\n     * 房主昵称\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof Record\r\n     */\r\n    @property(cc.Label)\r\n    nick: cc.Label = null;\r\n    /**\r\n     * 玩家输赢值\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof Record\r\n     */\r\n    @property(cc.Label)\r\n    gold: cc.Label = null;\r\n    /**\r\n     * 结算时间\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof Record\r\n     */\r\n    @property(cc.Label)\r\n    time: cc.Label = null;\r\n\r\n    _data: CareerHistory = null;\r\n    _cb: any = null;\r\n    onLoad() {\r\n        this.node.on(cc.Node.EventType.TOUCH_END, (event: cc.Event.EventTouch) => {\r\n            if (this._cb) {\r\n                this._cb(this._data);\r\n            }\r\n        }, this);\r\n    }\r\n    async updateItem(data: CareerHistory, callback?: Function) {\r\n        if (data) {\r\n            this._data = data;\r\n            this._cb = callback;\r\n            this.nick.string = dd.utils.getStringBySize(data.nick, 12);\r\n            this.time.string = dd.utils.getDateStringByTimestamp(data.recordTime);\r\n            this.gold.string = data.winMoney;\r\n            this.room.string = data.tableName;\r\n            this.head.spriteFrame = await dd.img_manager.loadURLImage(data.headImg);\r\n        }\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class ReviewItem extends cc.Component {\r\n    /**\r\n     * 头像\r\n     * \r\n     * @type {cc.Sprite}\r\n     * @memberof ReviewItem\r\n     */\r\n    @property(cc.Sprite)\r\n    headImg: cc.Sprite = null;\r\n    /**\r\n     * 手牌1\r\n     * \r\n     * @type {cc.Sprite}\r\n     * @memberof ReviewItem\r\n     */\r\n    @property(cc.Sprite)\r\n    card1: cc.Sprite = null;\r\n    /**\r\n     * 手牌2\r\n     * \r\n     * @type {cc.Sprite}\r\n     * @memberof ReviewItem\r\n     */\r\n    @property(cc.Sprite)\r\n    card2: cc.Sprite = null;\r\n    /**\r\n     * 昵称\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof ReviewItem\r\n     */\r\n    @property(cc.Label)\r\n    nick: cc.Label = null;\r\n    /**\r\n     * 输赢量\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof ReviewItem\r\n     */\r\n    @property(cc.Label)\r\n    gold: cc.Label = null;\r\n\r\n    async init(data: TablePrevFightRecordItem) {\r\n        this.nick.string = dd.utils.getStringBySize(data.nick, 12);\r\n        this.gold.string = data.score;\r\n        //如果是自己\r\n        if (data.starNO === dd.ud_manager.account_mine.roleAttribVo.starNO) {\r\n            if (data.handCards && data.handCards.length > 0) {\r\n                this.card1.spriteFrame = dd.img_manager.getPokerSpriteFrameById(data.handCards[0]);\r\n                this.card2.spriteFrame = dd.img_manager.getPokerSpriteFrameById(data.handCards[1]);\r\n            } else {\r\n                this.card1.spriteFrame = dd.img_manager.getPokerSpriteFrameById(0);\r\n                this.card2.spriteFrame = dd.img_manager.getPokerSpriteFrameById(0);\r\n            }\r\n        } else {\r\n            if (data.handCards && data.handCards.length > 0 && data.showCardState === 1) {\r\n                this.card1.spriteFrame = dd.img_manager.getPokerSpriteFrameById(data.handCards[0]);\r\n                this.card2.spriteFrame = dd.img_manager.getPokerSpriteFrameById(data.handCards[1]);\r\n            } else {\r\n                this.card1.spriteFrame = dd.img_manager.getPokerSpriteFrameById(0);\r\n                this.card2.spriteFrame = dd.img_manager.getPokerSpriteFrameById(0);\r\n            }\r\n        }\r\n        this.headImg.spriteFrame = await dd.img_manager.loadURLImage(data.headImg);\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SVScript extends cc.Component {\r\n    /**\r\n     * item的预制,需要绑定item脚本,且和prefab同名\r\n     * \r\n     * @type {cc.Prefab}\r\n     * @memberof SVScript\r\n     */\r\n    @property(cc.Prefab)\r\n    itemPrefab: cc.Prefab = null;\r\n    /**\r\n     * 两个item之间的间隔\r\n     * \r\n     * @type {number}\r\n     * @memberof SVScript\r\n     */\r\n    @property(cc.Integer)\r\n    spacing: number = 0;\r\n    /**\r\n     * 刷新间隔\r\n     * \r\n     * @type {number}\r\n     * @memberof SVScript\r\n     */\r\n    @property(cc.Integer)\r\n    updateInterval: number = 0.2;\r\n    /**\r\n     * 存放item的数组\r\n     * \r\n     * @type {cc.Node[]}\r\n     * @memberof SVScript\r\n     */\r\n    itemNodes: cc.Node[] = [];\r\n    /**\r\n     * 用于创建item的数据集合\r\n     * \r\n     * @type {any[]}\r\n     * @memberof SVScript\r\n     */\r\n    datas: any[] = null;\r\n    /**\r\n     * item的尺寸\r\n     * \r\n     * @type {cc.Size}\r\n     * @memberof SVScript\r\n     */\r\n    itemSize: cc.Size = cc.size(0, 0);\r\n    /**\r\n     * item的回调函数\r\n     * \r\n     * @type {Function}\r\n     * @memberof SVScript\r\n     */\r\n    callback: Function = null;\r\n    /**\r\n     * 计时器时间\r\n     * \r\n     * @type {number}\r\n     * @memberof SVScript\r\n     */\r\n    updateTimer: number = 0;\r\n    /**\r\n     * 上一次content坐标\r\n     * \r\n     * @type {number}\r\n     * @memberof SVScript\r\n     */\r\n    lastContentPosY: number = 0;\r\n    /**\r\n     * scrollview组件\r\n     * \r\n     * @type {cc.ScrollView}\r\n     * @memberof SVScript\r\n     */\r\n    sv: cc.ScrollView = null;\r\n    /**\r\n     * 实例化滚动控件\r\n     * \r\n     * @param {any[]} dataList 数据集合\r\n\r\n     * @param {Function} cb 回调函数，可用于点击item回调，item通知sv数据变化等\r\n     * @memberof SVScript\r\n     */\r\n    init(dataList: any[], cb?: Function) {\r\n        if (!dataList || dataList.length < 1) return;\r\n        if (!this.itemPrefab) return;\r\n        this.sv = this.node.getComponent(cc.ScrollView);\r\n        this.itemNodes.length = 0;\r\n        if (this.updateInterval < 0) this.updateInterval = 0.2;\r\n        this.datas = dataList;\r\n        this.callback = cb;\r\n        let tempItem = cc.instantiate(this.itemPrefab);\r\n        this.itemSize = tempItem.getContentSize();\r\n        tempItem.destroy();\r\n        this.sv.content.height = this.datas.length * (this.itemSize.height + this.spacing);\r\n        let count = Math.ceil(this.node.height / (this.itemSize.height + this.spacing)) * 2;\r\n        for (let i = 0; i < count; i++) {\r\n            if (i < this.datas.length) {\r\n                let itemNode = cc.instantiate(this.itemPrefab);\r\n                itemNode.tag = i;\r\n                itemNode.setPosition(0, -itemNode.height * (0.5 + i) - this.spacing * (i + 1));\r\n                itemNode.getComponent(this.itemPrefab.name).updateItem(this.datas[i], this.callback);\r\n                this.sv.content.addChild(itemNode);\r\n                this.itemNodes.push(itemNode);\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    //获取item以滚动控件为坐标系的坐标\r\n    getPositionInView(item) {\r\n        let worldPos = item.parent.convertToWorldSpaceAR(item.position);\r\n        let viewPos = this.sv.content.parent.convertToNodeSpaceAR(worldPos);\r\n        return viewPos;\r\n    }\r\n\r\n    update(dt: number) {\r\n        if (!this.datas || this.datas.length < 1) return;\r\n        this.updateTimer += dt;\r\n        if (this.updateTimer < this.updateInterval) return;\r\n        this.updateTimer = 0;\r\n        //判断滑动方向。\r\n        let diff = this.sv.content.y - this.lastContentPosY;\r\n        if (diff === 0) return;\r\n        let offset = (this.itemSize.height + this.spacing) * this.itemNodes.length;\r\n        this.itemNodes.forEach((item) => {\r\n            let viewPos = this.getPositionInView(item);\r\n            let script = item.getComponent(this.itemPrefab.name);\r\n            if (diff < 0) {//向下滑动\r\n                if (viewPos.y < -offset / 2 && item.y + offset < 0) {\r\n                    item.setPositionY(item.y + offset);\r\n                    item.tag = item.tag - this.itemNodes.length;\r\n                    script.updateItem(this.datas[item.tag], this.callback);\r\n                }\r\n            } else {//向上滑动\r\n                if (viewPos.y > offset / 2 && item.y - offset > -this.sv.content.height) {\r\n                    item.setPositionY(item.y - offset);\r\n                    item.tag = item.tag + this.itemNodes.length;\r\n                    script.updateItem(this.datas[item.tag], this.callback);\r\n                }\r\n            }\r\n        }, this);\r\n        // 更新上次记录的Y坐标\r\n        this.lastContentPosY = this.sv.content.y;\r\n    }\r\n}\r\n","import * as dd from './../../Modules/ModuleManager';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Safe extends cc.Component {\r\n    @property(cc.Label)\r\n    lbl_time: cc.Label = null;\r\n    /**\r\n     * allin玩家的节点列表\r\n     * @type {cc.Node[]}\r\n     * @memberof Safe\r\n     */\r\n    @property([cc.Node])\r\n    allin_node_list: cc.Node[] = [];\r\n\r\n    /**\r\n     * 公共牌的节点列表\r\n     * @type {cc.Node[]}\r\n     * @memberof Safe\r\n     */\r\n    @property([cc.Node])\r\n    pCard_node_list: cc.Node[] = [];\r\n    /**\r\n     * allin玩家的自己颜色\r\n     * @type {cc.Color[]}\r\n     * @memberof Safe\r\n     */\r\n    @property([cc.Color])\r\n    allin_color_list: cc.Color[] = [];\r\n    /**\r\n     * 已选择\r\n     * @type {cc.Label}\r\n     * @memberof Safe\r\n     */\r\n    @property(cc.Label)\r\n    lbl_choose: cc.Label = null;\r\n    /**\r\n     * 赔率\r\n     * @type {cc.Label}\r\n     * @memberof Safe\r\n     */\r\n    @property(cc.Label)\r\n    lbl_odds: cc.Label = null;\r\n    /**\r\n     * 主池\r\n     * @type {cc.Label}\r\n     * @memberof Safe\r\n     */\r\n    @property(cc.Label)\r\n    lbl_pool: cc.Label = null;\r\n    /**\r\n     * 投保额\r\n     * @type {cc.Label}\r\n     * @memberof Safe\r\n     */\r\n    @property(cc.Label)\r\n    lbl_tbe: cc.Label = null;\r\n    /**\r\n     * 押注\r\n     * @type {cc.Label}\r\n     * @memberof Safe\r\n     */\r\n    @property(cc.Label)\r\n    lbl_bet: cc.Label = null;\r\n    /**\r\n     * 赔付额\r\n     * @type {cc.Label}\r\n     * @memberof Safe\r\n     */\r\n    @property(cc.Label)\r\n    lbl_pfe: cc.Label = null;\r\n    /**\r\n     * 进度条\r\n     * @type {cc.ProgressBar}\r\n     * @memberof Safe\r\n     */\r\n    @property(cc.ProgressBar)\r\n    safe_pro: cc.ProgressBar = null;\r\n    /**\r\n     * 选择所有\r\n     * @type {cc.Toggle}\r\n     * @memberof Safe\r\n     */\r\n    @property(cc.Toggle)\r\n    toggle_choose_all: cc.Toggle = null;\r\n    /**\r\n     * 反超牌的牌的父节点\r\n     * @type {cc.Node}\r\n     * @memberof Safe\r\n     */\r\n    @property(cc.ScrollView)\r\n    fcp_svNode: cc.ScrollView = null;\r\n    /**\r\n     * 非自己购买保险\r\n     * @type {cc.RichText}\r\n     * @memberof Safe\r\n     */\r\n    @property(cc.RichText)\r\n    lbl_other: cc.RichText = null;\r\n    /**\r\n     * 如果是自己购买保险\r\n     * @type {cc.Node}\r\n     * @memberof Safe\r\n     */\r\n    @property(cc.Node)\r\n    mineNode: cc.Node = null;\r\n    /**\r\n     * 如果是自己购买保险，反超牌的节点\r\n     * @type {cc.Node}\r\n     * @memberof Safe\r\n     */\r\n    @property(cc.Node)\r\n    fcp_mineNode: cc.Node = null;\r\n    /**\r\n     * 亮图\r\n     * @type {cc.SpriteFrame}\r\n     * @memberof Safe\r\n     */\r\n    @property(cc.SpriteFrame)\r\n    imgLight: cc.SpriteFrame = null;\r\n\r\n    /**\r\n     * 牌节点预设\r\n     * @type {cc.Prefab}\r\n     * @memberof Safe\r\n     */\r\n    @property(cc.Prefab)\r\n    safe_card_prefab: cc.Prefab = null;\r\n    /**\r\n     * allin玩家的预设\r\n     * @type {cc.Prefab}\r\n     * @memberof Safe\r\n     */\r\n    @property(cc.Prefab)\r\n    safe_allin_prefab: cc.Prefab = null;\r\n    /**\r\n     * 选中的牌数量\r\n     * @type {number}\r\n     * @memberof Safe\r\n     */\r\n    _chooseCard: number = 0;\r\n    /**\r\n     * 赔率\r\n     * @type {InsuranceCfgAttrib}\r\n     * @memberof Safe\r\n     */\r\n    _rate: number = 0;\r\n    /**\r\n     * 倒计时\r\n     * @type {number}\r\n     * @memberof Safe\r\n     */\r\n    _timeDown: number = 0;\r\n    onLoad() {\r\n        this.updateData();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._timeDown > 0) {\r\n            this._timeDown -= dt;\r\n            this.lbl_time.string = Math.floor(this._timeDown) + 's';\r\n        } else {\r\n            this.lbl_time.string = '0s';\r\n            this._timeDown = 0;\r\n        }\r\n    }\r\n    /**\r\n     * 刷新数据\r\n     * @memberof Safe\r\n     */\r\n    updateData() {\r\n        let tableData = dd.gm_manager.getTableData();\r\n        if (tableData && tableData.insuranceStateAttrib) {\r\n            this._timeDown = (Number(tableData.actTime) - Number(tableData.svrTime)) / 1000;\r\n            this.lbl_time.string = this._timeDown + 's';\r\n            let allin_list = tableData.insuranceStateAttrib.insuranceSeatList;\r\n            //购买保险的玩家\r\n            let safeSeat: InsuranceSeatAttrib = null;\r\n            for (let i = 0; i < allin_list.length; i++) {\r\n                this.showAllInSeat(allin_list[i], tableData.insuranceStateAttrib, this.allin_node_list[i]);\r\n                //如果是购买保险的玩家\r\n                if (tableData.insuranceStateAttrib.accountId === allin_list[i].accountId) {\r\n                    safeSeat = allin_list[i];\r\n                }\r\n            }\r\n\r\n            let pCards = tableData.insuranceStateAttrib.tableHandCards;\r\n            for (let i = 0; i < this.pCard_node_list.length; i++) {\r\n                if (i < pCards.length) {\r\n                    this.showSafeCard(pCards[i], this.pCard_node_list[i]);\r\n                } else {\r\n                    if (i === pCards.length) {\r\n                        this.showLight(this.pCard_node_list[i]);\r\n                    }\r\n                    this.showSafeCard(0, this.pCard_node_list[i]);\r\n                }\r\n            }\r\n\r\n            this.fcp_svNode.content.removeAllChildren();\r\n            let winCardList = tableData.insuranceStateAttrib.winCardList;\r\n            for (let i = 0; i < winCardList.length; i++) {\r\n                this.showSafeCard(winCardList[i], this.fcp_svNode.content, false, (cardNode: cc.Node) => {\r\n                    if (tableData.insuranceStateAttrib.accountId === dd.ud_manager.account_mine.accountId) {\r\n                        cardNode.tag = i;\r\n                        cardNode.on(cc.Node.EventType.TOUCH_END, this.touch_fcp_end, this);\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (tableData.insuranceStateAttrib.accountId === dd.ud_manager.account_mine.accountId) {\r\n                this.mineNode.active = true;\r\n                this.fcp_mineNode.active = true;\r\n                this.lbl_other.node.active = false;\r\n            } else {\r\n                this.mineNode.active = false;\r\n                this.fcp_mineNode.active = false;\r\n                if (safeSeat) {\r\n                    this.lbl_other.node.active = true;\r\n                    this.lbl_other.string = '请稍等,玩家[ <color=#FFC103>' + safeSeat.nick + '</c> ]正在购买保险';\r\n                } else {\r\n                    this.lbl_other.node.active = false;\r\n                }\r\n            }\r\n\r\n            this.lbl_bet.string = tableData.insuranceStateAttrib.betMoney;\r\n            let pm = Number(tableData.insuranceStateAttrib.poolMoney) - Number(tableData.insuranceStateAttrib.buyedNum);\r\n            this.lbl_pool.string = pm.toString();\r\n            this.lbl_pfe.string = '0';\r\n            this.lbl_tbe.string = '0';\r\n            this.lbl_choose.string = '0';\r\n            this.lbl_odds.string = '0';\r\n            this.toggle_choose_all.isChecked = false;\r\n            this._chooseCard = 0;\r\n            this._rate = 0;\r\n            this.safe_pro.progress = 0;\r\n            this.safe_pro.node.getComponent(cc.Slider).progress = 0;\r\n        }\r\n    }\r\n    /**\r\n     * 点击反超牌\r\n     * @param {cc.Event.EventTouch} event \r\n     * @memberof Safe\r\n     */\r\n    touch_fcp_end(event: cc.Event.EventTouch) {\r\n        let cardNode = event.getCurrentTarget();\r\n        cardNode.getChildByName('choose').active = !cardNode.getChildByName('choose').active;\r\n        if (cardNode.getChildByName('choose').active) {\r\n            this._chooseCard++;\r\n        } else {\r\n            this._chooseCard--;\r\n        }\r\n        this.showFCPInfo();\r\n    }\r\n    /**\r\n     * 显示一张亮的图片\r\n     * @param {cc.Node} parentNode \r\n     * @memberof Safe\r\n     */\r\n    showLight(parentNode: cc.Node) {\r\n        let light = new cc.Node();\r\n        let sp = light.addComponent(cc.Sprite);\r\n        sp.spriteFrame = this.imgLight;\r\n        light.parent = parentNode;\r\n    }\r\n    /**\r\n     * 显示反超牌的信息\r\n     * @memberof Safe\r\n     */\r\n    showFCPInfo() {\r\n        let tableData = dd.gm_manager.getTableData();\r\n        if (tableData && tableData.insuranceStateAttrib) {\r\n            this.lbl_choose.string = this._chooseCard + '';\r\n\r\n            let rateList = tableData.insuranceStateAttrib.insuranceRateList;\r\n            if (this._chooseCard >= rateList.length) {\r\n                this._rate = Number(rateList[rateList.length - 1].rate);\r\n                this.lbl_odds.string = rateList[rateList.length - 1].rate;\r\n            } else if (this._chooseCard <= 0) {\r\n                this._rate = 0;\r\n                this.lbl_odds.string = '0';\r\n            } else {\r\n                for (let i = 0; i < rateList.length; i++) {\r\n                    if (rateList[i].cardNum === this._chooseCard) {\r\n                        this.lbl_odds.string = rateList[i].rate;\r\n                        this._rate = Number(rateList[i].rate);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.showTBInfo(0);\r\n    }\r\n\r\n    /**\r\n     * 显示allin座位的玩家\r\n     * @param {InsuranceSeatAttrib} seat \r\n     * @memberof Safe\r\n     */\r\n    showAllInSeat(seat: InsuranceSeatAttrib, safeData: InsuranceStateAttrib, parentNode: cc.Node) {\r\n        let allinNode = cc.instantiate(this.safe_allin_prefab);\r\n        for (let i = 0; i < seat.handCards.length; i++) {\r\n            let card = allinNode.getChildByName('card' + (i + 1));\r\n            this.showSafeCard(seat.handCards[i], card);\r\n        }\r\n        let des = allinNode.getChildByName('des').getComponent(cc.Label);\r\n        if (seat.accountId === safeData.accountId) {\r\n            des.node.color = this.allin_color_list[0];\r\n            des.string = '购买保险';\r\n        } else {\r\n            des.node.color = this.allin_color_list[1];\r\n            des.string = seat.cardNum + '个outs';\r\n        }\r\n        allinNode.getChildByName('name').getComponent(cc.Label).string = dd.utils.getStringBySize(seat.nick, 12);;\r\n        allinNode.parent = parentNode;\r\n    }\r\n\r\n    /**\r\n     * 显示牌\r\n     * @param {number} cardId  牌id\r\n     * @param {cc.Node} parentNode 父节点\r\n     * @param {boolean} [isShowChoose=false] 是否选中\r\n     * @param {*} [initCB=null] 回调函数\r\n     * @memberof Safe\r\n     */\r\n    showSafeCard(cardId: number, parentNode: cc.Node, isShowChoose: boolean = false, initCB: any = null) {\r\n        let safe_card = cc.instantiate(this.safe_card_prefab);\r\n        safe_card.getChildByName('img').getComponent(cc.Sprite).spriteFrame = dd.img_manager.getPokerSpriteFrameById(cardId);\r\n        safe_card.getChildByName('choose').active = isShowChoose;\r\n        safe_card.parent = parentNode;\r\n        if (initCB) {\r\n            initCB(safe_card);\r\n        }\r\n    }\r\n    /**\r\n     * 选中所有\r\n     * @memberof Safe\r\n     */\r\n    click_toggle_chooseAll() {\r\n        dd.mp_manager.playButton();\r\n        this.fcp_svNode.content.children.forEach((cardNode: cc.Node, index: number) => {\r\n            cardNode.getChildByName('choose').active = this.toggle_choose_all.isChecked;\r\n        });\r\n        this._chooseCard = this.toggle_choose_all.isChecked ? this.fcp_svNode.content.childrenCount : 0;\r\n        this.showFCPInfo();\r\n    }\r\n    /**\r\n     * 进度条的bar\r\n     * @memberof Safe\r\n     */\r\n    click_pro_bar() {\r\n        let pro = this.safe_pro.node.getComponent(cc.Slider).progress;\r\n        this.showTBInfo(pro);\r\n    }\r\n    /**\r\n     * 显示投保信息\r\n     * @memberof Safe\r\n     */\r\n    showTBInfo(pro: number) {\r\n        let tableData = dd.gm_manager.getTableData();\r\n        if (tableData && tableData.insuranceStateAttrib) {\r\n            if (this._rate !== 0) {\r\n                let maxSafe = (Number(tableData.insuranceStateAttrib.poolMoney) - Number(tableData.insuranceStateAttrib.buyedNum)) / this._rate;\r\n                let curSafe = maxSafe * pro;\r\n                if (curSafe <= 0) {\r\n                    curSafe = 1;\r\n                }\r\n                let tbe = Math.ceil(Math.ceil(curSafe) / tableData.smallBlind) * tableData.smallBlind;\r\n                this.lbl_tbe.string = tbe.toString();\r\n                let pfe = Math.floor(Math.floor(tbe * this._rate) / tableData.smallBlind) * tableData.smallBlind;\r\n                if (pfe > Number(tableData.insuranceStateAttrib.poolMoney)) {\r\n                    pfe = Number(tableData.insuranceStateAttrib.poolMoney);\r\n                }\r\n                this.lbl_pfe.string = pfe.toString();\r\n            } else {\r\n                this.lbl_pfe.string = '0';\r\n                this.lbl_tbe.string = '0';\r\n            }\r\n            this.safe_pro.progress = pro;\r\n            this.safe_pro.node.getComponent(cc.Slider).progress = pro;\r\n        }\r\n    }\r\n    /**\r\n     * 购买\r\n     * @memberof Safe\r\n     */\r\n    click_btn_buy() {\r\n        dd.mp_manager.playButton();\r\n        if (this._rate !== 0) {\r\n            this.sendBuySafe(1);\r\n            this.node.removeFromParent();\r\n            this.node.destroy();\r\n        } else {\r\n            dd.ui_manager.showTip('请先选择反超牌', 200, 0.3, 0.5, 0.2);\r\n        }\r\n    }\r\n    /**\r\n     * 不买\r\n     * @memberof Safe\r\n     */\r\n    click_btn_nobuy() {\r\n        dd.mp_manager.playButton();\r\n        this.sendBuySafe(0);\r\n        this.node.removeFromParent();\r\n        this.node.destroy();\r\n    }\r\n    /**\r\n     * 购买保险\r\n     * @param {number} bt \r\n     * @memberof Safe\r\n     */\r\n    sendBuySafe(bt: number) {\r\n        let tableData = dd.gm_manager.getTableData();\r\n        if (tableData && tableData.insuranceStateAttrib) {\r\n            let winCardList = tableData.insuranceStateAttrib.winCardList;\r\n            let buyCards = [];\r\n            this.fcp_svNode.content.children.forEach((cardNode: cc.Node, index: number) => {\r\n                let cardId = winCardList[cardNode.tag];\r\n                if (cardNode.getChildByName('choose').active) {\r\n                    buyCards.push(cardId);\r\n                }\r\n            });\r\n            let obj = {\r\n                tableId: tableData.tableId,\r\n                bt: bt,\r\n                buyCards: buyCards,\r\n                buyMoney: Number(this.lbl_tbe.string),\r\n                payMoney: Number(this.lbl_pfe.string),\r\n            };\r\n            let msg = JSON.stringify(obj);\r\n            dd.ws_manager.sendMsg(dd.protocol.DZPKER_TABLE_BUY_INSURANCE, msg, (flag: number, content?: any) => {\r\n                if (flag !== 0) {\r\n                    dd.ui_manager.showTip(content);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * 保本\r\n     * @memberof Safe\r\n     */\r\n    click_btn_baoben() {\r\n        dd.mp_manager.playButton();\r\n        if (this._rate !== 0) {\r\n            let tableData = dd.gm_manager.getTableData();\r\n            if (tableData && tableData.insuranceStateAttrib) {\r\n                let maxSafe = (Number(tableData.insuranceStateAttrib.poolMoney) - Number(tableData.insuranceStateAttrib.buyedNum)) / this._rate;\r\n                let tbe = Math.ceil(Number(tableData.insuranceStateAttrib.betMoney) / this._rate);\r\n                if (tbe > maxSafe) {\r\n                    dd.ui_manager.showTip('可投保额不足以保本');\r\n                    return;\r\n                }\r\n                tbe = Math.ceil(tbe / tableData.smallBlind) * tableData.smallBlind;\r\n                this.lbl_tbe.string = tbe.toString();\r\n                let pfe = Math.floor(Math.floor(tbe * this._rate) / tableData.smallBlind) * tableData.smallBlind;\r\n                if (pfe > Number(tableData.insuranceStateAttrib.poolMoney)) {\r\n                    pfe = Number(tableData.insuranceStateAttrib.poolMoney);\r\n                }\r\n                this.lbl_pfe.string = pfe.toString();\r\n\r\n                let pro = tbe / (maxSafe - 1);\r\n                this.safe_pro.progress = pro;\r\n                this.safe_pro.node.getComponent(cc.Slider).progress = pro;\r\n            }\r\n        } else {\r\n            this.lbl_pfe.string = '0';\r\n            this.lbl_tbe.string = '0';\r\n            this.safe_pro.progress = 0;\r\n            this.safe_pro.node.getComponent(cc.Slider).progress = 0;\r\n            dd.ui_manager.showTip('请先选择反超牌', 200, 0.3, 0.5, 0.2);\r\n        }\r\n    }\r\n    /**\r\n     * 等利\r\n     * @memberof Safe\r\n     */\r\n    click_btn_dengli() {\r\n        dd.mp_manager.playButton();\r\n        if (this._rate !== 0) {\r\n            let tableData = dd.gm_manager.getTableData();\r\n            if (tableData && tableData.insuranceStateAttrib) {\r\n                let dm = Number(tableData.insuranceStateAttrib.poolMoney) - Number(tableData.insuranceStateAttrib.buyedNum);\r\n                let maxSafe = dm / this._rate;\r\n\r\n                let tbe = Math.ceil((Math.ceil(maxSafe) / tableData.smallBlind)) * tableData.smallBlind;\r\n                this.lbl_tbe.string = tbe.toString();\r\n                let pfe = Math.floor(Math.floor(tbe * this._rate) / tableData.smallBlind) * tableData.smallBlind;\r\n                if (pfe > Number(tableData.insuranceStateAttrib.poolMoney)) {\r\n                    pfe = Number(tableData.insuranceStateAttrib.poolMoney);\r\n                }\r\n                this.lbl_pfe.string = pfe.toString();\r\n\r\n                this.safe_pro.progress = 1;\r\n                this.safe_pro.node.getComponent(cc.Slider).progress = 1;\r\n            }\r\n        } else {\r\n            this.lbl_pfe.string = '0';\r\n            this.lbl_tbe.string = '0';\r\n            this.safe_pro.progress = 0;\r\n            this.safe_pro.node.getComponent(cc.Slider).progress = 0;\r\n            dd.ui_manager.showTip('请先选择反超牌', 200, 0.3, 0.5, 0.2);\r\n        }\r\n    }\r\n    /**\r\n     * 退出\r\n     * @memberof Safe\r\n     */\r\n    click_btn_out() {\r\n        dd.mp_manager.playButton();\r\n        this.node.removeFromParent();\r\n        this.node.destroy();\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\nimport * as dd from './../../Modules/ModuleManager';\r\n\r\n@ccclass\r\nexport default class Setting extends cc.Component {\r\n    /**\r\n     * 音效开关\r\n     * \r\n     * @type {cc.Toggle}\r\n     * @memberof Setting\r\n     */\r\n    @property(cc.Toggle)\r\n    toggle: cc.Toggle = null;\r\n    /**\r\n     * 版本号\r\n     * \r\n     * @type {cc.Label}\r\n     * @memberof Setting\r\n     */\r\n    @property(cc.Label)\r\n    lab_ver: cc.Label = null;\r\n    /**\r\n     * 是否已经完成onLoad\r\n     * \r\n     * @type {boolean}\r\n     * @memberof Setting\r\n     */\r\n    isInit: boolean = false;\r\n\r\n    onLoad() {\r\n        if (dd.mp_manager.sw) {\r\n            this.toggle.check();\r\n        } else {\r\n            this.toggle.uncheck();\r\n        }\r\n        this.lab_ver.string = dd.config.version;\r\n        dd.ui_manager.hideLoading();\r\n        this.isInit = true;\r\n    }\r\n    /**\r\n     * 点击音效开关\r\n     * \r\n     * @memberof Setting\r\n     */\r\n    click_toggle() {\r\n        if (this.isInit) {\r\n            dd.mp_manager.playButton();\r\n        }\r\n        dd.mp_manager.sw = this.toggle.isChecked;\r\n        cc.sys.localStorage.setItem('sw', JSON.stringify({ sw: this.toggle.isChecked }));\r\n    }\r\n    /**\r\n     * 点击返回大厅\r\n     * \r\n     * @memberof Setting\r\n     */\r\n    click_back() {\r\n        dd.mp_manager.playButton();\r\n        this.node.destroy();\r\n    }\r\n    /**\r\n     * 点击注销登录\r\n     * \r\n     * @memberof Setting\r\n     */\r\n    click_out() {\r\n        dd.ui_manager.showLoading('正在注销,请稍后');\r\n        dd.mp_manager.playButton();\r\n        let obj = { 'accountId': dd.ud_manager.account_mine.accountId };\r\n        let msg = JSON.stringify(obj);\r\n        dd.ws_manager.sendMsg(dd.protocol.ACCOUNT_LOGIN_OUT, msg, (flag: number, content?: any) => {\r\n            if (flag === 0) {\r\n                dd.ws_manager.disconnect(() => {\r\n                    let db = cc.sys.localStorage;\r\n                    if (db.getItem('TokenInfo')) {\r\n                        db.removeItem('TokenInfo');\r\n                    }\r\n                    dd.destroy();\r\n                    cc.sys.garbageCollect();\r\n                    cc.game.restart();\r\n                });\r\n            } else if (flag === -1) {\r\n                dd.ui_manager.showTip('注销消息发送超时');\r\n            } else {\r\n                dd.ui_manager.showTip(content);\r\n            }\r\n        });\r\n    }\r\n}\r\n","/**\r\n * 用户管理类\r\n * \r\n * @export\r\n * @class UDManager\r\n */\r\nexport default class UDManager {\r\n    private static _instance: UDManager = null;\r\n    private constructor() { }\r\n    /**\r\n     * 获取UDManager单例对象\r\n     * \r\n     * @static\r\n     * @returns {UDManager} \r\n     * @memberof UDManager\r\n     */\r\n    static getInstance(): UDManager {\r\n        if (UDManager._instance === null) {\r\n            UDManager._instance = new UDManager();\r\n        }\r\n        return UDManager._instance;\r\n    }\r\n    /**\r\n     * 用户信息\r\n     * \r\n     * @type {AccountData}\r\n     * @memberof UDManager\r\n     */\r\n    account_mine: AccountData = null;\r\n\r\n    /**\r\n     * 清空单例对象\r\n     * \r\n     * @memberof UDManager\r\n     */\r\n    destroySelf(): void {\r\n        this.account_mine = null;\r\n        UDManager._instance = null;\r\n    }\r\n}","/**\r\n * 管理公共UI的类\r\n * \r\n * @export\r\n * @class UIManager\r\n */\r\nexport default class UIManager {\r\n    private static _instance: UIManager = null;\r\n    private constructor() { }\r\n    /**\r\n     * 获取WSManager单例对象\r\n     * \r\n     * @static\r\n     * @returns {UIManager} \r\n     * @memberof UIManager\r\n     */\r\n    static getInstance(): UIManager {\r\n        if (UIManager._instance === null) {\r\n            UIManager._instance = new UIManager();\r\n        }\r\n        return UIManager._instance;\r\n    }\r\n    /**\r\n     * 是否处于场景切换中\r\n     * \r\n     * @type {boolean}\r\n     * @memberof UIManager\r\n     */\r\n    isLoadingScence: boolean = false;\r\n\r\n    /**\r\n     * loading 节点\r\n     * \r\n     * @private\r\n     * @type {cc.Node}\r\n     * @memberof UIManager\r\n     */\r\n    private loadingNode: cc.Node = null;\r\n    /**\r\n     * tip 节点\r\n     * \r\n     * @private\r\n     * @type {cc.Node}\r\n     * @memberof UIManager\r\n     */\r\n    private tipNode: cc.Node = null;\r\n    /**\r\n     * alert 节点\r\n     * \r\n     * @private\r\n     * @type {cc.Node}\r\n     * @memberof UIManager\r\n     */\r\n    private alertNode: cc.Node = null;\r\n    /**\r\n     * alert节点里的确定按钮点击回调事件\r\n     * \r\n     * @private\r\n     * @memberof UIManager\r\n     */\r\n    private cb_yes: () => void = null;\r\n    /**\r\n     * alert节点里的取消按钮点击回调事件\r\n     * \r\n     * @private\r\n     * @memberof UIManager\r\n     */\r\n    private cb_no: () => void = null;\r\n    /**\r\n     * 场景切换前的回调\r\n     * \r\n     * @memberof UIManager\r\n     */\r\n    private cb_before_scene_loading: (event: cc.Event.EventCustom) => void = (event: cc.Event.EventCustom) => {\r\n        this.isLoadingScence = true;\r\n        this.hideLoading();\r\n    }\r\n\r\n\r\n    private cb_after_scene_loading: (event: cc.Event.EventCustom) => void = (event: cc.Event.EventCustom) => {\r\n        this.isLoadingScence = false;\r\n    }\r\n\r\n    /**\r\n     * 游戏每帧刷新前的回调\r\n     * \r\n     * @memberof UIManager\r\n     */\r\n    private cb_befor_update: (event: cc.Event.EventCustom) => void = (event: cc.Event.EventCustom) => {\r\n\r\n    }\r\n    /**\r\n     * app切换到后台的回调\r\n     * \r\n     * @memberof UIManager\r\n     */\r\n    private cb_app_hide: (event: cc.Event.EventCustom) => void = (event: cc.Event.EventCustom) => {\r\n        if (!cc.game.isPaused()) {\r\n            cc.game.pause();\r\n        }\r\n    }\r\n    /**\r\n     * app切换到前台的回调\r\n     * \r\n     * @memberof UIManager\r\n     */\r\n    private cb_app_show: (event: cc.Event.EventCustom) => void = (event: cc.Event.EventCustom) => {\r\n        if (cc.game.isPaused()) {\r\n            cc.game.resume();\r\n        }\r\n    }\r\n    /**\r\n     * 初始化\r\n     * \r\n     * @memberof UIManager\r\n     */\r\n    async initUI(): Promise<void> {\r\n        //注册全局事件\r\n        cc.director.on(cc.Director.EVENT_BEFORE_SCENE_LOADING, this.cb_before_scene_loading, this);\r\n        cc.director.on(cc.Director.EVENT_AFTER_SCENE_LAUNCH, this.cb_after_scene_loading, this);\r\n        cc.director.on(cc.Director.EVENT_BEFORE_UPDATE, this.cb_befor_update, this);\r\n        cc.game.on(cc.game.EVENT_HIDE, this.cb_app_hide, this);\r\n        cc.game.on(cc.game.EVENT_SHOW, this.cb_app_show, this);\r\n        this.loadingNode = await this.loadPrefabToNode('Loading');\r\n        this.tipNode = await this.loadPrefabToNode('Tip');\r\n        this.alertNode = await this.loadPrefabToNode('Alert');\r\n    }\r\n    /**\r\n     * 加载prefab,返回实例化节点Node\r\n     * \r\n     * @param {string} name \r\n     * @returns {Promise<cc.Node>} \r\n     * @memberof UIManager\r\n     */\r\n    loadPrefabToNode(name: string): Promise<cc.Node> {\r\n        let path = 'Prefab/' + name;\r\n        return new Promise<cc.Node>((resolve, reject) => {\r\n            cc.loader.loadRes(path, cc.Prefab, (err: Error, prefab: cc.Prefab) => {\r\n                if (err) {\r\n                    reject(err.message);\r\n                } else {\r\n                    let node = cc.instantiate(prefab);\r\n                    cc.loader.release(prefab);\r\n                    resolve(node);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * 显示Loading框\r\n     * \r\n     * @param {string} [msg='正在加载,请稍后'] \r\n     * @memberof UIManager\r\n     */\r\n    showLoading(msg: string = '正在加载,请稍后'): boolean {\r\n        if (this.isLoadingScence) return false;\r\n        if (this.loadingNode && this.loadingNode.isValid) {\r\n            this.loadingNode.parent = this.getCanvasNode();\r\n            this.loadingNode.setLocalZOrder(this.loadingNode.parent.childrenCount - 1);\r\n            this.loadingNode.getComponent(cc.Animation).setCurrentTime(0);\r\n            cc.find('layout/lbl_msg', this.loadingNode).getComponent(cc.Label).string = msg;\r\n        } else {\r\n            cc.error('loadingNode不存在');\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * 隐藏loading框\r\n     * \r\n     * @memberof UIManager\r\n     */\r\n    hideLoading() {\r\n        if (this.loadingNode && this.loadingNode.parent) {\r\n            this.loadingNode.removeFromParent();\r\n        }\r\n    }\r\n    /**\r\n     * 显示飘框提示\r\n     * \r\n     * @param {string} msg 提示内容\r\n     * @param {number} [distance=400] 飘框需要移动的距离\r\n     * @param {number} [time1=0.5] \r\n     * @param {number} [time2=1] \r\n     * @param {number} [time3=0.5] \r\n     * @memberof UIManager\r\n     */\r\n    showTip(msg: string, distance: number = 400, time1: number = 0.5, time2: number = 1, time3: number = 0.5) {\r\n        this.hideLoading();\r\n        if (this.tipNode) {\r\n            let tip = cc.instantiate(this.tipNode);\r\n            tip.parent = this.getCanvasNode();\r\n            tip.setLocalZOrder(tip.parent.childrenCount - 1);\r\n            cc.find('layout/lbl_msg', tip).getComponent(cc.Label).string = msg;\r\n            let layout = cc.find('layout', tip);\r\n            layout.setPosition(0, -distance * 0.5);\r\n            let action1 = cc.spawn(cc.moveTo(time1, cc.p(0, 0)), cc.fadeIn(time1));\r\n            let action3 = cc.spawn(cc.moveTo(time3, cc.p(0, distance)), cc.fadeOut(time3));\r\n            let endAction = cc.callFunc(() => {\r\n                tip.removeFromParent();\r\n                tip.destroy();\r\n            }, this);\r\n            layout.runAction(cc.sequence(action1, cc.delayTime(1), action3, endAction));\r\n        } else {\r\n            cc.error('tipNode不存在');\r\n        }\r\n    }\r\n    /**\r\n     * 显示弹出框\r\n     * \r\n     * @param {number} type 1是温馨提示,2是错误提示\r\n     * @param {string} msg 文本内容(富文本)\r\n     * @param {Function} [yes] 点击确定后的回调方法\r\n     * @param {Function} [no] 点击取消后的回调方法\r\n     * @memberof UIManager\r\n     */\r\n    showAlert(type: number, msg: string, yes?: () => void, no?: () => void) {\r\n        this.hideLoading();\r\n        this.hideAlert();\r\n        if (this.alertNode) {\r\n            if (type === 1) {\r\n                cc.find('box/wxts', this.alertNode).active = true;\r\n                cc.find('box/cwts', this.alertNode).active = false;\r\n            } else {\r\n                cc.find('box/wxts', this.alertNode).active = false;\r\n                cc.find('box/cwts', this.alertNode).active = true;\r\n            }\r\n            cc.find('box/board_msg/rt_msg', this.alertNode).getComponent(cc.RichText).string = msg;\r\n            let btn_yes = cc.find('box/layout/btn_yes', this.alertNode);\r\n            btn_yes.active = true;\r\n            btn_yes.on(cc.Node.EventType.TOUCH_END, this.cb_click, this);\r\n            if (yes) this.cb_yes = yes;\r\n            let btn_no = cc.find('box/layout/btn_no', this.alertNode);\r\n            if (no) {\r\n                this.cb_no = no;\r\n                btn_no.active = true;\r\n                btn_no.on(cc.Node.EventType.TOUCH_END, this.cb_click, this);\r\n            } else {\r\n                btn_no.active = false;\r\n            }\r\n            this.alertNode.parent = this.getCanvasNode();\r\n            this.alertNode.setLocalZOrder(this.alertNode.parent.childrenCount - 1);\r\n        } else {\r\n            cc.error('alertNode不存在');\r\n        }\r\n    }\r\n    /**\r\n     * alert框按钮点击事件\r\n     * \r\n     * @private\r\n     * @param {cc.Event.EventTouch} event \r\n     * @memberof UIManager\r\n     */\r\n    private cb_click(event: cc.Event.EventTouch) {\r\n        let btn_yes = cc.find('box/layout/btn_yes', this.alertNode);\r\n        let btn_no = cc.find('box/layout/btn_no', this.alertNode);\r\n        if (btn_yes === event.currentTarget && this.cb_yes) {\r\n            this.cb_yes();\r\n        }\r\n        if (btn_no === event.currentTarget && this.cb_no) {\r\n            this.cb_no();\r\n        }\r\n        this.hideAlert();\r\n    }\r\n    /**\r\n     * 隐藏Alert框\r\n     * \r\n     * @memberof UIManager\r\n     */\r\n    hideAlert() {\r\n        if (this.alertNode && this.alertNode.parent) {\r\n            this.alertNode.removeFromParent();\r\n        }\r\n        cc.find('box/wxts', this.alertNode).active = false;\r\n        cc.find('box/cwts', this.alertNode).active = false;\r\n        cc.find('box/board_msg/rt_msg', this.alertNode).getComponent(cc.RichText).string = '';\r\n        let btn_yes = cc.find('box/layout/btn_yes', this.alertNode);\r\n        btn_yes.off(cc.Node.EventType.TOUCH_END, this.cb_click, this);\r\n        this.cb_yes = null;\r\n        btn_yes.active = false;\r\n        let btn_no = cc.find('box/layout/btn_no', this.alertNode);\r\n        btn_no.off(cc.Node.EventType.TOUCH_END, this.cb_click, this);\r\n        btn_no.active = false;\r\n        this.cb_no = null;\r\n    }\r\n\r\n    /**\r\n     * 获取当前显示的Canvas节点\r\n     * \r\n     * @returns {cc.Node} \r\n     * @memberof UIManager\r\n     */\r\n    getCanvasNode(): cc.Node {\r\n        return cc.director.getScene().getChildByName('Canvas');\r\n    }\r\n    /**\r\n     * 获取当前场景下的RootNode节点\r\n     * \r\n     * @returns {cc.Node} \r\n     * @memberof UIManager\r\n     */\r\n    getRootNode(): cc.Node {\r\n        return cc.find('RootNode', this.getCanvasNode());\r\n    }\r\n\r\n    /**\r\n     * 清理销毁\r\n     * \r\n     * @memberof WSManager\r\n     */\r\n    destroySelf(): void {\r\n        //注销全局事件\r\n        cc.director.off(cc.Director.EVENT_BEFORE_SCENE_LOADING, this.cb_before_scene_loading, this);\r\n        cc.director.off(cc.Director.EVENT_BEFORE_UPDATE, this.cb_befor_update, this);\r\n        cc.game.off(cc.game.EVENT_HIDE, this.cb_app_hide, this);\r\n        cc.game.off(cc.game.EVENT_SHOW, this.cb_app_show, this);\r\n        //清除loading框\r\n        if (this.loadingNode) {\r\n            this.hideLoading();\r\n            this.loadingNode.destroy();\r\n            this.loadingNode = null;\r\n        }\r\n        //清除tip框\r\n        if (this.tipNode) {\r\n            this.tipNode.destroy();\r\n            this.tipNode = null;\r\n        }\r\n        //清除alert框\r\n        if (this.alertNode) {\r\n            this.hideAlert();\r\n            this.alertNode.destroy();\r\n            this.alertNode = null;\r\n        }\r\n\r\n        UIManager._instance = null;\r\n    }\r\n}","/**\r\n * 创建UUID\r\n * \r\n * @param {number} len UUID长度\r\n * @param {number} radix 输出的进制（2,8,10,16）\r\n * @returns {string} 返回对应进制下制定长度的字符串\r\n * @memberof LoginCanvas\r\n */\r\nexport function createUUID(len: number, radix: number): string {\r\n    let chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\r\n    let uuid = [], i;\r\n    radix = radix || chars.length;\r\n    if (len) {\r\n        for (i = 0; i < len; i++) uuid[i] = chars[0 | Math.random() * radix];\r\n    } else {\r\n        let r;\r\n        uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\r\n        uuid[14] = '4';\r\n        for (i = 0; i < 36; i++) {\r\n            if (!uuid[i]) {\r\n                r = 0 | Math.random() * 16;\r\n                uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\r\n            }\r\n        }\r\n    }\r\n    return uuid.join('');\r\n}\r\n/**\r\n * 修改微信获取的头像地址\r\n * \r\n * @export\r\n * @param {string} url 原始头像地址\r\n * @returns {string} 修改为96尺寸的地址\r\n */\r\nexport function getHeadImgUrl(url: string): string {\r\n    if (url === '' || url === '/0') return '';\r\n    let arrayList: string[] = url.split('/');\r\n    arrayList.pop();\r\n    return arrayList.join('/') + '/96';\r\n}\r\n\r\n/**\r\n * 截图保存到本地\r\n * \r\n * @export\r\n * @param {cc.Node} node 需要截图的节点\r\n * @param {string} saveName 需要保存图片的名字\r\n * @param {Function} callback 保存成功后的回调\r\n * @return {boolean} 是否保存\r\n */\r\nexport function captureScreen(node: cc.Node, saveName: string, callback: Function): void {\r\n    if (cc.sys.isNative && cc.sys.isMobile) {\r\n        let renderTexture = cc.RenderTexture.create(node.width, node.height, cc.Texture2D.PixelFormat.RGBA8888, gl.DEPTH24_STENCIL8_OES);\r\n        node.parent._sgNode.addChild(renderTexture);\r\n        renderTexture.setVisible(false);\r\n        renderTexture.begin();\r\n        node._sgNode.visit();\r\n        renderTexture.end();\r\n        renderTexture.saveToFile(saveName, cc.ImageFormat.PNG, true, (rt, path) => {\r\n            renderTexture.removeFromParent();\r\n            let interval = 0;\r\n            let timeId = setInterval(() => {\r\n                if (interval > 10000) {\r\n                    interval = null;\r\n                    clearInterval(timeId);\r\n                    callback();\r\n                }\r\n                if (jsb.fileUtils.isFileExist(path)) {\r\n                    interval = null;\r\n                    clearInterval(timeId);\r\n                    callback(path);\r\n                }\r\n                interval += 100;\r\n            }, 100);\r\n        });\r\n    } else {\r\n        callback();\r\n    }\r\n}\r\n\r\n/**\r\n * num是传入的正整数,返回千分位逗号分隔的字符串\r\n * \r\n * @export\r\n * @param {any} num \r\n * @returns \r\n */\r\nexport function getThousandString(num): string {\r\n    if (isNaN(num)) num = 0;\r\n    let numString = num.toString();\r\n    let result = \"\";\r\n    while (numString.length > 3) {\r\n        result = \",\" + numString.slice(-3) + result;\r\n        numString = numString.slice(0, numString.length - 3);\r\n    }\r\n    if (numString) { result = numString + result; }\r\n    return result;\r\n}\r\n\r\n/**\r\n * 传入千分位的字符串，返回去除逗号的字符串\r\n * \r\n * @export\r\n * @param {string} str \r\n * @returns \r\n */\r\nexport function getBackNumString(str: string): string {\r\n    let list = str.split(\",\");\r\n    str = \"\";\r\n    for (let i = 0; i < list.length; i++) {\r\n        str += list[i];\r\n    }\r\n    return str;\r\n}\r\n\r\n/**\r\n * 传入带小数点的数字字符串，返回去除小数点的数组\r\n * @export\r\n * @param {string} str \r\n * @returns \r\n */\r\nexport function getPointNumString(str: string): number[] {\r\n    let list = str.split(\".\");\r\n    let numList = [];\r\n    for (let i = 0; i < list.length; i++) {\r\n        numList.push(Number(list[i]));\r\n    }\r\n    return numList;\r\n}\r\n\r\n/**\r\n * 传入数字，返回每位数字的组成的数组\r\n * @export\r\n * @param {number} num \r\n * @returns \r\n */\r\nexport function getNumberList(num: number): number[] {\r\n    let numList = num.toString().split(\"\").map((i) => {\r\n        return Number(i);\r\n    });\r\n    return numList;\r\n}\r\n\r\n/**\r\n * 根据时间戳，返回对应时间格式的字符串\r\n * \r\n * @param {string} timestamp  时间戳(字符串类型)\r\n * @param {number} type 1是只获取日期，2是只获取时间,默认都获取（数字类型）\r\n * @returns {string} \r\n */\r\nexport function getDateStringByTimestamp(timestamp: string, type: number = 0): string {\r\n    let num = Number(timestamp);\r\n    if (isNaN(num)) return '';\r\n    else {\r\n        let timeDate = new Date();\r\n        timeDate.setTime(num);\r\n        let timeDateString = this.getDateStringByDate(timeDate);\r\n        let timeString = this.getTimeStringByDate(timeDate);\r\n        if (type === 1) {\r\n            return timeDateString;\r\n        } else if (type === 2) {\r\n            return timeString;\r\n        } else {\r\n            return timeDateString + ' ' + timeString;\r\n        }\r\n    }\r\n}\r\n/**\r\n * 根据时间对象获取日期\r\n * \r\n * @param {Date} nowDate 时间对象\r\n * @param {string} connector 分隔符\r\n * @returns {string}\r\n */\r\nexport function getDateStringByDate(nowDate: Date, connector: string): string {\r\n    if (nowDate instanceof Date) {\r\n        if (!connector) {\r\n            connector = \"-\";\r\n        }\r\n        let year = nowDate.getFullYear() + '';\r\n        let month = nowDate.getMonth() + 1;\r\n        let monthStr = month + '';\r\n        if (month < 10) monthStr = \"0\" + month;\r\n        let day = nowDate.getDate();\r\n        let dayStr = day + '';\r\n        if (day < 10) dayStr = \"0\" + day;\r\n        return year + connector + monthStr + connector + dayStr;\r\n    }\r\n    return '';\r\n}\r\n/**\r\n * 根据时间对象获取时间\r\n * \r\n * @param {Date} nowDate 时间对象\r\n * @param {string} connector 分隔符\r\n * @returns {string}\r\n */\r\nexport function getTimeStringByDate(nowDate, connector): string {\r\n    if (nowDate instanceof Date) {\r\n        if (!connector) {\r\n            connector = \":\";\r\n        }\r\n        let hour = nowDate.getHours();\r\n        let hourStr = hour + '';\r\n        if (hour < 10) hourStr = \"0\" + hour;\r\n        let minute = nowDate.getMinutes();\r\n        let minuteStr = minute + '';\r\n        if (minute < 10) minuteStr = \"0\" + minute;\r\n        return hourStr + connector + minuteStr /*+ connector + secondStr*/;\r\n    }\r\n    return '';\r\n}\r\n\r\n/**\r\n * 获取倒计时字符串\r\n * \r\n * @param {number} time 倒计时毫秒数\r\n * @returns {string}\r\n */\r\nexport function getCountDownString(time: number): string {\r\n    if (time < 0) return '00:00:00';\r\n    let s = Math.floor(time / 1000);\r\n    let hour = Math.floor(s / 3600);\r\n    let minute = Math.floor((s - hour * 3600) / 60);\r\n    let second = s - hour * 3600 - minute * 60;\r\n    let str = '';\r\n    if (hour > 9) str += hour + ':';\r\n    else str += '0' + hour + ':';\r\n    if (minute > 9) str += minute + ':';\r\n    else str += '0' + minute + ':';\r\n    if (second > 9) str += second;\r\n    else str += '0' + second;\r\n    return str;\r\n\r\n}\r\n/**\r\n * 返回指定长度的字符串\r\n * \r\n * @export\r\n * @param {string} str \r\n * @param {number} size \r\n * @returns \r\n */\r\nexport function getStringBySize(str: string, size: number): string {\r\n    if (str.length > size) {\r\n        let len = 0;\r\n        let vaule = '';\r\n        for (let i = 0; i < str.length; i++) {\r\n            if (str.charCodeAt(i) > 255) {\r\n                len += 2;\r\n            } else {\r\n                len += 1;\r\n            }\r\n            if (len > size) {\r\n                break;\r\n            } else {\r\n                vaule += str.charAt(i);\r\n            }\r\n        }\r\n        return vaule;\r\n    } else {\r\n        return str;\r\n    }\r\n}\r\n/**\r\n * 一段距离,被分割成几份,传入一个位置,返回这个位置最接近点的值\r\n * \r\n * @export\r\n * @param {number} maxLen 线段总长\r\n * @param {number} sections 需要被分为几段\r\n * @param {number} point 传入值\r\n * @returns {number} \r\n */\r\nexport function getClosestNumber(maxLen: number, sections: number, point: number): number {\r\n    if (point < 0) return 0;\r\n    if (point > maxLen) return maxLen;\r\n    if (sections < 2) return maxLen;\r\n    let secLen = maxLen / sections;\r\n    let residue = point % secLen;\r\n    let count = Math.floor(point / secLen);\r\n    if (residue < secLen / 2) {\r\n        return count * secLen;\r\n    } else {\r\n        return (count + 1) * secLen;\r\n    }\r\n}\r\n/**\r\n * 一段距离,被分割成几份,传入一个位置,返回这个位置最接近点的下标\r\n * \r\n * @export\r\n * @param {number} maxLen 线段总长\r\n * @param {number} sections 需要被分为几段\r\n * @param {number} point 传入值\r\n * @returns {number} \r\n */\r\nexport function getClosestIndex(maxLen: number, sections: number, point: number): number {\r\n    if (point < 0) return 0;\r\n    if (point > maxLen) return sections;\r\n    if (sections < 2) return maxLen;\r\n    let secLen = maxLen / sections;\r\n    let residue = point % secLen;\r\n    let count = Math.floor(point / secLen);\r\n    if (residue < secLen / 2) {\r\n        return count;\r\n    } else {\r\n        return count + 1;\r\n    }\r\n}","import { Protocol, HotKey } from './Protocol';\r\nimport ENCManager from './ENCManager';\r\nimport GMManager from './GMManager'\r\nimport UIManager from './UIManager';\r\nimport UDManager from './UDManager';\r\nimport MPManager from './MPManager';\r\nimport { hot_key } from './ModuleManager';\r\n\r\n/**\r\n * ws网络管理类\r\n * \r\n * @export\r\n * @class WSManager\r\n */\r\nexport default class WSManager {\r\n    private static _instance: WSManager = null;\r\n    private constructor() { }\r\n    /**\r\n     * 获取WSManager单例对象\r\n     * \r\n     * @static\r\n     * @returns {WSManager} \r\n     * @memberof WSManager\r\n     */\r\n    static getInstance(): WSManager {\r\n        if (WSManager._instance === null) {\r\n            WSManager._instance = new WSManager();\r\n        }\r\n        return WSManager._instance;\r\n    }\r\n    /**\r\n     * 心跳间隔时间，单位毫秒\r\n     * \r\n     * @type {number}\r\n     * @memberof WSManager\r\n     */\r\n    private readonly heartbeatInterval: number = 5000;\r\n    /**\r\n     * 心跳发送后清零，之后累加\r\n     * \r\n     * @private\r\n     * @type {number}\r\n     * @memberof WSManager\r\n     */\r\n    private intervalTime: number = 0;\r\n    /**\r\n     * 消息超时时长\r\n     * \r\n     * @type {number}\r\n     * @memberof WSManager\r\n     */\r\n    private readonly timeoutTime: number = 10000;\r\n    /**\r\n     * 心跳最大间隔时间，超过则掉线\r\n     * \r\n     * @type {number}\r\n     * @memberof WSManager\r\n     */\r\n    private readonly timeoutMax: number = 30000;\r\n    /**\r\n     * 心跳最早一次发送的时间\r\n     * \r\n     * @private\r\n     * @type {number}\r\n     * @memberof WSManager\r\n     */\r\n    private heartbeatStart: number = 0;\r\n    /**\r\n     * 心跳最后一次收到的时间\r\n     * \r\n     * @private\r\n     * @type {number}\r\n     * @memberof WSManager\r\n     */\r\n    private heartbeatEnd: number = 0;\r\n    /**\r\n    * 时间调度器id（setInterval）\r\n    * \r\n    * @private\r\n    * @type {number}\r\n    * @memberof WSManager\r\n    */\r\n    private timeID: number = null;\r\n    /**\r\n     * ws连接地址\r\n     * \r\n     * @private\r\n     * @type {string}\r\n     * @memberof WSManager\r\n     */\r\n    private url: string = null;\r\n    /**\r\n     * WebSocket对象\r\n     * \r\n     * @private\r\n     * @type {WebSocket}\r\n     * @memberof WSManager\r\n     */\r\n    private ws: WebSocket = null;\r\n    /**\r\n     * 当前连接状态\r\n     * \r\n     * @private\r\n     * @type {number}\r\n     * @memberof WSManager\r\n     */\r\n    private readyState: number = null;\r\n    /**\r\n     * 延迟时间，单位毫秒\r\n     * \r\n     * @private\r\n     * @type {number}\r\n     * @memberof WSManager\r\n     */\r\n    private delayTime: number = 0;\r\n    /**\r\n     * 存放发送数据的数组，用于判断消息超时\r\n     * \r\n     * @private\r\n     * @type {SendData[]}\r\n     * @memberof WSManager\r\n     */\r\n    private sendDataArray: SendData[] = [];\r\n    /**\r\n     * 主动断开时发送过来的回调\r\n     * \r\n     * @private\r\n     * @type {Function}\r\n     * @memberof WSManager\r\n     */\r\n    private cb_close: Function = null;\r\n    /**\r\n     * 是否登录游戏服\r\n     * \r\n     * @private\r\n     * @type {boolean}\r\n     * @memberof WSManager\r\n     */\r\n    private isLogin: boolean = false;\r\n    /**\r\n     * 修改登录状态\r\n     * \r\n     * @param {boolean} state \r\n     * @memberof WSManager\r\n     */\r\n    setLoginState(state: boolean) {\r\n        this.isLogin = state;\r\n    }\r\n    /**\r\n     * 连接ws服务器\r\n     * \r\n     * @param {string} url 连接地址\r\n     * @memberof WSManager\r\n     */\r\n    connect(url: string): Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            if (this.ws || url.length < 1 || this.readyState) {\r\n                this.destroySelf();\r\n                reject('连接服务器失败,参数错误');\r\n            }\r\n            this.readyState = WebSocket.CONNECTING;\r\n            this.ws = new WebSocket(url);\r\n            this.ws.binaryType = \"arraybuffer\";\r\n            /**\r\n             * ws连接上时触发\r\n             */\r\n            this.ws.onopen = (ev: Event) => {\r\n                this.readyState = WebSocket.OPEN;\r\n                this.url = url;\r\n                this.checkTimeOut();\r\n                resolve();\r\n            };\r\n            /**\r\n             * ws断开连接时触发\r\n             */\r\n            this.ws.onclose = (ev: CloseEvent) => {\r\n                switch (this.readyState) {\r\n                    case WebSocket.CONNECTING://连接失败\r\n                        reject('连接服务器失败,请检查网络状态');\r\n                        break;\r\n                    case WebSocket.OPEN://意外断开连接\r\n                        cc.log('意外断开连接');\r\n                        cc.systemEvent.emit('cb_diconnect');\r\n                        break;\r\n                    case WebSocket.CLOSING://客户端主动断开连接\r\n                        cc.log('客户端主动断开连接');\r\n                        if (this.cb_close) { this.cb_close(); }\r\n                        break;\r\n                    case WebSocket.CLOSED://心跳超时\r\n                        cc.log('心跳超时');\r\n                        cc.systemEvent.emit('cb_diconnect');\r\n                        break;\r\n                    default:\r\n                        cc.log('onclose：未知状态！');\r\n                        cc.systemEvent.emit('cb_diconnect');\r\n                        break;\r\n                }\r\n                this.destroySelf();\r\n            };\r\n            /**\r\n             * 收到服务器消息时触发\r\n             */\r\n            this.ws.onmessage = (ev: MessageEvent) => {\r\n                let msgId = this.getMessageId(ev.data, 12);\r\n                let msgBody = this.getMessageBody(ev.data, 32);\r\n                let s_data: S_Data = JSON.parse(msgBody);\r\n                if (msgId > 10000) {\r\n                    //服务器的推送消息\r\n                    if (s_data.code === 0) {\r\n                        this.doPush(msgId, s_data.content);\r\n                    } else {\r\n                        cc.log('推送了错误消息过来');\r\n                    }\r\n                } else {\r\n                    //客户端请求返回的数据\r\n                    let sendData = this.getSendData(msgId);\r\n                    if (sendData) {\r\n                        this.delayTime = Date.now() - sendData.sendTime;\r\n                        sendData.callback(s_data.code, s_data.content);\r\n                        cc.js.array.remove(this.sendDataArray, sendData);\r\n                    } else {\r\n                        if (msgId !== Protocol.ACCOUNT_PING)\r\n                            cc.log('onmessage:协议号' + msgId + '超时或未知');\r\n                    }\r\n                }\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * 检查消息超时\r\n     * \r\n     * @memberof WSManager\r\n     */\r\n    private checkTimeOut(): void {\r\n        let dateTime = Date.now();\r\n        this.heartbeatStart = dateTime;\r\n        this.heartbeatEnd = dateTime;\r\n        this.intervalTime = 0;\r\n        this.sendDataArray.length = 0;\r\n        this.timeID = setInterval(() => {\r\n            if (this.readyState !== WebSocket.OPEN) return;\r\n            this.checkHeartbeat();\r\n            let tempRemove: SendData[] = [];\r\n            this.sendDataArray.forEach((item: SendData) => {\r\n                if (Date.now() - item.sendTime >= this.timeoutTime) {\r\n                    item.callback(-1);\r\n                    tempRemove.push(item);\r\n                }\r\n            });\r\n            cc.js.array.removeArray(this.sendDataArray, tempRemove);\r\n        }, 1000);\r\n    }\r\n    /**\r\n     * 停止心跳检测\r\n     * \r\n     * @memberof WSManager\r\n     */\r\n    stopCheck(): void {\r\n        if (this.timeID) {\r\n            clearInterval(this.timeID);\r\n            this.timeID = null;\r\n        }\r\n    }\r\n    /**\r\n     * 心跳检测\r\n     * \r\n     * @memberof WSManager\r\n     */\r\n    private checkHeartbeat() {\r\n        if (this.intervalTime === 0) {\r\n            this.heartbeatStart = Date.now();\r\n            //发送心跳包\r\n            this.sendMsg(Protocol.ACCOUNT_HEART, '', (flag: number, content?: any) => {\r\n                if (flag === 0) {\r\n                    this.heartbeatEnd = Date.now();\r\n                    this.delayTime = this.heartbeatEnd - this.heartbeatStart;\r\n                    if (this.isLogin) {\r\n                        let obj = { ping: this.delayTime };\r\n                        this.sendMsg(Protocol.ACCOUNT_PING, JSON.stringify(obj), null);\r\n                    }\r\n                } else {\r\n                    cc.log('心跳返回错误了！');\r\n                }\r\n            });\r\n        }\r\n        this.intervalTime += 1000;\r\n        if (this.intervalTime >= this.heartbeatInterval) {\r\n            this.intervalTime = 0;\r\n        }\r\n        if (this.delayTime >= this.timeoutMax) {\r\n            //掉线了\r\n            this.readyState = WebSocket.CLOSED;\r\n            this.ws.close();\r\n        }\r\n    }\r\n    /**\r\n     * 处理服务器推送消息\r\n     * \r\n     * @param {Protocol} msgId 协议号\r\n     * @param {any} content 数据明文对象\r\n     * @memberof WSManager\r\n     */\r\n    private doPush(msgId: Protocol, content: any): void {\r\n        switch (msgId) {\r\n            case Protocol.ACCOUNT_KICK_OFFLINE_NOTIFY://推送消息(玩家被踢下线)****\r\n                break;\r\n            case Protocol.WALLET_WALLET_NOTIFY://推送消息(钱包数据变化)\r\n                UDManager.getInstance().account_mine.walletVo = content as WalletVo;\r\n                break;\r\n            case Protocol.MESSAGE_NOTICE_NOTIFY://推送消息(公告数据)\r\n                break;\r\n            case Protocol.CHAT_SEND_NOTIFY://推送消息(聊天信息通知)****\r\n                cc.systemEvent.emit('chatPush', content);\r\n                break;\r\n            case Protocol.HOTPROMPT_HOTDATA_NOTIFY://推送消息(红点提示数据)****\r\n                let hots = content as HotPromptAttrib[];\r\n                hots.forEach((hot: HotPromptAttrib) => {\r\n                    if (hot.hotKey === HotKey.HOT_KEY_ORDER) {\r\n                        if (GMManager.getInstance().orderCount > -1 && GMManager.getInstance().orderCount < hot.hotVal) {\r\n                            MPManager.getInstance().playMsg();\r\n                        }\r\n                        GMManager.getInstance().orderCount = hot.hotVal;\r\n                    }\r\n                }, this);\r\n                break;\r\n            case Protocol.MALL_CHARGE_NOTIFY://购买或充值成功通知\r\n                break;\r\n            case Protocol.DZPKER_TABLE_STATE_NOTIFY://推送消息(游戏桌子状态变化通知)****tabel\r\n                GMManager.getInstance().setTableData(content as TableData, 1);\r\n                break;\r\n            case Protocol.DZPKER_SEAT_STATE_NOTIFY://推送消息(游戏座位数据变化通知)****tabel\r\n                GMManager.getInstance().setTableData(content as TableData, 2);\r\n                break;\r\n            case Protocol.DZPKER_TABLE_BT_NOTIFY://推送消息(游戏桌子表态通知)****tabel\r\n                GMManager.getInstance().setTableData(content as TableData, 3);\r\n                break;\r\n            case Protocol.DZPKER_TABLE_SETTLEMENT_NOTIFY://推送消息(游戏桌子总结算数据通知)****\r\n                cc.director.loadScene('GameResult', () => {\r\n                    UIManager.getInstance().getCanvasNode().getComponent('GameResult').updateData(content);\r\n                });\r\n                break;\r\n            case Protocol.DZPKER_TABLE_SETTLEMENT_INSURANCE_NOTIFY://推送消息(保险结算结果数据通知)****\r\n                if (content.result === 0) {//未买中\r\n                    UIManager.getInstance().showTip('未买中保险！本次保险不做赔偿');\r\n                } else {\r\n                    UIManager.getInstance().showTip('买中保险！需要赔付' + content.payMoney + '积分');\r\n                }\r\n                break;\r\n            case Protocol.DZPKER_TABLE_BUY_CHIP_SUCESS_NOTIFY://推送消息(积分购买成功通知)****\r\n                UIManager.getInstance().showTip(content);\r\n                break;\r\n            case Protocol.DZPKER_TABLE_SHOW_CARD_NOTIFY://推送消息(玩家亮牌通知)****\r\n                cc.systemEvent.emit('lookCard');\r\n                break;\r\n            case Protocol.DZPKER_TABLE_STRADDL_BT_NOTIFY://推送消息(闭眼盲注表态通知)\r\n                MPManager.getInstance().playStraddle();\r\n                GMManager.getInstance().setTableData(content as TableData, 2);\r\n                break;\r\n            case Protocol.DZPKER_TABLE_SEAT_KICK_NOTIFY://推送消息(玩家从座位上被踢起通知)\r\n                UIManager.getInstance().showTip(content);\r\n                if (GMManager.getInstance().btnScript) {\r\n                    GMManager.getInstance().btnScript.click_buy();\r\n                }\r\n                break;\r\n\r\n            default: break;\r\n        }\r\n    }\r\n    /**\r\n     * 根据协议号查找对象\r\n     * \r\n     * @param {Protocol} msgId 协议号\r\n     * @returns {SendData} 发送数据对象\r\n     * @memberof WSManager\r\n     */\r\n    private getSendData(msgId: Protocol): SendData {\r\n        for (let i = 0, len = this.sendDataArray.length; i < len; i++) {\r\n            let item: SendData = this.sendDataArray[i];\r\n            if (item.msgId === msgId) {\r\n                return item;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * 客户端主动断开连接\r\n     * \r\n     * @memberof WSManager\r\n     */\r\n    disconnect(callback: Function): void {\r\n        if (this.ws && this.ws.readyState === WebSocket.OPEN && this.readyState === WebSocket.OPEN) {\r\n            this.readyState = WebSocket.CLOSING;\r\n            this.cb_close = callback;\r\n            this.ws.close();\r\n        }\r\n    }\r\n    /**\r\n     * 向服务器发送消息\r\n     * \r\n     * @param {Protocol} msgId 协议号\r\n     * @param {string} msgBody 消息明文\r\n     * @param {(flag: number, content?: any) => void} [callback] 回调函数，flag0为成功，负数失败，-1为超时\r\n     * @returns {boolean} 返回发送结果，成功或失败\r\n     * @memberof WSManager\r\n     */\r\n    sendMsg(msgId: Protocol, msgBody: string, callback?: (flag: number, content?: any) => void): boolean {\r\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\r\n            if (callback) {\r\n                let sendData: SendData = this.getSendData(msgId);\r\n                if (sendData) {\r\n                    cc.js.array.remove(this.sendDataArray, sendData);\r\n                }\r\n                sendData = {\r\n                    msgId: msgId,\r\n                    sendTime: Date.now(),\r\n                    callback: callback\r\n                };\r\n                this.sendDataArray.push(sendData);\r\n            }\r\n            this.ws.send(this.createMessage(msgId, msgBody));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 解析消息号\r\n     * \r\n     * @param {ArrayBuffer} buf 服务器传送过来的数据\r\n     * @param {number} offset 偏移量\r\n     * @returns {number} 返回协议号\r\n     * @memberof WSManager\r\n     */\r\n    private getMessageId(buf: ArrayBuffer, offset: number): number {\r\n        let array = Array.apply([], new Uint8Array(buf));\r\n        let msgId: number = (\r\n            ((array[offset] & 0xFF) << 24) |\r\n            ((array[offset + 1] & 0xFF) << 16) |\r\n            ((array[offset + 2] & 0xFF) << 8) |\r\n            (array[offset + 3] & 0xFF)\r\n        );\r\n        return msgId;\r\n    }\r\n    /**\r\n     * 解析消息内容\r\n     * \r\n     * @param {ArrayBuffer} buf 服务器传送过来的数据\r\n     * @param {number} offset 偏移量\r\n     * @returns {string} 解析后的字符串数据\r\n     * @memberof WSManager\r\n     */\r\n    private getMessageBody(buf: ArrayBuffer, offset: number): string {\r\n        let bodyBuffer = buf.slice(offset);\r\n        return this.ArrayBufferToString(bodyBuffer);\r\n    }\r\n    /**\r\n     * 创建消息\r\n     * \r\n     * @param {number} msgId 消息号\r\n     * @param {string} msgBody 消息内容\r\n     * @returns {ArrayBuffer} 待发送数据\r\n     * @memberof WSManager\r\n     */\r\n    private createMessage(msgId: number, msgBody: string): ArrayBuffer {\r\n        let bodyArray = this.getArrayNumberFromString(msgBody);\r\n        let bodyLen = bodyArray.length;\r\n        let msgHeader: MessageHeader = {\r\n            hcheck: 0,\r\n            code: 0,\r\n            flag: 0,\r\n            id: 0,\r\n            timestamp: 0,\r\n            bcheck: 0,\r\n            blen: 0,\r\n            alen: 0,\r\n        };\r\n        msgHeader.id = msgId;\r\n        msgHeader.timestamp = Date.now() / 1000;\r\n        msgHeader.blen = bodyLen;\r\n        msgHeader.bcheck = this.checkSum(bodyArray, 0, bodyLen);\r\n        let headArray = this.getHeaderToArrayNumber(msgHeader);\r\n        msgHeader.hcheck = this.checkSum(headArray, 4, 28);\r\n        headArray = this.getHeaderToArrayNumber(msgHeader);\r\n        let totalArray = headArray.concat(bodyArray);\r\n        return new Uint8Array(totalArray).buffer;\r\n    }\r\n    /**\r\n     * 把消息头转换成int32类型的字节数组\r\n     * \r\n     * @param {MessageHeader} msgHeader 字节头对象\r\n     * @returns {Array<number>} 数组\r\n     * @memberof WSManager\r\n     */\r\n    private getHeaderToArrayNumber(msgHeader: MessageHeader): Array<number> {//消息头转字节数组\r\n        let headArray = this.numberToArrayNumber(msgHeader.hcheck);\r\n        headArray = headArray.concat(this.numberToArrayNumber(msgHeader.code));\r\n        headArray = headArray.concat(this.numberToArrayNumber(msgHeader.flag));\r\n        headArray = headArray.concat(this.numberToArrayNumber(msgHeader.id));\r\n        headArray = headArray.concat(this.numberToArrayNumber(msgHeader.timestamp));\r\n        headArray = headArray.concat(this.numberToArrayNumber(msgHeader.bcheck));\r\n        headArray = headArray.concat(this.numberToArrayNumber(msgHeader.blen));\r\n        headArray = headArray.concat(this.numberToArrayNumber(msgHeader.alen));\r\n        return headArray;\r\n    }\r\n    /**\r\n     * 把数字转换为int32表示的字节数组\r\n     * \r\n     * @param {number} number 需要转换的数字\r\n     * @returns {Array<number>} 数组\r\n     * @memberof WSManager\r\n     */\r\n    private numberToArrayNumber(number: number): Array<number> {\r\n        let array = [];\r\n        array[0] = ((number >> 24) & 0xFF);\r\n        array[1] = ((number >> 16) & 0xFF);\r\n        array[2] = ((number >> 8) & 0xFF);\r\n        array[3] = (number & 0xFF);\r\n        return array;\r\n    }\r\n    /**\r\n     * 把字符串转换为字节数组\r\n     * \r\n     * @param {string} str 待转换的字符串\r\n     * @returns {Array<number>} 数组\r\n     * @memberof WSManager\r\n     */\r\n    private getArrayNumberFromString(str: string): Array<number> {\r\n        let arrayNumber: Array<number> = Array.apply([], this.StringToArrayBuffer(str));\r\n        return arrayNumber;\r\n    }\r\n    /**\r\n     * 消息数据效验\r\n     * \r\n     * @param {Array<number>} arrayNumber 待校验数组\r\n     * @param {number} offset 偏移量\r\n     * @param {number} length 长度\r\n     * @returns {number} 校验后生成的数字\r\n     * @memberof WSManager\r\n     */\r\n    private checkSum(arrayNumber: Array<number>, offset: number, length: number): number {\r\n        let hash = 0;\r\n        for (let i = offset; i < offset + length; i++) {\r\n            hash = hash << 7 ^ arrayNumber[i];\r\n        }\r\n        return hash;\r\n    }\r\n    /**\r\n     * ArrayBuffer转为字符串\r\n     * \r\n     * @param {ArrayBuffer} buf ArrayBuffer对象\r\n     * @returns {string} 转换出来的字符串\r\n     * @memberof WSManager\r\n     */\r\n    private ArrayBufferToString(buf: ArrayBuffer): string {\r\n        let str = String.fromCharCode.apply(null, new Uint8Array(buf));\r\n        str = ENCManager.getInstance().Utf8Decode(str);\r\n        return str;\r\n    }\r\n    /**\r\n     * 字符串转为ArrayBuffer对象，参数为字符串\r\n     * \r\n     * @param {string} str 待转换的字符串\r\n     * @returns {Uint8Array} 转换后的字节码\r\n     * @memberof WSManager\r\n     */\r\n    private StringToArrayBuffer(str: string): Uint8Array {\r\n        str = ENCManager.getInstance().Utf8Encode(str);\r\n        let buf = new ArrayBuffer(str.length);\r\n        let bufView = new Uint8Array(buf);\r\n        for (let i = 0, strLen = str.length; i < strLen; i++) {\r\n            bufView[i] = str.charCodeAt(i);\r\n        }\r\n        return bufView;\r\n    }\r\n    /**\r\n     * 获取延迟时间\r\n     * \r\n     * @returns {number} \r\n     * @memberof WSManager\r\n     */\r\n    getDelayTime(): number {\r\n        return this.delayTime;\r\n    }\r\n    /**\r\n     * 清理销毁\r\n     * \r\n     * @memberof WSManager\r\n     */\r\n    destroySelf(): void {\r\n        this.stopCheck();\r\n        this.url = null;\r\n        this.readyState = null;\r\n        this.ws = null;\r\n        this.sendDataArray.length = 0;\r\n        this.heartbeatEnd = 0;\r\n        this.heartbeatStart = 0;\r\n        this.intervalTime = 0;\r\n        this.delayTime = 0;\r\n        this.cb_close = null;\r\n        this.isLogin = false;\r\n\r\n        WSManager._instance = null;\r\n    }\r\n}"],"sourceRoot":"/source/","file":"project.dev.js"}